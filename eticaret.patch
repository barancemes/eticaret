Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitignore	(date 1648547424000)
+++ .gitignore	(date 1648547424000)
@@ -0,0 +1,14 @@
+/node_modules
+/public/hot
+/public/storage
+/storage/*.key
+/vendor
+.env
+.env.backup
+.phpunit.result.cache
+Homestead.json
+Homestead.yaml
+npm-debug.log
+yarn-error.log
+/.idea
+/.vscode
Index: database/migrations/2019_08_19_000000_create_failed_jobs_table.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- database/migrations/2019_08_19_000000_create_failed_jobs_table.php	(date 1648547424000)
+++ database/migrations/2019_08_19_000000_create_failed_jobs_table.php	(date 1648547424000)
@@ -0,0 +1,36 @@
+<?php
+
+use Illuminate\Database\Migrations\Migration;
+use Illuminate\Database\Schema\Blueprint;
+use Illuminate\Support\Facades\Schema;
+
+return new class extends Migration
+{
+    /**
+     * Run the migrations.
+     *
+     * @return void
+     */
+    public function up()
+    {
+        Schema::create('failed_jobs', function (Blueprint $table) {
+            $table->id();
+            $table->string('uuid')->unique();
+            $table->text('connection');
+            $table->text('queue');
+            $table->longText('payload');
+            $table->longText('exception');
+            $table->timestamp('failed_at')->useCurrent();
+        });
+    }
+
+    /**
+     * Reverse the migrations.
+     *
+     * @return void
+     */
+    public function down()
+    {
+        Schema::dropIfExists('failed_jobs');
+    }
+};
Index: composer.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- composer.json	(date 1648547424000)
+++ composer.json	(date 1648547424000)
@@ -0,0 +1,61 @@
+{
+    "name": "laravel/laravel",
+    "type": "project",
+    "description": "The Laravel Framework.",
+    "keywords": ["framework", "laravel"],
+    "license": "MIT",
+    "require": {
+        "php": "^8.0.2",
+        "guzzlehttp/guzzle": "^7.2",
+        "laravel/framework": "^9.2",
+        "laravel/sanctum": "^2.14.1",
+        "laravel/tinker": "^2.7"
+    },
+    "require-dev": {
+        "fakerphp/faker": "^1.9.1",
+        "laravel/sail": "^1.0.1",
+        "mockery/mockery": "^1.4.4",
+        "nunomaduro/collision": "^6.1",
+        "phpunit/phpunit": "^9.5.10",
+        "spatie/laravel-ignition": "^1.0"
+    },
+    "autoload": {
+        "psr-4": {
+            "App\\": "app/",
+            "Database\\Factories\\": "database/factories/",
+            "Database\\Seeders\\": "database/seeders/"
+        }
+    },
+    "autoload-dev": {
+        "psr-4": {
+            "Tests\\": "tests/"
+        }
+    },
+    "scripts": {
+        "post-autoload-dump": [
+            "Illuminate\\Foundation\\ComposerScripts::postAutoloadDump",
+            "@php artisan package:discover --ansi"
+        ],
+        "post-update-cmd": [
+            "@php artisan vendor:publish --tag=laravel-assets --ansi --force"
+        ],
+        "post-root-package-install": [
+            "@php -r \"file_exists('.env') || copy('.env.example', '.env');\""
+        ],
+        "post-create-project-cmd": [
+            "@php artisan key:generate --ansi"
+        ]
+    },
+    "extra": {
+        "laravel": {
+            "dont-discover": []
+        }
+    },
+    "config": {
+        "optimize-autoloader": true,
+        "preferred-install": "dist",
+        "sort-packages": true
+    },
+    "minimum-stability": "dev",
+    "prefer-stable": true
+}
Index: bootstrap/app.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- bootstrap/app.php	(date 1648547424000)
+++ bootstrap/app.php	(date 1648547424000)
@@ -0,0 +1,55 @@
+<?php
+
+/*
+|--------------------------------------------------------------------------
+| Create The Application
+|--------------------------------------------------------------------------
+|
+| The first thing we will do is create a new Laravel application instance
+| which serves as the "glue" for all the components of Laravel, and is
+| the IoC container for the system binding all of the various parts.
+|
+*/
+
+$app = new Illuminate\Foundation\Application(
+    $_ENV['APP_BASE_PATH'] ?? dirname(__DIR__)
+);
+
+/*
+|--------------------------------------------------------------------------
+| Bind Important Interfaces
+|--------------------------------------------------------------------------
+|
+| Next, we need to bind some important interfaces into the container so
+| we will be able to resolve them when needed. The kernels serve the
+| incoming requests to this application from both the web and CLI.
+|
+*/
+
+$app->singleton(
+    Illuminate\Contracts\Http\Kernel::class,
+    App\Http\Kernel::class
+);
+
+$app->singleton(
+    Illuminate\Contracts\Console\Kernel::class,
+    App\Console\Kernel::class
+);
+
+$app->singleton(
+    Illuminate\Contracts\Debug\ExceptionHandler::class,
+    App\Exceptions\Handler::class
+);
+
+/*
+|--------------------------------------------------------------------------
+| Return The Application
+|--------------------------------------------------------------------------
+|
+| This script returns the application instance. The instance is given to
+| the calling script so we can separate the building of the instances
+| from the actual running of the application and sending responses.
+|
+*/
+
+return $app;
Index: bootstrap/cache/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- bootstrap/cache/.gitignore	(date 1648547424000)
+++ bootstrap/cache/.gitignore	(date 1648547424000)
@@ -0,0 +1,2 @@
+*
+!.gitignore
Index: webpack.mix.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- webpack.mix.js	(date 1648547424000)
+++ webpack.mix.js	(date 1648547424000)
@@ -0,0 +1,17 @@
+const mix = require('laravel-mix');
+
+/*
+ |--------------------------------------------------------------------------
+ | Mix Asset Management
+ |--------------------------------------------------------------------------
+ |
+ | Mix provides a clean, fluent API for defining some Webpack build steps
+ | for your Laravel applications. By default, we are compiling the CSS
+ | file for the application as well as bundling up all the JS files.
+ |
+ */
+
+mix.js('resources/js/app.js', 'public/js')
+    .postCss('resources/css/app.css', 'public/css', [
+        //
+    ]);
Index: database/factories/UserFactory.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- database/factories/UserFactory.php	(date 1648547424000)
+++ database/factories/UserFactory.php	(date 1648547424000)
@@ -0,0 +1,42 @@
+<?php
+
+namespace Database\Factories;
+
+use Illuminate\Database\Eloquent\Factories\Factory;
+use Illuminate\Support\Str;
+
+/**
+ * @extends \Illuminate\Database\Eloquent\Factories\Factory<\App\Models\User>
+ */
+class UserFactory extends Factory
+{
+    /**
+     * Define the model's default state.
+     *
+     * @return array<string, mixed>
+     */
+    public function definition()
+    {
+        return [
+            'name' => $this->faker->name(),
+            'email' => $this->faker->unique()->safeEmail(),
+            'email_verified_at' => now(),
+            'password' => '$2y$10$92IXUNpkjO0rOQ5byMi.Ye4oKoEa3Ro9llC/.og/at2.uheWG/igi', // password
+            'remember_token' => Str::random(10),
+        ];
+    }
+
+    /**
+     * Indicate that the model's email address should be unverified.
+     *
+     * @return static
+     */
+    public function unverified()
+    {
+        return $this->state(function (array $attributes) {
+            return [
+                'email_verified_at' => null,
+            ];
+        });
+    }
+}
Index: .styleci.yml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .styleci.yml	(date 1648547424000)
+++ .styleci.yml	(date 1648547424000)
@@ -0,0 +1,12 @@
+php:
+  preset: laravel
+  disabled:
+    - no_unused_imports
+  finder:
+    not-name:
+      - index.php
+js:
+  finder:
+    not-name:
+      - webpack.mix.js
+css: true
Index: database/migrations/2014_10_12_000000_create_users_table.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- database/migrations/2014_10_12_000000_create_users_table.php	(date 1648547424000)
+++ database/migrations/2014_10_12_000000_create_users_table.php	(date 1648547424000)
@@ -0,0 +1,36 @@
+<?php
+
+use Illuminate\Database\Migrations\Migration;
+use Illuminate\Database\Schema\Blueprint;
+use Illuminate\Support\Facades\Schema;
+
+return new class extends Migration
+{
+    /**
+     * Run the migrations.
+     *
+     * @return void
+     */
+    public function up()
+    {
+        Schema::create('users', function (Blueprint $table) {
+            $table->id();
+            $table->string('name');
+            $table->string('email')->unique();
+            $table->timestamp('email_verified_at')->nullable();
+            $table->string('password');
+            $table->rememberToken();
+            $table->timestamps();
+        });
+    }
+
+    /**
+     * Reverse the migrations.
+     *
+     * @return void
+     */
+    public function down()
+    {
+        Schema::dropIfExists('users');
+    }
+};
Index: database/migrations/2019_12_14_000001_create_personal_access_tokens_table.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- database/migrations/2019_12_14_000001_create_personal_access_tokens_table.php	(date 1648547424000)
+++ database/migrations/2019_12_14_000001_create_personal_access_tokens_table.php	(date 1648547424000)
@@ -0,0 +1,36 @@
+<?php
+
+use Illuminate\Database\Migrations\Migration;
+use Illuminate\Database\Schema\Blueprint;
+use Illuminate\Support\Facades\Schema;
+
+return new class extends Migration
+{
+    /**
+     * Run the migrations.
+     *
+     * @return void
+     */
+    public function up()
+    {
+        Schema::create('personal_access_tokens', function (Blueprint $table) {
+            $table->id();
+            $table->morphs('tokenable');
+            $table->string('name');
+            $table->string('token', 64)->unique();
+            $table->text('abilities')->nullable();
+            $table->timestamp('last_used_at')->nullable();
+            $table->timestamps();
+        });
+    }
+
+    /**
+     * Reverse the migrations.
+     *
+     * @return void
+     */
+    public function down()
+    {
+        Schema::dropIfExists('personal_access_tokens');
+    }
+};
Index: .env.example
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .env.example	(date 1649681119175)
+++ .env.example	(date 1649681119175)
@@ -0,0 +1,52 @@
+APP_NAME=Laravel
+APP_ENV=local
+APP_KEY=
+APP_DEBUG=true
+APP_URL=http://localhost
+
+LOG_CHANNEL=stack
+LOG_DEPRECATIONS_CHANNEL=null
+LOG_LEVEL=debug
+
+DB_CONNECTION=mysql
+DB_HOST=127.0.0.1
+DB_PORT=3306
+DB_DATABASE=eticaret
+DB_USERNAME=root
+DB_PASSWORD=
+
+BROADCAST_DRIVER=log
+CACHE_DRIVER=file
+FILESYSTEM_DISK=local
+QUEUE_CONNECTION=sync
+SESSION_DRIVER=file
+SESSION_LIFETIME=120
+
+MEMCACHED_HOST=127.0.0.1
+
+REDIS_HOST=127.0.0.1
+REDIS_PASSWORD=null
+REDIS_PORT=6379
+
+MAIL_MAILER=smtp
+MAIL_HOST=mailhog
+MAIL_PORT=1025
+MAIL_USERNAME=null
+MAIL_PASSWORD=null
+MAIL_ENCRYPTION=null
+MAIL_FROM_ADDRESS="hello@example.com"
+MAIL_FROM_NAME="${APP_NAME}"
+
+AWS_ACCESS_KEY_ID=
+AWS_SECRET_ACCESS_KEY=
+AWS_DEFAULT_REGION=us-east-1
+AWS_BUCKET=
+AWS_USE_PATH_STYLE_ENDPOINT=false
+
+PUSHER_APP_ID=
+PUSHER_APP_KEY=
+PUSHER_APP_SECRET=
+PUSHER_APP_CLUSTER=mt1
+
+MIX_PUSHER_APP_KEY="${PUSHER_APP_KEY}"
+MIX_PUSHER_APP_CLUSTER="${PUSHER_APP_CLUSTER}"
Index: database/migrations/2014_10_12_100000_create_password_resets_table.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- database/migrations/2014_10_12_100000_create_password_resets_table.php	(date 1648547424000)
+++ database/migrations/2014_10_12_100000_create_password_resets_table.php	(date 1648547424000)
@@ -0,0 +1,32 @@
+<?php
+
+use Illuminate\Database\Migrations\Migration;
+use Illuminate\Database\Schema\Blueprint;
+use Illuminate\Support\Facades\Schema;
+
+return new class extends Migration
+{
+    /**
+     * Run the migrations.
+     *
+     * @return void
+     */
+    public function up()
+    {
+        Schema::create('password_resets', function (Blueprint $table) {
+            $table->string('email')->index();
+            $table->string('token');
+            $table->timestamp('created_at')->nullable();
+        });
+    }
+
+    /**
+     * Reverse the migrations.
+     *
+     * @return void
+     */
+    public function down()
+    {
+        Schema::dropIfExists('password_resets');
+    }
+};
Index: storage/framework/sessions/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- storage/framework/sessions/.gitignore	(date 1648547424000)
+++ storage/framework/sessions/.gitignore	(date 1648547424000)
@@ -0,0 +1,2 @@
+*
+!.gitignore
Index: resources/views/detay.blade.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- resources/views/detay.blade.php	(date 1649746744202)
+++ resources/views/detay.blade.php	(date 1649746744202)
@@ -0,0 +1,27 @@
+<!doctype html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport"
+          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
+
+    <meta http-equiv="X-UA-Compatible" content="ie=edge">
+    <title>DETAY | BCE GİYİM</title>
+</head>
+<body style="background: #a0aec0">
+<div class="card container" style="width: 18rem; background: gray">
+    <div class="card-body" style="background: gray">
+        <li class="list-group-item">Ürün:  {{$urun->baslik}}</li>
+    <img class="card-img-top" src="{{$urun->resim}}" alt="Card image cap">
+        <li class="list-group-item">Renk:  {{$urun->renkler->renk_adi}}</li>
+        <li class="list-group-item">Beden: {{$urun->bedenler->beden_adi}}</li>
+        <li class="list-group-item">Fiyat: {{$urun->fiyat}} TL</li>
+        <a href="{{ route('anasayfa') }}" class="btn btn-primary">Sepete Ekle</a>
+    </div>
+</div>
+    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
+    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+</body>
+</html>
Index: database/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- database/.gitignore	(date 1648547424000)
+++ database/.gitignore	(date 1648547424000)
@@ -0,0 +1,1 @@
+*.sqlite*
Index: .gitattributes
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .gitattributes	(date 1648547424000)
+++ .gitattributes	(date 1648547424000)
@@ -0,0 +1,10 @@
+* text=auto
+
+*.blade.php diff=html
+*.css diff=css
+*.html diff=html
+*.md diff=markdown
+*.php diff=php
+
+/.github export-ignore
+CHANGELOG.md export-ignore
Index: database/seeders/DatabaseSeeder.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- database/seeders/DatabaseSeeder.php	(date 1648547424000)
+++ database/seeders/DatabaseSeeder.php	(date 1648547424000)
@@ -0,0 +1,19 @@
+<?php
+
+namespace Database\Seeders;
+
+use Illuminate\Database\Console\Seeds\WithoutModelEvents;
+use Illuminate\Database\Seeder;
+
+class DatabaseSeeder extends Seeder
+{
+    /**
+     * Seed the application's database.
+     *
+     * @return void
+     */
+    public function run()
+    {
+        // \App\Models\User::factory(10)->create();
+    }
+}
Index: storage/framework/testing/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- storage/framework/testing/.gitignore	(date 1648547424000)
+++ storage/framework/testing/.gitignore	(date 1648547424000)
@@ -0,0 +1,2 @@
+*
+!.gitignore
Index: storage/framework/views/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- storage/framework/views/.gitignore	(date 1648547424000)
+++ storage/framework/views/.gitignore	(date 1648547424000)
@@ -0,0 +1,2 @@
+*
+!.gitignore
Index: storage/framework/cache/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- storage/framework/cache/.gitignore	(date 1648547424000)
+++ storage/framework/cache/.gitignore	(date 1648547424000)
@@ -0,0 +1,3 @@
+*
+!data/
+!.gitignore
Index: storage/framework/cache/data/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- storage/framework/cache/data/.gitignore	(date 1648547424000)
+++ storage/framework/cache/data/.gitignore	(date 1648547424000)
@@ -0,0 +1,2 @@
+*
+!.gitignore
Index: storage/framework/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- storage/framework/.gitignore	(date 1648547424000)
+++ storage/framework/.gitignore	(date 1648547424000)
@@ -0,0 +1,9 @@
+compiled.php
+config.php
+down
+events.scanned.php
+maintenance.php
+routes.php
+routes.scanned.php
+schedule-*
+services.json
Index: storage/app/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- storage/app/.gitignore	(date 1648547424000)
+++ storage/app/.gitignore	(date 1648547424000)
@@ -0,0 +1,3 @@
+*
+!public/
+!.gitignore
Index: storage/app/public/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- storage/app/public/.gitignore	(date 1648547424000)
+++ storage/app/public/.gitignore	(date 1648547424000)
@@ -0,0 +1,2 @@
+*
+!.gitignore
Index: storage/logs/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- storage/logs/.gitignore	(date 1648547424000)
+++ storage/logs/.gitignore	(date 1648547424000)
@@ -0,0 +1,2 @@
+*
+!.gitignore
Index: resources/views/welcome.blade.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- resources/views/welcome.blade.php	(date 1648547424000)
+++ resources/views/welcome.blade.php	(date 1648547424000)
@@ -0,0 +1,132 @@
+<!DOCTYPE html>
+<html lang="{{ str_replace('_', '-', app()->getLocale()) }}">
+    <head>
+        <meta charset="utf-8">
+        <meta name="viewport" content="width=device-width, initial-scale=1">
+
+        <title>Laravel</title>
+
+        <!-- Fonts -->
+        <link href="https://fonts.googleapis.com/css2?family=Nunito:wght@400;600;700&display=swap" rel="stylesheet">
+
+        <!-- Styles -->
+        <style>
+            /*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}a{background-color:transparent}[hidden]{display:none}html{font-family:system-ui,-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Helvetica Neue,Arial,Noto Sans,sans-serif,Apple Color Emoji,Segoe UI Emoji,Segoe UI Symbol,Noto Color Emoji;line-height:1.5}*,:after,:before{box-sizing:border-box;border:0 solid #e2e8f0}a{color:inherit;text-decoration:inherit}svg,video{display:block;vertical-align:middle}video{max-width:100%;height:auto}.bg-white{--bg-opacity:1;background-color:#fff;background-color:rgba(255,255,255,var(--bg-opacity))}.bg-gray-100{--bg-opacity:1;background-color:#f7fafc;background-color:rgba(247,250,252,var(--bg-opacity))}.border-gray-200{--border-opacity:1;border-color:#edf2f7;border-color:rgba(237,242,247,var(--border-opacity))}.border-t{border-top-width:1px}.flex{display:flex}.grid{display:grid}.hidden{display:none}.items-center{align-items:center}.justify-center{justify-content:center}.font-semibold{font-weight:600}.h-5{height:1.25rem}.h-8{height:2rem}.h-16{height:4rem}.text-sm{font-size:.875rem}.text-lg{font-size:1.125rem}.leading-7{line-height:1.75rem}.mx-auto{margin-left:auto;margin-right:auto}.ml-1{margin-left:.25rem}.mt-2{margin-top:.5rem}.mr-2{margin-right:.5rem}.ml-2{margin-left:.5rem}.mt-4{margin-top:1rem}.ml-4{margin-left:1rem}.mt-8{margin-top:2rem}.ml-12{margin-left:3rem}.-mt-px{margin-top:-1px}.max-w-6xl{max-width:72rem}.min-h-screen{min-height:100vh}.overflow-hidden{overflow:hidden}.p-6{padding:1.5rem}.py-4{padding-top:1rem;padding-bottom:1rem}.px-6{padding-left:1.5rem;padding-right:1.5rem}.pt-8{padding-top:2rem}.fixed{position:fixed}.relative{position:relative}.top-0{top:0}.right-0{right:0}.shadow{box-shadow:0 1px 3px 0 rgba(0,0,0,.1),0 1px 2px 0 rgba(0,0,0,.06)}.text-center{text-align:center}.text-gray-200{--text-opacity:1;color:#edf2f7;color:rgba(237,242,247,var(--text-opacity))}.text-gray-300{--text-opacity:1;color:#e2e8f0;color:rgba(226,232,240,var(--text-opacity))}.text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.text-gray-500{--text-opacity:1;color:#a0aec0;color:rgba(160,174,192,var(--text-opacity))}.text-gray-600{--text-opacity:1;color:#718096;color:rgba(113,128,150,var(--text-opacity))}.text-gray-700{--text-opacity:1;color:#4a5568;color:rgba(74,85,104,var(--text-opacity))}.text-gray-900{--text-opacity:1;color:#1a202c;color:rgba(26,32,44,var(--text-opacity))}.underline{text-decoration:underline}.antialiased{-webkit-font-smoothing:antialiased;-moz-osx-font-smoothing:grayscale}.w-5{width:1.25rem}.w-8{width:2rem}.w-auto{width:auto}.grid-cols-1{grid-template-columns:repeat(1,minmax(0,1fr))}@media (min-width:640px){.sm\:rounded-lg{border-radius:.5rem}.sm\:block{display:block}.sm\:items-center{align-items:center}.sm\:justify-start{justify-content:flex-start}.sm\:justify-between{justify-content:space-between}.sm\:h-20{height:5rem}.sm\:ml-0{margin-left:0}.sm\:px-6{padding-left:1.5rem;padding-right:1.5rem}.sm\:pt-0{padding-top:0}.sm\:text-left{text-align:left}.sm\:text-right{text-align:right}}@media (min-width:768px){.md\:border-t-0{border-top-width:0}.md\:border-l{border-left-width:1px}.md\:grid-cols-2{grid-template-columns:repeat(2,minmax(0,1fr))}}@media (min-width:1024px){.lg\:px-8{padding-left:2rem;padding-right:2rem}}@media (prefers-color-scheme:dark){.dark\:bg-gray-800{--bg-opacity:1;background-color:#2d3748;background-color:rgba(45,55,72,var(--bg-opacity))}.dark\:bg-gray-900{--bg-opacity:1;background-color:#1a202c;background-color:rgba(26,32,44,var(--bg-opacity))}.dark\:border-gray-700{--border-opacity:1;border-color:#4a5568;border-color:rgba(74,85,104,var(--border-opacity))}.dark\:text-white{--text-opacity:1;color:#fff;color:rgba(255,255,255,var(--text-opacity))}.dark\:text-gray-400{--text-opacity:1;color:#cbd5e0;color:rgba(203,213,224,var(--text-opacity))}.dark\:text-gray-500{--tw-text-opacity:1;color:#6b7280;color:rgba(107,114,128,var(--tw-text-opacity))}}
+        </style>
+
+        <style>
+            body {
+                font-family: 'Nunito', sans-serif;
+            }
+        </style>
+    </head>
+    <body class="antialiased">
+        <div class="relative flex items-top justify-center min-h-screen bg-gray-100 dark:bg-gray-900 sm:items-center py-4 sm:pt-0">
+            @if (Route::has('login'))
+                <div class="hidden fixed top-0 right-0 px-6 py-4 sm:block">
+                    @auth
+                        <a href="{{ url('/home') }}" class="text-sm text-gray-700 dark:text-gray-500 underline">Home</a>
+                    @else
+                        <a href="{{ route('login') }}" class="text-sm text-gray-700 dark:text-gray-500 underline">Log in</a>
+
+                        @if (Route::has('register'))
+                            <a href="{{ route('register') }}" class="ml-4 text-sm text-gray-700 dark:text-gray-500 underline">Register</a>
+                        @endif
+                    @endauth
+                </div>
+            @endif
+
+            <div class="max-w-6xl mx-auto sm:px-6 lg:px-8">
+                <div class="flex justify-center pt-8 sm:justify-start sm:pt-0">
+                    <svg viewBox="0 0 651 192" fill="none" xmlns="http://www.w3.org/2000/svg" class="h-16 w-auto text-gray-700 sm:h-20">
+                        <g clip-path="url(#clip0)" fill="#EF3B2D">
+                            <path d="M248.032 44.676h-16.466v100.23h47.394v-14.748h-30.928V44.676zM337.091 87.202c-2.101-3.341-5.083-5.965-8.949-7.875-3.865-1.909-7.756-2.864-11.669-2.864-5.062 0-9.69.931-13.89 2.792-4.201 1.861-7.804 4.417-10.811 7.661-3.007 3.246-5.347 6.993-7.016 11.239-1.672 4.249-2.506 8.713-2.506 13.389 0 4.774.834 9.26 2.506 13.459 1.669 4.202 4.009 7.925 7.016 11.169 3.007 3.246 6.609 5.799 10.811 7.66 4.199 1.861 8.828 2.792 13.89 2.792 3.913 0 7.804-.955 11.669-2.863 3.866-1.908 6.849-4.533 8.949-7.875v9.021h15.607V78.182h-15.607v9.02zm-1.431 32.503c-.955 2.578-2.291 4.821-4.009 6.73-1.719 1.91-3.795 3.437-6.229 4.582-2.435 1.146-5.133 1.718-8.091 1.718-2.96 0-5.633-.572-8.019-1.718-2.387-1.146-4.438-2.672-6.156-4.582-1.719-1.909-3.032-4.152-3.938-6.73-.909-2.577-1.36-5.298-1.36-8.161 0-2.864.451-5.585 1.36-8.162.905-2.577 2.219-4.819 3.938-6.729 1.718-1.908 3.77-3.437 6.156-4.582 2.386-1.146 5.059-1.718 8.019-1.718 2.958 0 5.656.572 8.091 1.718 2.434 1.146 4.51 2.674 6.229 4.582 1.718 1.91 3.054 4.152 4.009 6.729.953 2.577 1.432 5.298 1.432 8.162-.001 2.863-.479 5.584-1.432 8.161zM463.954 87.202c-2.101-3.341-5.083-5.965-8.949-7.875-3.865-1.909-7.756-2.864-11.669-2.864-5.062 0-9.69.931-13.89 2.792-4.201 1.861-7.804 4.417-10.811 7.661-3.007 3.246-5.347 6.993-7.016 11.239-1.672 4.249-2.506 8.713-2.506 13.389 0 4.774.834 9.26 2.506 13.459 1.669 4.202 4.009 7.925 7.016 11.169 3.007 3.246 6.609 5.799 10.811 7.66 4.199 1.861 8.828 2.792 13.89 2.792 3.913 0 7.804-.955 11.669-2.863 3.866-1.908 6.849-4.533 8.949-7.875v9.021h15.607V78.182h-15.607v9.02zm-1.432 32.503c-.955 2.578-2.291 4.821-4.009 6.73-1.719 1.91-3.795 3.437-6.229 4.582-2.435 1.146-5.133 1.718-8.091 1.718-2.96 0-5.633-.572-8.019-1.718-2.387-1.146-4.438-2.672-6.156-4.582-1.719-1.909-3.032-4.152-3.938-6.73-.909-2.577-1.36-5.298-1.36-8.161 0-2.864.451-5.585 1.36-8.162.905-2.577 2.219-4.819 3.938-6.729 1.718-1.908 3.77-3.437 6.156-4.582 2.386-1.146 5.059-1.718 8.019-1.718 2.958 0 5.656.572 8.091 1.718 2.434 1.146 4.51 2.674 6.229 4.582 1.718 1.91 3.054 4.152 4.009 6.729.953 2.577 1.432 5.298 1.432 8.162 0 2.863-.479 5.584-1.432 8.161zM650.772 44.676h-15.606v100.23h15.606V44.676zM365.013 144.906h15.607V93.538h26.776V78.182h-42.383v66.724zM542.133 78.182l-19.616 51.096-19.616-51.096h-15.808l25.617 66.724h19.614l25.617-66.724h-15.808zM591.98 76.466c-19.112 0-34.239 15.706-34.239 35.079 0 21.416 14.641 35.079 36.239 35.079 12.088 0 19.806-4.622 29.234-14.688l-10.544-8.158c-.006.008-7.958 10.449-19.832 10.449-13.802 0-19.612-11.127-19.612-16.884h51.777c2.72-22.043-11.772-40.877-33.023-40.877zm-18.713 29.28c.12-1.284 1.917-16.884 18.589-16.884 16.671 0 18.697 15.598 18.813 16.884h-37.402zM184.068 43.892c-.024-.088-.073-.165-.104-.25-.058-.157-.108-.316-.191-.46-.056-.097-.137-.176-.203-.265-.087-.117-.161-.242-.265-.345-.085-.086-.194-.148-.29-.223-.109-.085-.206-.182-.327-.252l-.002-.001-.002-.002-35.648-20.524a2.971 2.971 0 00-2.964 0l-35.647 20.522-.002.002-.002.001c-.121.07-.219.167-.327.252-.096.075-.205.138-.29.223-.103.103-.178.228-.265.345-.066.089-.147.169-.203.265-.083.144-.133.304-.191.46-.031.085-.08.162-.104.25-.067.249-.103.51-.103.776v38.979l-29.706 17.103V24.493a3 3 0 00-.103-.776c-.024-.088-.073-.165-.104-.25-.058-.157-.108-.316-.191-.46-.056-.097-.137-.176-.203-.265-.087-.117-.161-.242-.265-.345-.085-.086-.194-.148-.29-.223-.109-.085-.206-.182-.327-.252l-.002-.001-.002-.002L40.098 1.396a2.971 2.971 0 00-2.964 0L1.487 21.919l-.002.002-.002.001c-.121.07-.219.167-.327.252-.096.075-.205.138-.29.223-.103.103-.178.228-.265.345-.066.089-.147.169-.203.265-.083.144-.133.304-.191.46-.031.085-.08.162-.104.25-.067.249-.103.51-.103.776v122.09c0 1.063.568 2.044 1.489 2.575l71.293 41.045c.156.089.324.143.49.202.078.028.15.074.23.095a2.98 2.98 0 001.524 0c.069-.018.132-.059.2-.083.176-.061.354-.119.519-.214l71.293-41.045a2.971 2.971 0 001.489-2.575v-38.979l34.158-19.666a2.971 2.971 0 001.489-2.575V44.666a3.075 3.075 0 00-.106-.774zM74.255 143.167l-29.648-16.779 31.136-17.926.001-.001 34.164-19.669 29.674 17.084-21.772 12.428-43.555 24.863zm68.329-76.259v33.841l-12.475-7.182-17.231-9.92V49.806l12.475 7.182 17.231 9.92zm2.97-39.335l29.693 17.095-29.693 17.095-29.693-17.095 29.693-17.095zM54.06 114.089l-12.475 7.182V46.733l17.231-9.92 12.475-7.182v74.537l-17.231 9.921zM38.614 7.398l29.693 17.095-29.693 17.095L8.921 24.493 38.614 7.398zM5.938 29.632l12.475 7.182 17.231 9.92v79.676l.001.005-.001.006c0 .114.032.221.045.333.017.146.021.294.059.434l.002.007c.032.117.094.222.14.334.051.124.088.255.156.371a.036.036 0 00.004.009c.061.105.149.191.222.288.081.105.149.22.244.314l.008.01c.084.083.19.142.284.215.106.083.202.178.32.247l.013.005.011.008 34.139 19.321v34.175L5.939 144.867V29.632h-.001zm136.646 115.235l-65.352 37.625V148.31l48.399-27.628 16.953-9.677v33.862zm35.646-61.22l-29.706 17.102V66.908l17.231-9.92 12.475-7.182v33.841z"/>
+                        </g>
+                    </svg>
+                </div>
+
+                <div class="mt-8 bg-white dark:bg-gray-800 overflow-hidden shadow sm:rounded-lg">
+                    <div class="grid grid-cols-1 md:grid-cols-2">
+                        <div class="p-6">
+                            <div class="flex items-center">
+                                <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="w-8 h-8 text-gray-500"><path d="M12 6.253v13m0-13C10.832 5.477 9.246 5 7.5 5S4.168 5.477 3 6.253v13C4.168 18.477 5.754 18 7.5 18s3.332.477 4.5 1.253m0-13C13.168 5.477 14.754 5 16.5 5c1.747 0 3.332.477 4.5 1.253v13C19.832 18.477 18.247 18 16.5 18c-1.746 0-3.332.477-4.5 1.253"></path></svg>
+                                <div class="ml-4 text-lg leading-7 font-semibold"><a href="https://laravel.com/docs" class="underline text-gray-900 dark:text-white">Documentation</a></div>
+                            </div>
+
+                            <div class="ml-12">
+                                <div class="mt-2 text-gray-600 dark:text-gray-400 text-sm">
+                                    Laravel has wonderful, thorough documentation covering every aspect of the framework. Whether you are new to the framework or have previous experience with Laravel, we recommend reading all of the documentation from beginning to end.
+                                </div>
+                            </div>
+                        </div>
+
+                        <div class="p-6 border-t border-gray-200 dark:border-gray-700 md:border-t-0 md:border-l">
+                            <div class="flex items-center">
+                                <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="w-8 h-8 text-gray-500"><path d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path><path d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path></svg>
+                                <div class="ml-4 text-lg leading-7 font-semibold"><a href="https://laracasts.com" class="underline text-gray-900 dark:text-white">Laracasts</a></div>
+                            </div>
+
+                            <div class="ml-12">
+                                <div class="mt-2 text-gray-600 dark:text-gray-400 text-sm">
+                                    Laracasts offers thousands of video tutorials on Laravel, PHP, and JavaScript development. Check them out, see for yourself, and massively level up your development skills in the process.
+                                </div>
+                            </div>
+                        </div>
+
+                        <div class="p-6 border-t border-gray-200 dark:border-gray-700">
+                            <div class="flex items-center">
+                                <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="w-8 h-8 text-gray-500"><path d="M7 8h10M7 12h4m1 8l-4-4H5a2 2 0 01-2-2V6a2 2 0 012-2h14a2 2 0 012 2v8a2 2 0 01-2 2h-3l-4 4z"></path></svg>
+                                <div class="ml-4 text-lg leading-7 font-semibold"><a href="https://laravel-news.com/" class="underline text-gray-900 dark:text-white">Laravel News</a></div>
+                            </div>
+
+                            <div class="ml-12">
+                                <div class="mt-2 text-gray-600 dark:text-gray-400 text-sm">
+                                    Laravel News is a community driven portal and newsletter aggregating all of the latest and most important news in the Laravel ecosystem, including new package releases and tutorials.
+                                </div>
+                            </div>
+                        </div>
+
+                        <div class="p-6 border-t border-gray-200 dark:border-gray-700 md:border-l">
+                            <div class="flex items-center">
+                                <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="w-8 h-8 text-gray-500"><path d="M3.055 11H5a2 2 0 012 2v1a2 2 0 002 2 2 2 0 012 2v2.945M8 3.935V5.5A2.5 2.5 0 0010.5 8h.5a2 2 0 012 2 2 2 0 104 0 2 2 0 012-2h1.064M15 20.488V18a2 2 0 012-2h3.064M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path></svg>
+                                <div class="ml-4 text-lg leading-7 font-semibold text-gray-900 dark:text-white">Vibrant Ecosystem</div>
+                            </div>
+
+                            <div class="ml-12">
+                                <div class="mt-2 text-gray-600 dark:text-gray-400 text-sm">
+                                    Laravel's robust library of first-party tools and libraries, such as <a href="https://forge.laravel.com" class="underline">Forge</a>, <a href="https://vapor.laravel.com" class="underline">Vapor</a>, <a href="https://nova.laravel.com" class="underline">Nova</a>, and <a href="https://envoyer.io" class="underline">Envoyer</a> help you take your projects to the next level. Pair them with powerful open source libraries like <a href="https://laravel.com/docs/billing" class="underline">Cashier</a>, <a href="https://laravel.com/docs/dusk" class="underline">Dusk</a>, <a href="https://laravel.com/docs/broadcasting" class="underline">Echo</a>, <a href="https://laravel.com/docs/horizon" class="underline">Horizon</a>, <a href="https://laravel.com/docs/sanctum" class="underline">Sanctum</a>, <a href="https://laravel.com/docs/telescope" class="underline">Telescope</a>, and more.
+                                </div>
+                            </div>
+                        </div>
+                    </div>
+                </div>
+
+                <div class="flex justify-center mt-4 sm:items-center sm:justify-between">
+                    <div class="text-center text-sm text-gray-500 sm:text-left">
+                        <div class="flex items-center">
+                            <svg fill="none" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" stroke="currentColor" class="-mt-px w-5 h-5 text-gray-400">
+                                <path d="M3 3h2l.4 2M7 13h10l4-8H5.4M7 13L5.4 5M7 13l-2.293 2.293c-.63.63-.184 1.707.707 1.707H17m0 0a2 2 0 100 4 2 2 0 000-4zm-8 2a2 2 0 11-4 0 2 2 0 014 0z"></path>
+                            </svg>
+
+                            <a href="https://laravel.bigcartel.com" class="ml-1 underline">
+                                Shop
+                            </a>
+
+                            <svg fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" viewBox="0 0 24 24" class="ml-4 -mt-px w-5 h-5 text-gray-400">
+                                <path d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
+                            </svg>
+
+                            <a href="https://github.com/sponsors/taylorotwell" class="ml-1 underline">
+                                Sponsor
+                            </a>
+                        </div>
+                    </div>
+
+                    <div class="ml-4 text-center text-sm text-gray-500 sm:text-right sm:ml-0">
+                        Laravel v{{ Illuminate\Foundation\Application::VERSION }} (PHP v{{ PHP_VERSION }})
+                    </div>
+                </div>
+            </div>
+        </div>
+    </body>
+</html>
Index: resources/views/anasayfa.blade.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- resources/views/anasayfa.blade.php	(date 1649749701386)
+++ resources/views/anasayfa.blade.php	(date 1649749701386)
@@ -0,0 +1,46 @@
+<!doctype html>
+<html lang="en">
+<head>
+    <meta charset="UTF-8">
+    <meta name="viewport"
+          content="width=device-width, user-scalable=no, initial-scale=1.0, maximum-scale=1.0, minimum-scale=1.0">
+    <meta http-equiv="X-UA-Compatible" content="ie=edge">
+    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
+          integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">
+    <title>Ürünler | BCE GİYİM</title>
+</head>
+<body style="background: #a0aec0">
+<div class="container">
+    <div class="row">
+        @foreach($urunler as $urun)
+            <div class="card col-2  mt-5 mx-5" style="width: 18rem; background: gray">
+                <li class="list-group-item" value="{{ $urun->baslik }}">Başlık: {{ $urun->baslik }}</li>
+                <img class="card-img-top" style="height: 100%" src="{{$urun->resim}}" alt="Card image cap">
+                <ul class="list-group list-group-flush">
+                    <li class="list-group-item">Renk:
+                        <select name="renk">
+                            @foreach($renkler as $renk)
+                                <option value="{{$renk->renk_adi}}">{{$renk->renk_adi}}</option>
+                            @endforeach
+                        </select>
+                    </li>
+                    <li class="list-group-item">Beden:
+                        <select name="renk">
+                            @foreach($bedenler as $beden)
+                                <option value="{{$beden->beden_adi}}">{{$beden->beden_adi}}</option>
+                            @endforeach
+                        </select></li>
+                </ul>
+                <div class="card-body" style="background: gray;">
+                    <a href="#" class="card-link btn btn-success">Sepete Ekle</a>
+                    <a href="{{route('detay',$urun->id)}}" class="card-link btn btn-primary">Detay</a>
+                </div>
+            </div>
+        @endforeach
+    </div>
+</div>
+</body>
+<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.10.2/dist/umd/popper.min.js" integrity="sha384-7+zCNj/IqJ95wo16oMtfsKbZ9ccEh31eOz1HGyDuCQ6wgnyJNSYdrPa03rtR1zdB" crossorigin="anonymous"></script>
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.min.js" integrity="sha384-QJHtvGhmr9XOIpI6YVutG+2QOK9T+ZnN4kzFN1RtK3zEFEIsxhlmWl5/YESvpZ13" crossorigin="anonymous"></script>
+<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js" integrity="sha384-ka7Sk0Gln4gmtz2MlQnikT1wXgYsOg+OMhuP+IlRH9sENBO0LRn5q+8nbTov4+1p" crossorigin="anonymous"></script>
+</html>
Index: routes/web.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- routes/web.php	(date 1649688466914)
+++ routes/web.php	(date 1649688466914)
@@ -0,0 +1,22 @@
+<?php
+
+use Illuminate\Support\Facades\Route;
+
+/*
+|--------------------------------------------------------------------------
+| Web Routes
+|--------------------------------------------------------------------------
+|
+| Here is where you can register web routes for your application. These
+| routes are loaded by the RouteServiceProvider within a group which
+| contains the "web" middleware group. Now create something great!
+|
+*/
+
+Route::get('/', function () {
+    return view('welcome');
+});
+Route::get('/anasayfa',[\App\Http\Controllers\AnasayfaController::class,'index'])->name('anasayfa');
+Route::get('/detay/{id}',[\App\Http\Controllers\DetayController::class,'index'])->name('detay');
+Route::get('/renk',[\App\Http\Controllers\AnasayfaController::class,'renkler'])->name('renkler');
+
Index: routes/console.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- routes/console.php	(date 1648547424000)
+++ routes/console.php	(date 1648547424000)
@@ -0,0 +1,19 @@
+<?php
+
+use Illuminate\Foundation\Inspiring;
+use Illuminate\Support\Facades\Artisan;
+
+/*
+|--------------------------------------------------------------------------
+| Console Routes
+|--------------------------------------------------------------------------
+|
+| This file is where you may define all of your Closure based console
+| commands. Each Closure is bound to a command instance allowing a
+| simple approach to interacting with each command's IO methods.
+|
+*/
+
+Artisan::command('inspire', function () {
+    $this->comment(Inspiring::quote());
+})->purpose('Display an inspiring quote');
Index: routes/api.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- routes/api.php	(date 1648547424000)
+++ routes/api.php	(date 1648547424000)
@@ -0,0 +1,19 @@
+<?php
+
+use Illuminate\Http\Request;
+use Illuminate\Support\Facades\Route;
+
+/*
+|--------------------------------------------------------------------------
+| API Routes
+|--------------------------------------------------------------------------
+|
+| Here is where you can register API routes for your application. These
+| routes are loaded by the RouteServiceProvider within a group which
+| is assigned the "api" middleware group. Enjoy building your API!
+|
+*/
+
+Route::middleware('auth:sanctum')->get('/user', function (Request $request) {
+    return $request->user();
+});
Index: routes/channels.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- routes/channels.php	(date 1648547424000)
+++ routes/channels.php	(date 1648547424000)
@@ -0,0 +1,18 @@
+<?php
+
+use Illuminate\Support\Facades\Broadcast;
+
+/*
+|--------------------------------------------------------------------------
+| Broadcast Channels
+|--------------------------------------------------------------------------
+|
+| Here you may register all of the event broadcasting channels that your
+| application supports. The given channel authorization callbacks are
+| used to check if an authenticated user can listen to the channel.
+|
+*/
+
+Broadcast::channel('App.Models.User.{id}', function ($user, $id) {
+    return (int) $user->id === (int) $id;
+});
Index: public/index.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- public/index.php	(date 1648547424000)
+++ public/index.php	(date 1648547424000)
@@ -0,0 +1,55 @@
+<?php
+
+use Illuminate\Contracts\Http\Kernel;
+use Illuminate\Http\Request;
+
+define('LARAVEL_START', microtime(true));
+
+/*
+|--------------------------------------------------------------------------
+| Check If The Application Is Under Maintenance
+|--------------------------------------------------------------------------
+|
+| If the application is in maintenance / demo mode via the "down" command
+| we will load this file so that any pre-rendered content can be shown
+| instead of starting the framework, which could cause an exception.
+|
+*/
+
+if (file_exists($maintenance = __DIR__.'/../storage/framework/maintenance.php')) {
+    require $maintenance;
+}
+
+/*
+|--------------------------------------------------------------------------
+| Register The Auto Loader
+|--------------------------------------------------------------------------
+|
+| Composer provides a convenient, automatically generated class loader for
+| this application. We just need to utilize it! We'll simply require it
+| into the script here so we don't need to manually load our classes.
+|
+*/
+
+require __DIR__.'/../vendor/autoload.php';
+
+/*
+|--------------------------------------------------------------------------
+| Run The Application
+|--------------------------------------------------------------------------
+|
+| Once we have the application, we can handle the incoming request using
+| the application's HTTP kernel. Then, we will send the response back
+| to this client's browser, allowing them to enjoy our application.
+|
+*/
+
+$app = require_once __DIR__.'/../bootstrap/app.php';
+
+$kernel = $app->make(Kernel::class);
+
+$response = $kernel->handle(
+    $request = Request::capture()
+)->send();
+
+$kernel->terminate($request, $response);
Index: public/robots.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- public/robots.txt	(date 1648547424000)
+++ public/robots.txt	(date 1648547424000)
@@ -0,0 +1,2 @@
+User-agent: *
+Disallow:
Index: public/.htaccess
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- public/.htaccess	(date 1648547424000)
+++ public/.htaccess	(date 1648547424000)
@@ -0,0 +1,21 @@
+<IfModule mod_rewrite.c>
+    <IfModule mod_negotiation.c>
+        Options -MultiViews -Indexes
+    </IfModule>
+
+    RewriteEngine On
+
+    # Handle Authorization Header
+    RewriteCond %{HTTP:Authorization} .
+    RewriteRule .* - [E=HTTP_AUTHORIZATION:%{HTTP:Authorization}]
+
+    # Redirect Trailing Slashes If Not A Folder...
+    RewriteCond %{REQUEST_FILENAME} !-d
+    RewriteCond %{REQUEST_URI} (.+)/$
+    RewriteRule ^ %1 [L,R=301]
+
+    # Send Requests To Front Controller...
+    RewriteCond %{REQUEST_FILENAME} !-d
+    RewriteCond %{REQUEST_FILENAME} !-f
+    RewriteRule ^ index.php [L]
+</IfModule>
Index: config/view.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/view.php	(date 1648547424000)
+++ config/view.php	(date 1648547424000)
@@ -0,0 +1,36 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | View Storage Paths
+    |--------------------------------------------------------------------------
+    |
+    | Most templating systems load templates from disk. Here you may specify
+    | an array of paths that should be checked for your views. Of course
+    | the usual Laravel view path has already been registered for you.
+    |
+    */
+
+    'paths' => [
+        resource_path('views'),
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Compiled View Path
+    |--------------------------------------------------------------------------
+    |
+    | This option determines where all the compiled Blade templates will be
+    | stored for your application. Typically, this is within the storage
+    | directory. However, as usual, you are free to change this value.
+    |
+    */
+
+    'compiled' => env(
+        'VIEW_COMPILED_PATH',
+        realpath(storage_path('framework/views'))
+    ),
+
+];
Index: config/broadcasting.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/broadcasting.php	(date 1648547424000)
+++ config/broadcasting.php	(date 1648547424000)
@@ -0,0 +1,67 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Default Broadcaster
+    |--------------------------------------------------------------------------
+    |
+    | This option controls the default broadcaster that will be used by the
+    | framework when an event needs to be broadcast. You may set this to
+    | any of the connections defined in the "connections" array below.
+    |
+    | Supported: "pusher", "ably", "redis", "log", "null"
+    |
+    */
+
+    'default' => env('BROADCAST_DRIVER', 'null'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Broadcast Connections
+    |--------------------------------------------------------------------------
+    |
+    | Here you may define all of the broadcast connections that will be used
+    | to broadcast events to other systems or over websockets. Samples of
+    | each available type of connection are provided inside this array.
+    |
+    */
+
+    'connections' => [
+
+        'pusher' => [
+            'driver' => 'pusher',
+            'key' => env('PUSHER_APP_KEY'),
+            'secret' => env('PUSHER_APP_SECRET'),
+            'app_id' => env('PUSHER_APP_ID'),
+            'options' => [
+                'cluster' => env('PUSHER_APP_CLUSTER'),
+                'useTLS' => true,
+            ],
+            'client_options' => [
+                // Guzzle client options: https://docs.guzzlephp.org/en/stable/request-options.html
+            ],
+        ],
+
+        'ably' => [
+            'driver' => 'ably',
+            'key' => env('ABLY_KEY'),
+        ],
+
+        'redis' => [
+            'driver' => 'redis',
+            'connection' => 'default',
+        ],
+
+        'log' => [
+            'driver' => 'log',
+        ],
+
+        'null' => [
+            'driver' => 'null',
+        ],
+
+    ],
+
+];
Index: config/auth.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/auth.php	(date 1648547424000)
+++ config/auth.php	(date 1648547424000)
@@ -0,0 +1,111 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Authentication Defaults
+    |--------------------------------------------------------------------------
+    |
+    | This option controls the default authentication "guard" and password
+    | reset options for your application. You may change these defaults
+    | as required, but they're a perfect start for most applications.
+    |
+    */
+
+    'defaults' => [
+        'guard' => 'web',
+        'passwords' => 'users',
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Authentication Guards
+    |--------------------------------------------------------------------------
+    |
+    | Next, you may define every authentication guard for your application.
+    | Of course, a great default configuration has been defined for you
+    | here which uses session storage and the Eloquent user provider.
+    |
+    | All authentication drivers have a user provider. This defines how the
+    | users are actually retrieved out of your database or other storage
+    | mechanisms used by this application to persist your user's data.
+    |
+    | Supported: "session"
+    |
+    */
+
+    'guards' => [
+        'web' => [
+            'driver' => 'session',
+            'provider' => 'users',
+        ],
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | User Providers
+    |--------------------------------------------------------------------------
+    |
+    | All authentication drivers have a user provider. This defines how the
+    | users are actually retrieved out of your database or other storage
+    | mechanisms used by this application to persist your user's data.
+    |
+    | If you have multiple user tables or models you may configure multiple
+    | sources which represent each model / table. These sources may then
+    | be assigned to any extra authentication guards you have defined.
+    |
+    | Supported: "database", "eloquent"
+    |
+    */
+
+    'providers' => [
+        'users' => [
+            'driver' => 'eloquent',
+            'model' => App\Models\User::class,
+        ],
+
+        // 'users' => [
+        //     'driver' => 'database',
+        //     'table' => 'users',
+        // ],
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Resetting Passwords
+    |--------------------------------------------------------------------------
+    |
+    | You may specify multiple password reset configurations if you have more
+    | than one user table or model in the application and you want to have
+    | separate password reset settings based on the specific user types.
+    |
+    | The expire time is the number of minutes that each reset token will be
+    | considered valid. This security feature keeps tokens short-lived so
+    | they have less time to be guessed. You may change this as needed.
+    |
+    */
+
+    'passwords' => [
+        'users' => [
+            'provider' => 'users',
+            'table' => 'password_resets',
+            'expire' => 60,
+            'throttle' => 60,
+        ],
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Password Confirmation Timeout
+    |--------------------------------------------------------------------------
+    |
+    | Here you may define the amount of seconds before a password confirmation
+    | times out and the user is prompted to re-enter their password via the
+    | confirmation screen. By default, the timeout lasts for three hours.
+    |
+    */
+
+    'password_timeout' => 10800,
+
+];
Index: config/hashing.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/hashing.php	(date 1648547424000)
+++ config/hashing.php	(date 1648547424000)
@@ -0,0 +1,52 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Default Hash Driver
+    |--------------------------------------------------------------------------
+    |
+    | This option controls the default hash driver that will be used to hash
+    | passwords for your application. By default, the bcrypt algorithm is
+    | used; however, you remain free to modify this option if you wish.
+    |
+    | Supported: "bcrypt", "argon", "argon2id"
+    |
+    */
+
+    'driver' => 'bcrypt',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Bcrypt Options
+    |--------------------------------------------------------------------------
+    |
+    | Here you may specify the configuration options that should be used when
+    | passwords are hashed using the Bcrypt algorithm. This will allow you
+    | to control the amount of time it takes to hash the given password.
+    |
+    */
+
+    'bcrypt' => [
+        'rounds' => env('BCRYPT_ROUNDS', 10),
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Argon Options
+    |--------------------------------------------------------------------------
+    |
+    | Here you may specify the configuration options that should be used when
+    | passwords are hashed using the Argon algorithm. These will allow you
+    | to control the amount of time it takes to hash the given password.
+    |
+    */
+
+    'argon' => [
+        'memory' => 65536,
+        'threads' => 1,
+        'time' => 4,
+    ],
+
+];
Index: config/cache.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/cache.php	(date 1648547424000)
+++ config/cache.php	(date 1648547424000)
@@ -0,0 +1,110 @@
+<?php
+
+use Illuminate\Support\Str;
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Default Cache Store
+    |--------------------------------------------------------------------------
+    |
+    | This option controls the default cache connection that gets used while
+    | using this caching library. This connection is used when another is
+    | not explicitly specified when executing a given caching function.
+    |
+    */
+
+    'default' => env('CACHE_DRIVER', 'file'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Cache Stores
+    |--------------------------------------------------------------------------
+    |
+    | Here you may define all of the cache "stores" for your application as
+    | well as their drivers. You may even define multiple stores for the
+    | same cache driver to group types of items stored in your caches.
+    |
+    | Supported drivers: "apc", "array", "database", "file",
+    |         "memcached", "redis", "dynamodb", "octane", "null"
+    |
+    */
+
+    'stores' => [
+
+        'apc' => [
+            'driver' => 'apc',
+        ],
+
+        'array' => [
+            'driver' => 'array',
+            'serialize' => false,
+        ],
+
+        'database' => [
+            'driver' => 'database',
+            'table' => 'cache',
+            'connection' => null,
+            'lock_connection' => null,
+        ],
+
+        'file' => [
+            'driver' => 'file',
+            'path' => storage_path('framework/cache/data'),
+        ],
+
+        'memcached' => [
+            'driver' => 'memcached',
+            'persistent_id' => env('MEMCACHED_PERSISTENT_ID'),
+            'sasl' => [
+                env('MEMCACHED_USERNAME'),
+                env('MEMCACHED_PASSWORD'),
+            ],
+            'options' => [
+                // Memcached::OPT_CONNECT_TIMEOUT => 2000,
+            ],
+            'servers' => [
+                [
+                    'host' => env('MEMCACHED_HOST', '127.0.0.1'),
+                    'port' => env('MEMCACHED_PORT', 11211),
+                    'weight' => 100,
+                ],
+            ],
+        ],
+
+        'redis' => [
+            'driver' => 'redis',
+            'connection' => 'cache',
+            'lock_connection' => 'default',
+        ],
+
+        'dynamodb' => [
+            'driver' => 'dynamodb',
+            'key' => env('AWS_ACCESS_KEY_ID'),
+            'secret' => env('AWS_SECRET_ACCESS_KEY'),
+            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
+            'table' => env('DYNAMODB_CACHE_TABLE', 'cache'),
+            'endpoint' => env('DYNAMODB_ENDPOINT'),
+        ],
+
+        'octane' => [
+            'driver' => 'octane',
+        ],
+
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Cache Key Prefix
+    |--------------------------------------------------------------------------
+    |
+    | When utilizing the APC, database, memcached, Redis, or DynamoDB cache
+    | stores there might be other applications using the same cache. For
+    | that reason, you may prefix every cache key to avoid collisions.
+    |
+    */
+
+    'prefix' => env('CACHE_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_cache_'),
+
+];
Index: config/app.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/app.php	(date 1648547424000)
+++ config/app.php	(date 1648547424000)
@@ -0,0 +1,197 @@
+<?php
+
+use Illuminate\Support\Facades\Facade;
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Application Name
+    |--------------------------------------------------------------------------
+    |
+    | This value is the name of your application. This value is used when the
+    | framework needs to place the application's name in a notification or
+    | any other location as required by the application or its packages.
+    |
+    */
+
+    'name' => env('APP_NAME', 'Laravel'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Application Environment
+    |--------------------------------------------------------------------------
+    |
+    | This value determines the "environment" your application is currently
+    | running in. This may determine how you prefer to configure various
+    | services the application utilizes. Set this in your ".env" file.
+    |
+    */
+
+    'env' => env('APP_ENV', 'production'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Application Debug Mode
+    |--------------------------------------------------------------------------
+    |
+    | When your application is in debug mode, detailed error messages with
+    | stack traces will be shown on every error that occurs within your
+    | application. If disabled, a simple generic error page is shown.
+    |
+    */
+
+    'debug' => (bool) env('APP_DEBUG', false),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Application URL
+    |--------------------------------------------------------------------------
+    |
+    | This URL is used by the console to properly generate URLs when using
+    | the Artisan command line tool. You should set this to the root of
+    | your application so that it is used when running Artisan tasks.
+    |
+    */
+
+    'url' => env('APP_URL', 'http://localhost'),
+
+    'asset_url' => env('ASSET_URL'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Application Timezone
+    |--------------------------------------------------------------------------
+    |
+    | Here you may specify the default timezone for your application, which
+    | will be used by the PHP date and date-time functions. We have gone
+    | ahead and set this to a sensible default for you out of the box.
+    |
+    */
+
+    'timezone' => 'UTC',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Application Locale Configuration
+    |--------------------------------------------------------------------------
+    |
+    | The application locale determines the default locale that will be used
+    | by the translation service provider. You are free to set this value
+    | to any of the locales which will be supported by the application.
+    |
+    */
+
+    'locale' => 'en',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Application Fallback Locale
+    |--------------------------------------------------------------------------
+    |
+    | The fallback locale determines the locale to use when the current one
+    | is not available. You may change the value to correspond to any of
+    | the language folders that are provided through your application.
+    |
+    */
+
+    'fallback_locale' => 'en',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Faker Locale
+    |--------------------------------------------------------------------------
+    |
+    | This locale will be used by the Faker PHP library when generating fake
+    | data for your database seeds. For example, this will be used to get
+    | localized telephone numbers, street address information and more.
+    |
+    */
+
+    'faker_locale' => 'en_US',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Encryption Key
+    |--------------------------------------------------------------------------
+    |
+    | This key is used by the Illuminate encrypter service and should be set
+    | to a random, 32 character string, otherwise these encrypted strings
+    | will not be safe. Please do this before deploying an application!
+    |
+    */
+
+    'key' => env('APP_KEY'),
+
+    'cipher' => 'AES-256-CBC',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Autoloaded Service Providers
+    |--------------------------------------------------------------------------
+    |
+    | The service providers listed here will be automatically loaded on the
+    | request to your application. Feel free to add your own services to
+    | this array to grant expanded functionality to your applications.
+    |
+    */
+
+    'providers' => [
+
+        /*
+         * Laravel Framework Service Providers...
+         */
+        Illuminate\Auth\AuthServiceProvider::class,
+        Illuminate\Broadcasting\BroadcastServiceProvider::class,
+        Illuminate\Bus\BusServiceProvider::class,
+        Illuminate\Cache\CacheServiceProvider::class,
+        Illuminate\Foundation\Providers\ConsoleSupportServiceProvider::class,
+        Illuminate\Cookie\CookieServiceProvider::class,
+        Illuminate\Database\DatabaseServiceProvider::class,
+        Illuminate\Encryption\EncryptionServiceProvider::class,
+        Illuminate\Filesystem\FilesystemServiceProvider::class,
+        Illuminate\Foundation\Providers\FoundationServiceProvider::class,
+        Illuminate\Hashing\HashServiceProvider::class,
+        Illuminate\Mail\MailServiceProvider::class,
+        Illuminate\Notifications\NotificationServiceProvider::class,
+        Illuminate\Pagination\PaginationServiceProvider::class,
+        Illuminate\Pipeline\PipelineServiceProvider::class,
+        Illuminate\Queue\QueueServiceProvider::class,
+        Illuminate\Redis\RedisServiceProvider::class,
+        Illuminate\Auth\Passwords\PasswordResetServiceProvider::class,
+        Illuminate\Session\SessionServiceProvider::class,
+        Illuminate\Translation\TranslationServiceProvider::class,
+        Illuminate\Validation\ValidationServiceProvider::class,
+        Illuminate\View\ViewServiceProvider::class,
+
+        /*
+         * Package Service Providers...
+         */
+
+        /*
+         * Application Service Providers...
+         */
+        App\Providers\AppServiceProvider::class,
+        App\Providers\AuthServiceProvider::class,
+        // App\Providers\BroadcastServiceProvider::class,
+        App\Providers\EventServiceProvider::class,
+        App\Providers\RouteServiceProvider::class,
+
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Class Aliases
+    |--------------------------------------------------------------------------
+    |
+    | This array of class aliases will be registered when this application
+    | is started. However, feel free to register as many as you wish as
+    | the aliases are "lazy" loaded so they don't hinder performance.
+    |
+    */
+
+    'aliases' => Facade::defaultAliases()->merge([
+        // 'ExampleClass' => App\Example\ExampleClass::class,
+    ])->toArray(),
+
+];
Index: config/logging.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/logging.php	(date 1648547424000)
+++ config/logging.php	(date 1648547424000)
@@ -0,0 +1,119 @@
+<?php
+
+use Monolog\Handler\NullHandler;
+use Monolog\Handler\StreamHandler;
+use Monolog\Handler\SyslogUdpHandler;
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Default Log Channel
+    |--------------------------------------------------------------------------
+    |
+    | This option defines the default log channel that gets used when writing
+    | messages to the logs. The name specified in this option should match
+    | one of the channels defined in the "channels" configuration array.
+    |
+    */
+
+    'default' => env('LOG_CHANNEL', 'stack'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Deprecations Log Channel
+    |--------------------------------------------------------------------------
+    |
+    | This option controls the log channel that should be used to log warnings
+    | regarding deprecated PHP and library features. This allows you to get
+    | your application ready for upcoming major versions of dependencies.
+    |
+    */
+
+    'deprecations' => env('LOG_DEPRECATIONS_CHANNEL', 'null'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Log Channels
+    |--------------------------------------------------------------------------
+    |
+    | Here you may configure the log channels for your application. Out of
+    | the box, Laravel uses the Monolog PHP logging library. This gives
+    | you a variety of powerful log handlers / formatters to utilize.
+    |
+    | Available Drivers: "single", "daily", "slack", "syslog",
+    |                    "errorlog", "monolog",
+    |                    "custom", "stack"
+    |
+    */
+
+    'channels' => [
+        'stack' => [
+            'driver' => 'stack',
+            'channels' => ['single'],
+            'ignore_exceptions' => false,
+        ],
+
+        'single' => [
+            'driver' => 'single',
+            'path' => storage_path('logs/laravel.log'),
+            'level' => env('LOG_LEVEL', 'debug'),
+        ],
+
+        'daily' => [
+            'driver' => 'daily',
+            'path' => storage_path('logs/laravel.log'),
+            'level' => env('LOG_LEVEL', 'debug'),
+            'days' => 14,
+        ],
+
+        'slack' => [
+            'driver' => 'slack',
+            'url' => env('LOG_SLACK_WEBHOOK_URL'),
+            'username' => 'Laravel Log',
+            'emoji' => ':boom:',
+            'level' => env('LOG_LEVEL', 'critical'),
+        ],
+
+        'papertrail' => [
+            'driver' => 'monolog',
+            'level' => env('LOG_LEVEL', 'debug'),
+            'handler' => env('LOG_PAPERTRAIL_HANDLER', SyslogUdpHandler::class),
+            'handler_with' => [
+                'host' => env('PAPERTRAIL_URL'),
+                'port' => env('PAPERTRAIL_PORT'),
+                'connectionString' => 'tls://'.env('PAPERTRAIL_URL').':'.env('PAPERTRAIL_PORT'),
+            ],
+        ],
+
+        'stderr' => [
+            'driver' => 'monolog',
+            'level' => env('LOG_LEVEL', 'debug'),
+            'handler' => StreamHandler::class,
+            'formatter' => env('LOG_STDERR_FORMATTER'),
+            'with' => [
+                'stream' => 'php://stderr',
+            ],
+        ],
+
+        'syslog' => [
+            'driver' => 'syslog',
+            'level' => env('LOG_LEVEL', 'debug'),
+        ],
+
+        'errorlog' => [
+            'driver' => 'errorlog',
+            'level' => env('LOG_LEVEL', 'debug'),
+        ],
+
+        'null' => [
+            'driver' => 'monolog',
+            'handler' => NullHandler::class,
+        ],
+
+        'emergency' => [
+            'path' => storage_path('logs/laravel.log'),
+        ],
+    ],
+
+];
Index: config/cors.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/cors.php	(date 1648547424000)
+++ config/cors.php	(date 1648547424000)
@@ -0,0 +1,34 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Cross-Origin Resource Sharing (CORS) Configuration
+    |--------------------------------------------------------------------------
+    |
+    | Here you may configure your settings for cross-origin resource sharing
+    | or "CORS". This determines what cross-origin operations may execute
+    | in web browsers. You are free to adjust these settings as needed.
+    |
+    | To learn more: https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS
+    |
+    */
+
+    'paths' => ['api/*', 'sanctum/csrf-cookie'],
+
+    'allowed_methods' => ['*'],
+
+    'allowed_origins' => ['*'],
+
+    'allowed_origins_patterns' => [],
+
+    'allowed_headers' => ['*'],
+
+    'exposed_headers' => [],
+
+    'max_age' => 0,
+
+    'supports_credentials' => false,
+
+];
Index: config/database.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/database.php	(date 1648547424000)
+++ config/database.php	(date 1648547424000)
@@ -0,0 +1,151 @@
+<?php
+
+use Illuminate\Support\Str;
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Default Database Connection Name
+    |--------------------------------------------------------------------------
+    |
+    | Here you may specify which of the database connections below you wish
+    | to use as your default connection for all database work. Of course
+    | you may use many connections at once using the Database library.
+    |
+    */
+
+    'default' => env('DB_CONNECTION', 'mysql'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Database Connections
+    |--------------------------------------------------------------------------
+    |
+    | Here are each of the database connections setup for your application.
+    | Of course, examples of configuring each database platform that is
+    | supported by Laravel is shown below to make development simple.
+    |
+    |
+    | All database work in Laravel is done through the PHP PDO facilities
+    | so make sure you have the driver for your particular database of
+    | choice installed on your machine before you begin development.
+    |
+    */
+
+    'connections' => [
+
+        'sqlite' => [
+            'driver' => 'sqlite',
+            'url' => env('DATABASE_URL'),
+            'database' => env('DB_DATABASE', database_path('database.sqlite')),
+            'prefix' => '',
+            'foreign_key_constraints' => env('DB_FOREIGN_KEYS', true),
+        ],
+
+        'mysql' => [
+            'driver' => 'mysql',
+            'url' => env('DATABASE_URL'),
+            'host' => env('DB_HOST', '127.0.0.1'),
+            'port' => env('DB_PORT', '3306'),
+            'database' => env('DB_DATABASE', 'forge'),
+            'username' => env('DB_USERNAME', 'forge'),
+            'password' => env('DB_PASSWORD', ''),
+            'unix_socket' => env('DB_SOCKET', ''),
+            'charset' => 'utf8mb4',
+            'collation' => 'utf8mb4_unicode_ci',
+            'prefix' => '',
+            'prefix_indexes' => true,
+            'strict' => true,
+            'engine' => null,
+            'options' => extension_loaded('pdo_mysql') ? array_filter([
+                PDO::MYSQL_ATTR_SSL_CA => env('MYSQL_ATTR_SSL_CA'),
+            ]) : [],
+        ],
+
+        'pgsql' => [
+            'driver' => 'pgsql',
+            'url' => env('DATABASE_URL'),
+            'host' => env('DB_HOST', '127.0.0.1'),
+            'port' => env('DB_PORT', '5432'),
+            'database' => env('DB_DATABASE', 'forge'),
+            'username' => env('DB_USERNAME', 'forge'),
+            'password' => env('DB_PASSWORD', ''),
+            'charset' => 'utf8',
+            'prefix' => '',
+            'prefix_indexes' => true,
+            'search_path' => 'public',
+            'sslmode' => 'prefer',
+        ],
+
+        'sqlsrv' => [
+            'driver' => 'sqlsrv',
+            'url' => env('DATABASE_URL'),
+            'host' => env('DB_HOST', 'localhost'),
+            'port' => env('DB_PORT', '1433'),
+            'database' => env('DB_DATABASE', 'forge'),
+            'username' => env('DB_USERNAME', 'forge'),
+            'password' => env('DB_PASSWORD', ''),
+            'charset' => 'utf8',
+            'prefix' => '',
+            'prefix_indexes' => true,
+            // 'encrypt' => env('DB_ENCRYPT', 'yes'),
+            // 'trust_server_certificate' => env('DB_TRUST_SERVER_CERTIFICATE', 'true'),
+        ],
+
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Migration Repository Table
+    |--------------------------------------------------------------------------
+    |
+    | This table keeps track of all the migrations that have already run for
+    | your application. Using this information, we can determine which of
+    | the migrations on disk haven't actually been run in the database.
+    |
+    */
+
+    'migrations' => 'migrations',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Redis Databases
+    |--------------------------------------------------------------------------
+    |
+    | Redis is an open source, fast, and advanced key-value store that also
+    | provides a richer body of commands than a typical key-value system
+    | such as APC or Memcached. Laravel makes it easy to dig right in.
+    |
+    */
+
+    'redis' => [
+
+        'client' => env('REDIS_CLIENT', 'phpredis'),
+
+        'options' => [
+            'cluster' => env('REDIS_CLUSTER', 'redis'),
+            'prefix' => env('REDIS_PREFIX', Str::slug(env('APP_NAME', 'laravel'), '_').'_database_'),
+        ],
+
+        'default' => [
+            'url' => env('REDIS_URL'),
+            'host' => env('REDIS_HOST', '127.0.0.1'),
+            'username' => env('REDIS_USERNAME'),
+            'password' => env('REDIS_PASSWORD'),
+            'port' => env('REDIS_PORT', '6379'),
+            'database' => env('REDIS_DB', '0'),
+        ],
+
+        'cache' => [
+            'url' => env('REDIS_URL'),
+            'host' => env('REDIS_HOST', '127.0.0.1'),
+            'username' => env('REDIS_USERNAME'),
+            'password' => env('REDIS_PASSWORD'),
+            'port' => env('REDIS_PORT', '6379'),
+            'database' => env('REDIS_CACHE_DB', '1'),
+        ],
+
+    ],
+
+];
Index: config/services.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/services.php	(date 1648547424000)
+++ config/services.php	(date 1648547424000)
@@ -0,0 +1,34 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Third Party Services
+    |--------------------------------------------------------------------------
+    |
+    | This file is for storing the credentials for third party services such
+    | as Mailgun, Postmark, AWS and more. This file provides the de facto
+    | location for this type of information, allowing packages to have
+    | a conventional file to locate the various service credentials.
+    |
+    */
+
+    'mailgun' => [
+        'domain' => env('MAILGUN_DOMAIN'),
+        'secret' => env('MAILGUN_SECRET'),
+        'endpoint' => env('MAILGUN_ENDPOINT', 'api.mailgun.net'),
+        'scheme' => 'https',
+    ],
+
+    'postmark' => [
+        'token' => env('POSTMARK_TOKEN'),
+    ],
+
+    'ses' => [
+        'key' => env('AWS_ACCESS_KEY_ID'),
+        'secret' => env('AWS_SECRET_ACCESS_KEY'),
+        'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
+    ],
+
+];
Index: config/sanctum.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/sanctum.php	(date 1648547424000)
+++ config/sanctum.php	(date 1648547424000)
@@ -0,0 +1,67 @@
+<?php
+
+use Laravel\Sanctum\Sanctum;
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Stateful Domains
+    |--------------------------------------------------------------------------
+    |
+    | Requests from the following domains / hosts will receive stateful API
+    | authentication cookies. Typically, these should include your local
+    | and production domains which access your API via a frontend SPA.
+    |
+    */
+
+    'stateful' => explode(',', env('SANCTUM_STATEFUL_DOMAINS', sprintf(
+        '%s%s',
+        'localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1',
+        Sanctum::currentApplicationUrlWithPort()
+    ))),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Sanctum Guards
+    |--------------------------------------------------------------------------
+    |
+    | This array contains the authentication guards that will be checked when
+    | Sanctum is trying to authenticate a request. If none of these guards
+    | are able to authenticate the request, Sanctum will use the bearer
+    | token that's present on an incoming request for authentication.
+    |
+    */
+
+    'guard' => ['web'],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Expiration Minutes
+    |--------------------------------------------------------------------------
+    |
+    | This value controls the number of minutes until an issued token will be
+    | considered expired. If this value is null, personal access tokens do
+    | not expire. This won't tweak the lifetime of first-party sessions.
+    |
+    */
+
+    'expiration' => null,
+
+    /*
+    |--------------------------------------------------------------------------
+    | Sanctum Middleware
+    |--------------------------------------------------------------------------
+    |
+    | When authenticating your first-party SPA with Sanctum you may need to
+    | customize some of the middleware Sanctum uses while processing the
+    | request. You may change the middleware listed below as required.
+    |
+    */
+
+    'middleware' => [
+        'verify_csrf_token' => App\Http\Middleware\VerifyCsrfToken::class,
+        'encrypt_cookies' => App\Http\Middleware\EncryptCookies::class,
+    ],
+
+];
Index: config/filesystems.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/filesystems.php	(date 1648547424000)
+++ config/filesystems.php	(date 1648547424000)
@@ -0,0 +1,76 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Default Filesystem Disk
+    |--------------------------------------------------------------------------
+    |
+    | Here you may specify the default filesystem disk that should be used
+    | by the framework. The "local" disk, as well as a variety of cloud
+    | based disks are available to your application. Just store away!
+    |
+    */
+
+    'default' => env('FILESYSTEM_DISK', 'local'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Filesystem Disks
+    |--------------------------------------------------------------------------
+    |
+    | Here you may configure as many filesystem "disks" as you wish, and you
+    | may even configure multiple disks of the same driver. Defaults have
+    | been set up for each driver as an example of the required values.
+    |
+    | Supported Drivers: "local", "ftp", "sftp", "s3"
+    |
+    */
+
+    'disks' => [
+
+        'local' => [
+            'driver' => 'local',
+            'root' => storage_path('app'),
+            'throw' => false,
+        ],
+
+        'public' => [
+            'driver' => 'local',
+            'root' => storage_path('app/public'),
+            'url' => env('APP_URL').'/storage',
+            'visibility' => 'public',
+            'throw' => false,
+        ],
+
+        's3' => [
+            'driver' => 's3',
+            'key' => env('AWS_ACCESS_KEY_ID'),
+            'secret' => env('AWS_SECRET_ACCESS_KEY'),
+            'region' => env('AWS_DEFAULT_REGION'),
+            'bucket' => env('AWS_BUCKET'),
+            'url' => env('AWS_URL'),
+            'endpoint' => env('AWS_ENDPOINT'),
+            'use_path_style_endpoint' => env('AWS_USE_PATH_STYLE_ENDPOINT', false),
+            'throw' => false,
+        ],
+
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Symbolic Links
+    |--------------------------------------------------------------------------
+    |
+    | Here you may configure the symbolic links that will be created when the
+    | `storage:link` Artisan command is executed. The array keys should be
+    | the locations of the links and the values should be their targets.
+    |
+    */
+
+    'links' => [
+        public_path('storage') => storage_path('app/public'),
+    ],
+
+];
Index: tests/Feature/ExampleTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/Feature/ExampleTest.php	(date 1648547424000)
+++ tests/Feature/ExampleTest.php	(date 1648547424000)
@@ -0,0 +1,21 @@
+<?php
+
+namespace Tests\Feature;
+
+use Illuminate\Foundation\Testing\RefreshDatabase;
+use Tests\TestCase;
+
+class ExampleTest extends TestCase
+{
+    /**
+     * A basic test example.
+     *
+     * @return void
+     */
+    public function test_the_application_returns_a_successful_response()
+    {
+        $response = $this->get('/');
+
+        $response->assertStatus(200);
+    }
+}
Index: config/mail.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/mail.php	(date 1648547424000)
+++ config/mail.php	(date 1648547424000)
@@ -0,0 +1,117 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Default Mailer
+    |--------------------------------------------------------------------------
+    |
+    | This option controls the default mailer that is used to send any email
+    | messages sent by your application. Alternative mailers may be setup
+    | and used as needed; however, this mailer will be used by default.
+    |
+    */
+
+    'default' => env('MAIL_MAILER', 'smtp'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Mailer Configurations
+    |--------------------------------------------------------------------------
+    |
+    | Here you may configure all of the mailers used by your application plus
+    | their respective settings. Several examples have been configured for
+    | you and you are free to add your own as your application requires.
+    |
+    | Laravel supports a variety of mail "transport" drivers to be used while
+    | sending an e-mail. You will specify which one you are using for your
+    | mailers below. You are free to add additional mailers as required.
+    |
+    | Supported: "smtp", "sendmail", "mailgun", "ses",
+    |            "postmark", "log", "array", "failover"
+    |
+    */
+
+    'mailers' => [
+        'smtp' => [
+            'transport' => 'smtp',
+            'host' => env('MAIL_HOST', 'smtp.mailgun.org'),
+            'port' => env('MAIL_PORT', 587),
+            'encryption' => env('MAIL_ENCRYPTION', 'tls'),
+            'username' => env('MAIL_USERNAME'),
+            'password' => env('MAIL_PASSWORD'),
+            'timeout' => null,
+        ],
+
+        'ses' => [
+            'transport' => 'ses',
+        ],
+
+        'mailgun' => [
+            'transport' => 'mailgun',
+        ],
+
+        'postmark' => [
+            'transport' => 'postmark',
+        ],
+
+        'sendmail' => [
+            'transport' => 'sendmail',
+            'path' => env('MAIL_SENDMAIL_PATH', '/usr/sbin/sendmail -bs -i'),
+        ],
+
+        'log' => [
+            'transport' => 'log',
+            'channel' => env('MAIL_LOG_CHANNEL'),
+        ],
+
+        'array' => [
+            'transport' => 'array',
+        ],
+
+        'failover' => [
+            'transport' => 'failover',
+            'mailers' => [
+                'smtp',
+                'log',
+            ],
+        ],
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Global "From" Address
+    |--------------------------------------------------------------------------
+    |
+    | You may wish for all e-mails sent by your application to be sent from
+    | the same address. Here, you may specify a name and address that is
+    | used globally for all e-mails that are sent by your application.
+    |
+    */
+
+    'from' => [
+        'address' => env('MAIL_FROM_ADDRESS', 'hello@example.com'),
+        'name' => env('MAIL_FROM_NAME', 'Example'),
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Markdown Mail Settings
+    |--------------------------------------------------------------------------
+    |
+    | If you are using Markdown based email rendering, you may configure your
+    | theme and component paths here, allowing you to customize the design
+    | of the emails. Or, you may simply stick with the Laravel defaults!
+    |
+    */
+
+    'markdown' => [
+        'theme' => 'default',
+
+        'paths' => [
+            resource_path('views/vendor/mail'),
+        ],
+    ],
+
+];
Index: config/session.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/session.php	(date 1648547424000)
+++ config/session.php	(date 1648547424000)
@@ -0,0 +1,201 @@
+<?php
+
+use Illuminate\Support\Str;
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Default Session Driver
+    |--------------------------------------------------------------------------
+    |
+    | This option controls the default session "driver" that will be used on
+    | requests. By default, we will use the lightweight native driver but
+    | you may specify any of the other wonderful drivers provided here.
+    |
+    | Supported: "file", "cookie", "database", "apc",
+    |            "memcached", "redis", "dynamodb", "array"
+    |
+    */
+
+    'driver' => env('SESSION_DRIVER', 'file'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session Lifetime
+    |--------------------------------------------------------------------------
+    |
+    | Here you may specify the number of minutes that you wish the session
+    | to be allowed to remain idle before it expires. If you want them
+    | to immediately expire on the browser closing, set that option.
+    |
+    */
+
+    'lifetime' => env('SESSION_LIFETIME', 120),
+
+    'expire_on_close' => false,
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session Encryption
+    |--------------------------------------------------------------------------
+    |
+    | This option allows you to easily specify that all of your session data
+    | should be encrypted before it is stored. All encryption will be run
+    | automatically by Laravel and you can use the Session like normal.
+    |
+    */
+
+    'encrypt' => false,
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session File Location
+    |--------------------------------------------------------------------------
+    |
+    | When using the native session driver, we need a location where session
+    | files may be stored. A default has been set for you but a different
+    | location may be specified. This is only needed for file sessions.
+    |
+    */
+
+    'files' => storage_path('framework/sessions'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session Database Connection
+    |--------------------------------------------------------------------------
+    |
+    | When using the "database" or "redis" session drivers, you may specify a
+    | connection that should be used to manage these sessions. This should
+    | correspond to a connection in your database configuration options.
+    |
+    */
+
+    'connection' => env('SESSION_CONNECTION'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session Database Table
+    |--------------------------------------------------------------------------
+    |
+    | When using the "database" session driver, you may specify the table we
+    | should use to manage the sessions. Of course, a sensible default is
+    | provided for you; however, you are free to change this as needed.
+    |
+    */
+
+    'table' => 'sessions',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session Cache Store
+    |--------------------------------------------------------------------------
+    |
+    | While using one of the framework's cache driven session backends you may
+    | list a cache store that should be used for these sessions. This value
+    | must match with one of the application's configured cache "stores".
+    |
+    | Affects: "apc", "dynamodb", "memcached", "redis"
+    |
+    */
+
+    'store' => env('SESSION_STORE'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session Sweeping Lottery
+    |--------------------------------------------------------------------------
+    |
+    | Some session drivers must manually sweep their storage location to get
+    | rid of old sessions from storage. Here are the chances that it will
+    | happen on a given request. By default, the odds are 2 out of 100.
+    |
+    */
+
+    'lottery' => [2, 100],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session Cookie Name
+    |--------------------------------------------------------------------------
+    |
+    | Here you may change the name of the cookie used to identify a session
+    | instance by ID. The name specified here will get used every time a
+    | new session cookie is created by the framework for every driver.
+    |
+    */
+
+    'cookie' => env(
+        'SESSION_COOKIE',
+        Str::slug(env('APP_NAME', 'laravel'), '_').'_session'
+    ),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session Cookie Path
+    |--------------------------------------------------------------------------
+    |
+    | The session cookie path determines the path for which the cookie will
+    | be regarded as available. Typically, this will be the root path of
+    | your application but you are free to change this when necessary.
+    |
+    */
+
+    'path' => '/',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Session Cookie Domain
+    |--------------------------------------------------------------------------
+    |
+    | Here you may change the domain of the cookie used to identify a session
+    | in your application. This will determine which domains the cookie is
+    | available to in your application. A sensible default has been set.
+    |
+    */
+
+    'domain' => env('SESSION_DOMAIN'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | HTTPS Only Cookies
+    |--------------------------------------------------------------------------
+    |
+    | By setting this option to true, session cookies will only be sent back
+    | to the server if the browser has a HTTPS connection. This will keep
+    | the cookie from being sent to you when it can't be done securely.
+    |
+    */
+
+    'secure' => env('SESSION_SECURE_COOKIE'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | HTTP Access Only
+    |--------------------------------------------------------------------------
+    |
+    | Setting this value to true will prevent JavaScript from accessing the
+    | value of the cookie and the cookie will only be accessible through
+    | the HTTP protocol. You are free to modify this option if needed.
+    |
+    */
+
+    'http_only' => true,
+
+    /*
+    |--------------------------------------------------------------------------
+    | Same-Site Cookies
+    |--------------------------------------------------------------------------
+    |
+    | This option determines how your cookies behave when cross-site requests
+    | take place, and can be used to mitigate CSRF attacks. By default, we
+    | will set this value to "lax" since this is a secure default value.
+    |
+    | Supported: "lax", "strict", "none", null
+    |
+    */
+
+    'same_site' => 'lax',
+
+];
Index: config/queue.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- config/queue.php	(date 1648547424000)
+++ config/queue.php	(date 1648547424000)
@@ -0,0 +1,93 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Default Queue Connection Name
+    |--------------------------------------------------------------------------
+    |
+    | Laravel's queue API supports an assortment of back-ends via a single
+    | API, giving you convenient access to each back-end using the same
+    | syntax for every one. Here you may define a default connection.
+    |
+    */
+
+    'default' => env('QUEUE_CONNECTION', 'sync'),
+
+    /*
+    |--------------------------------------------------------------------------
+    | Queue Connections
+    |--------------------------------------------------------------------------
+    |
+    | Here you may configure the connection information for each server that
+    | is used by your application. A default configuration has been added
+    | for each back-end shipped with Laravel. You are free to add more.
+    |
+    | Drivers: "sync", "database", "beanstalkd", "sqs", "redis", "null"
+    |
+    */
+
+    'connections' => [
+
+        'sync' => [
+            'driver' => 'sync',
+        ],
+
+        'database' => [
+            'driver' => 'database',
+            'table' => 'jobs',
+            'queue' => 'default',
+            'retry_after' => 90,
+            'after_commit' => false,
+        ],
+
+        'beanstalkd' => [
+            'driver' => 'beanstalkd',
+            'host' => 'localhost',
+            'queue' => 'default',
+            'retry_after' => 90,
+            'block_for' => 0,
+            'after_commit' => false,
+        ],
+
+        'sqs' => [
+            'driver' => 'sqs',
+            'key' => env('AWS_ACCESS_KEY_ID'),
+            'secret' => env('AWS_SECRET_ACCESS_KEY'),
+            'prefix' => env('SQS_PREFIX', 'https://sqs.us-east-1.amazonaws.com/your-account-id'),
+            'queue' => env('SQS_QUEUE', 'default'),
+            'suffix' => env('SQS_SUFFIX'),
+            'region' => env('AWS_DEFAULT_REGION', 'us-east-1'),
+            'after_commit' => false,
+        ],
+
+        'redis' => [
+            'driver' => 'redis',
+            'connection' => 'default',
+            'queue' => env('REDIS_QUEUE', 'default'),
+            'retry_after' => 90,
+            'block_for' => null,
+            'after_commit' => false,
+        ],
+
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Failed Queue Jobs
+    |--------------------------------------------------------------------------
+    |
+    | These options configure the behavior of failed queue job logging so you
+    | can control which database and table are used to store the jobs that
+    | have failed. You may change them to any database / table you wish.
+    |
+    */
+
+    'failed' => [
+        'driver' => env('QUEUE_FAILED_DRIVER', 'database-uuids'),
+        'database' => env('DB_CONNECTION', 'mysql'),
+        'table' => 'failed_jobs',
+    ],
+
+];
Index: lang/en/auth.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lang/en/auth.php	(date 1648547424000)
+++ lang/en/auth.php	(date 1648547424000)
@@ -0,0 +1,20 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Authentication Language Lines
+    |--------------------------------------------------------------------------
+    |
+    | The following language lines are used during authentication for various
+    | messages that we need to display to the user. You are free to modify
+    | these language lines according to your application's requirements.
+    |
+    */
+
+    'failed' => 'These credentials do not match our records.',
+    'password' => 'The provided password is incorrect.',
+    'throttle' => 'Too many login attempts. Please try again in :seconds seconds.',
+
+];
Index: tests/CreatesApplication.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/CreatesApplication.php	(date 1648547424000)
+++ tests/CreatesApplication.php	(date 1648547424000)
@@ -0,0 +1,22 @@
+<?php
+
+namespace Tests;
+
+use Illuminate\Contracts\Console\Kernel;
+
+trait CreatesApplication
+{
+    /**
+     * Creates the application.
+     *
+     * @return \Illuminate\Foundation\Application
+     */
+    public function createApplication()
+    {
+        $app = require __DIR__.'/../bootstrap/app.php';
+
+        $app->make(Kernel::class)->bootstrap();
+
+        return $app;
+    }
+}
Index: tests/TestCase.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/TestCase.php	(date 1648547424000)
+++ tests/TestCase.php	(date 1648547424000)
@@ -0,0 +1,10 @@
+<?php
+
+namespace Tests;
+
+use Illuminate\Foundation\Testing\TestCase as BaseTestCase;
+
+abstract class TestCase extends BaseTestCase
+{
+    use CreatesApplication;
+}
Index: tests/Unit/ExampleTest.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- tests/Unit/ExampleTest.php	(date 1648547424000)
+++ tests/Unit/ExampleTest.php	(date 1648547424000)
@@ -0,0 +1,18 @@
+<?php
+
+namespace Tests\Unit;
+
+use PHPUnit\Framework\TestCase;
+
+class ExampleTest extends TestCase
+{
+    /**
+     * A basic test example.
+     *
+     * @return void
+     */
+    public function test_that_true_is_true()
+    {
+        $this->assertTrue(true);
+    }
+}
Index: lang/en.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lang/en.json	(date 1648547424000)
+++ lang/en.json	(date 1648547424000)
@@ -0,0 +1,7 @@
+{
+    "The :attribute must contain at least one letter.": "The :attribute must contain at least one letter.",
+    "The :attribute must contain at least one number.": "The :attribute must contain at least one number.",
+    "The :attribute must contain at least one symbol.": "The :attribute must contain at least one symbol.",
+    "The :attribute must contain at least one uppercase and one lowercase letter.": "The :attribute must contain at least one uppercase and one lowercase letter.",
+    "The given :attribute has appeared in a data leak. Please choose a different :attribute.": "The given :attribute has appeared in a data leak. Please choose a different :attribute."
+}
Index: lang/en/pagination.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lang/en/pagination.php	(date 1648547424000)
+++ lang/en/pagination.php	(date 1648547424000)
@@ -0,0 +1,19 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Pagination Language Lines
+    |--------------------------------------------------------------------------
+    |
+    | The following language lines are used by the paginator library to build
+    | the simple pagination links. You are free to change them to anything
+    | you want to customize your views to better match your application.
+    |
+    */
+
+    'previous' => '&laquo; Previous',
+    'next' => 'Next &raquo;',
+
+];
Index: lang/en/passwords.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lang/en/passwords.php	(date 1648547424000)
+++ lang/en/passwords.php	(date 1648547424000)
@@ -0,0 +1,22 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Password Reset Language Lines
+    |--------------------------------------------------------------------------
+    |
+    | The following language lines are the default lines which match reasons
+    | that are given by the password broker for a password update attempt
+    | has failed, such as for an invalid token or invalid new password.
+    |
+    */
+
+    'reset' => 'Your password has been reset!',
+    'sent' => 'We have emailed your password reset link!',
+    'throttled' => 'Please wait before retrying.',
+    'token' => 'This password reset token is invalid.',
+    'user' => "We can't find a user with that email address.",
+
+];
Index: lang/en/validation.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- lang/en/validation.php	(date 1648547424000)
+++ lang/en/validation.php	(date 1648547424000)
@@ -0,0 +1,162 @@
+<?php
+
+return [
+
+    /*
+    |--------------------------------------------------------------------------
+    | Validation Language Lines
+    |--------------------------------------------------------------------------
+    |
+    | The following language lines contain the default error messages used by
+    | the validator class. Some of these rules have multiple versions such
+    | as the size rules. Feel free to tweak each of these messages here.
+    |
+    */
+
+    'accepted' => 'The :attribute must be accepted.',
+    'accepted_if' => 'The :attribute must be accepted when :other is :value.',
+    'active_url' => 'The :attribute is not a valid URL.',
+    'after' => 'The :attribute must be a date after :date.',
+    'after_or_equal' => 'The :attribute must be a date after or equal to :date.',
+    'alpha' => 'The :attribute must only contain letters.',
+    'alpha_dash' => 'The :attribute must only contain letters, numbers, dashes and underscores.',
+    'alpha_num' => 'The :attribute must only contain letters and numbers.',
+    'array' => 'The :attribute must be an array.',
+    'before' => 'The :attribute must be a date before :date.',
+    'before_or_equal' => 'The :attribute must be a date before or equal to :date.',
+    'between' => [
+        'array' => 'The :attribute must have between :min and :max items.',
+        'file' => 'The :attribute must be between :min and :max kilobytes.',
+        'numeric' => 'The :attribute must be between :min and :max.',
+        'string' => 'The :attribute must be between :min and :max characters.',
+    ],
+    'boolean' => 'The :attribute field must be true or false.',
+    'confirmed' => 'The :attribute confirmation does not match.',
+    'current_password' => 'The password is incorrect.',
+    'date' => 'The :attribute is not a valid date.',
+    'date_equals' => 'The :attribute must be a date equal to :date.',
+    'date_format' => 'The :attribute does not match the format :format.',
+    'declined' => 'The :attribute must be declined.',
+    'declined_if' => 'The :attribute must be declined when :other is :value.',
+    'different' => 'The :attribute and :other must be different.',
+    'digits' => 'The :attribute must be :digits digits.',
+    'digits_between' => 'The :attribute must be between :min and :max digits.',
+    'dimensions' => 'The :attribute has invalid image dimensions.',
+    'distinct' => 'The :attribute field has a duplicate value.',
+    'email' => 'The :attribute must be a valid email address.',
+    'ends_with' => 'The :attribute must end with one of the following: :values.',
+    'enum' => 'The selected :attribute is invalid.',
+    'exists' => 'The selected :attribute is invalid.',
+    'file' => 'The :attribute must be a file.',
+    'filled' => 'The :attribute field must have a value.',
+    'gt' => [
+        'array' => 'The :attribute must have more than :value items.',
+        'file' => 'The :attribute must be greater than :value kilobytes.',
+        'numeric' => 'The :attribute must be greater than :value.',
+        'string' => 'The :attribute must be greater than :value characters.',
+    ],
+    'gte' => [
+        'array' => 'The :attribute must have :value items or more.',
+        'file' => 'The :attribute must be greater than or equal to :value kilobytes.',
+        'numeric' => 'The :attribute must be greater than or equal to :value.',
+        'string' => 'The :attribute must be greater than or equal to :value characters.',
+    ],
+    'image' => 'The :attribute must be an image.',
+    'in' => 'The selected :attribute is invalid.',
+    'in_array' => 'The :attribute field does not exist in :other.',
+    'integer' => 'The :attribute must be an integer.',
+    'ip' => 'The :attribute must be a valid IP address.',
+    'ipv4' => 'The :attribute must be a valid IPv4 address.',
+    'ipv6' => 'The :attribute must be a valid IPv6 address.',
+    'json' => 'The :attribute must be a valid JSON string.',
+    'lt' => [
+        'array' => 'The :attribute must have less than :value items.',
+        'file' => 'The :attribute must be less than :value kilobytes.',
+        'numeric' => 'The :attribute must be less than :value.',
+        'string' => 'The :attribute must be less than :value characters.',
+    ],
+    'lte' => [
+        'array' => 'The :attribute must not have more than :value items.',
+        'file' => 'The :attribute must be less than or equal to :value kilobytes.',
+        'numeric' => 'The :attribute must be less than or equal to :value.',
+        'string' => 'The :attribute must be less than or equal to :value characters.',
+    ],
+    'mac_address' => 'The :attribute must be a valid MAC address.',
+    'max' => [
+        'array' => 'The :attribute must not have more than :max items.',
+        'file' => 'The :attribute must not be greater than :max kilobytes.',
+        'numeric' => 'The :attribute must not be greater than :max.',
+        'string' => 'The :attribute must not be greater than :max characters.',
+    ],
+    'mimes' => 'The :attribute must be a file of type: :values.',
+    'mimetypes' => 'The :attribute must be a file of type: :values.',
+    'min' => [
+        'array' => 'The :attribute must have at least :min items.',
+        'file' => 'The :attribute must be at least :min kilobytes.',
+        'numeric' => 'The :attribute must be at least :min.',
+        'string' => 'The :attribute must be at least :min characters.',
+    ],
+    'multiple_of' => 'The :attribute must be a multiple of :value.',
+    'not_in' => 'The selected :attribute is invalid.',
+    'not_regex' => 'The :attribute format is invalid.',
+    'numeric' => 'The :attribute must be a number.',
+    'present' => 'The :attribute field must be present.',
+    'prohibited' => 'The :attribute field is prohibited.',
+    'prohibited_if' => 'The :attribute field is prohibited when :other is :value.',
+    'prohibited_unless' => 'The :attribute field is prohibited unless :other is in :values.',
+    'prohibits' => 'The :attribute field prohibits :other from being present.',
+    'regex' => 'The :attribute format is invalid.',
+    'required' => 'The :attribute field is required.',
+    'required_array_keys' => 'The :attribute field must contain entries for: :values.',
+    'required_if' => 'The :attribute field is required when :other is :value.',
+    'required_unless' => 'The :attribute field is required unless :other is in :values.',
+    'required_with' => 'The :attribute field is required when :values is present.',
+    'required_with_all' => 'The :attribute field is required when :values are present.',
+    'required_without' => 'The :attribute field is required when :values is not present.',
+    'required_without_all' => 'The :attribute field is required when none of :values are present.',
+    'same' => 'The :attribute and :other must match.',
+    'size' => [
+        'array' => 'The :attribute must contain :size items.',
+        'file' => 'The :attribute must be :size kilobytes.',
+        'numeric' => 'The :attribute must be :size.',
+        'string' => 'The :attribute must be :size characters.',
+    ],
+    'starts_with' => 'The :attribute must start with one of the following: :values.',
+    'string' => 'The :attribute must be a string.',
+    'timezone' => 'The :attribute must be a valid timezone.',
+    'unique' => 'The :attribute has already been taken.',
+    'uploaded' => 'The :attribute failed to upload.',
+    'url' => 'The :attribute must be a valid URL.',
+    'uuid' => 'The :attribute must be a valid UUID.',
+
+    /*
+    |--------------------------------------------------------------------------
+    | Custom Validation Language Lines
+    |--------------------------------------------------------------------------
+    |
+    | Here you may specify custom validation messages for attributes using the
+    | convention "attribute.rule" to name the lines. This makes it quick to
+    | specify a specific custom language line for a given attribute rule.
+    |
+    */
+
+    'custom' => [
+        'attribute-name' => [
+            'rule-name' => 'custom-message',
+        ],
+    ],
+
+    /*
+    |--------------------------------------------------------------------------
+    | Custom Validation Attributes
+    |--------------------------------------------------------------------------
+    |
+    | The following language lines are used to swap our attribute placeholder
+    | with something more reader friendly such as "E-Mail Address" instead
+    | of "email". This simply helps us make our message more expressive.
+    |
+    */
+
+    'attributes' => [],
+
+];
Index: app/Providers/BroadcastServiceProvider.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Providers/BroadcastServiceProvider.php	(date 1648547424000)
+++ app/Providers/BroadcastServiceProvider.php	(date 1648547424000)
@@ -0,0 +1,21 @@
+<?php
+
+namespace App\Providers;
+
+use Illuminate\Support\Facades\Broadcast;
+use Illuminate\Support\ServiceProvider;
+
+class BroadcastServiceProvider extends ServiceProvider
+{
+    /**
+     * Bootstrap any application services.
+     *
+     * @return void
+     */
+    public function boot()
+    {
+        Broadcast::routes();
+
+        require base_path('routes/channels.php');
+    }
+}
Index: app/Providers/AppServiceProvider.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Providers/AppServiceProvider.php	(date 1649687960453)
+++ app/Providers/AppServiceProvider.php	(date 1649687960453)
@@ -0,0 +1,37 @@
+<?php
+
+namespace App\Providers;
+
+use App\Models\Beden;
+use App\Models\Eticaret;
+use App\Models\Renk;
+use Illuminate\Support\Facades\View;
+use Illuminate\Support\ServiceProvider;
+
+class AppServiceProvider extends ServiceProvider
+{
+    /**
+     * Register any application services.
+     *
+     * @return void
+     */
+    public function register()
+    {
+        //
+    }
+
+    /**
+     * Bootstrap any application services.
+     *
+     * @return void
+     */
+    public function boot()
+    {
+        $renkler = Renk::all();
+        View::share('renkler',$renkler);
+        $bedenler = Beden::all();
+        View::share('bedenler',$bedenler);
+        $urunler = Eticaret::all();
+        View::share('urunler',$urunler);
+    }
+}
Index: app/Exceptions/Handler.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Exceptions/Handler.php	(date 1648547424000)
+++ app/Exceptions/Handler.php	(date 1648547424000)
@@ -0,0 +1,41 @@
+<?php
+
+namespace App\Exceptions;
+
+use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
+use Throwable;
+
+class Handler extends ExceptionHandler
+{
+    /**
+     * A list of the exception types that are not reported.
+     *
+     * @var array<int, class-string<Throwable>>
+     */
+    protected $dontReport = [
+        //
+    ];
+
+    /**
+     * A list of the inputs that are never flashed for validation exceptions.
+     *
+     * @var array<int, string>
+     */
+    protected $dontFlash = [
+        'current_password',
+        'password',
+        'password_confirmation',
+    ];
+
+    /**
+     * Register the exception handling callbacks for the application.
+     *
+     * @return void
+     */
+    public function register()
+    {
+        $this->reportable(function (Throwable $e) {
+            //
+        });
+    }
+}
Index: app/Console/Kernel.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Console/Kernel.php	(date 1648547424000)
+++ app/Console/Kernel.php	(date 1648547424000)
@@ -0,0 +1,32 @@
+<?php
+
+namespace App\Console;
+
+use Illuminate\Console\Scheduling\Schedule;
+use Illuminate\Foundation\Console\Kernel as ConsoleKernel;
+
+class Kernel extends ConsoleKernel
+{
+    /**
+     * Define the application's command schedule.
+     *
+     * @param  \Illuminate\Console\Scheduling\Schedule  $schedule
+     * @return void
+     */
+    protected function schedule(Schedule $schedule)
+    {
+        // $schedule->command('inspire')->hourly();
+    }
+
+    /**
+     * Register the commands for the application.
+     *
+     * @return void
+     */
+    protected function commands()
+    {
+        $this->load(__DIR__.'/Commands');
+
+        require base_path('routes/console.php');
+    }
+}
Index: app/Providers/RouteServiceProvider.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Providers/RouteServiceProvider.php	(date 1648547424000)
+++ app/Providers/RouteServiceProvider.php	(date 1648547424000)
@@ -0,0 +1,52 @@
+<?php
+
+namespace App\Providers;
+
+use Illuminate\Cache\RateLimiting\Limit;
+use Illuminate\Foundation\Support\Providers\RouteServiceProvider as ServiceProvider;
+use Illuminate\Http\Request;
+use Illuminate\Support\Facades\RateLimiter;
+use Illuminate\Support\Facades\Route;
+
+class RouteServiceProvider extends ServiceProvider
+{
+    /**
+     * The path to the "home" route for your application.
+     *
+     * This is used by Laravel authentication to redirect users after login.
+     *
+     * @var string
+     */
+    public const HOME = '/home';
+
+    /**
+     * Define your route model bindings, pattern filters, etc.
+     *
+     * @return void
+     */
+    public function boot()
+    {
+        $this->configureRateLimiting();
+
+        $this->routes(function () {
+            Route::prefix('api')
+                ->middleware('api')
+                ->group(base_path('routes/api.php'));
+
+            Route::middleware('web')
+                ->group(base_path('routes/web.php'));
+        });
+    }
+
+    /**
+     * Configure the rate limiters for the application.
+     *
+     * @return void
+     */
+    protected function configureRateLimiting()
+    {
+        RateLimiter::for('api', function (Request $request) {
+            return Limit::perMinute(60)->by($request->user()?->id ?: $request->ip());
+        });
+    }
+}
Index: app/Providers/EventServiceProvider.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Providers/EventServiceProvider.php	(date 1648547424000)
+++ app/Providers/EventServiceProvider.php	(date 1648547424000)
@@ -0,0 +1,42 @@
+<?php
+
+namespace App\Providers;
+
+use Illuminate\Auth\Events\Registered;
+use Illuminate\Auth\Listeners\SendEmailVerificationNotification;
+use Illuminate\Foundation\Support\Providers\EventServiceProvider as ServiceProvider;
+use Illuminate\Support\Facades\Event;
+
+class EventServiceProvider extends ServiceProvider
+{
+    /**
+     * The event listener mappings for the application.
+     *
+     * @var array<class-string, array<int, class-string>>
+     */
+    protected $listen = [
+        Registered::class => [
+            SendEmailVerificationNotification::class,
+        ],
+    ];
+
+    /**
+     * Register any events for your application.
+     *
+     * @return void
+     */
+    public function boot()
+    {
+        //
+    }
+
+    /**
+     * Determine if events and listeners should be automatically discovered.
+     *
+     * @return bool
+     */
+    public function shouldDiscoverEvents()
+    {
+        return false;
+    }
+}
Index: app/Providers/AuthServiceProvider.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Providers/AuthServiceProvider.php	(date 1648547424000)
+++ app/Providers/AuthServiceProvider.php	(date 1648547424000)
@@ -0,0 +1,30 @@
+<?php
+
+namespace App\Providers;
+
+use Illuminate\Foundation\Support\Providers\AuthServiceProvider as ServiceProvider;
+use Illuminate\Support\Facades\Gate;
+
+class AuthServiceProvider extends ServiceProvider
+{
+    /**
+     * The policy mappings for the application.
+     *
+     * @var array<class-string, class-string>
+     */
+    protected $policies = [
+        // 'App\Models\Model' => 'App\Policies\ModelPolicy',
+    ];
+
+    /**
+     * Register any authentication / authorization services.
+     *
+     * @return void
+     */
+    public function boot()
+    {
+        $this->registerPolicies();
+
+        //
+    }
+}
Index: app/Models/Eticaret.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Models/Eticaret.php	(date 1649746042318)
+++ app/Models/Eticaret.php	(date 1649746042318)
@@ -0,0 +1,22 @@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Database\Eloquent\Model;
+
+class Eticaret extends Model
+{
+    use HasFactory;
+
+    protected $table = "eticaret";
+
+    protected $guarded = [];
+
+    public function renkler(){
+        return $this->hasOne(Renk::class, 'id', 'renk_id');
+    }
+    public function bedenler(){
+        return $this->hasOne(Beden::class, 'id', 'beden_id');
+    }
+}
Index: app/Models/User.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Models/User.php	(date 1648547424000)
+++ app/Models/User.php	(date 1648547424000)
@@ -0,0 +1,44 @@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Contracts\Auth\MustVerifyEmail;
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Foundation\Auth\User as Authenticatable;
+use Illuminate\Notifications\Notifiable;
+use Laravel\Sanctum\HasApiTokens;
+
+class User extends Authenticatable
+{
+    use HasApiTokens, HasFactory, Notifiable;
+
+    /**
+     * The attributes that are mass assignable.
+     *
+     * @var array<int, string>
+     */
+    protected $fillable = [
+        'name',
+        'email',
+        'password',
+    ];
+
+    /**
+     * The attributes that should be hidden for serialization.
+     *
+     * @var array<int, string>
+     */
+    protected $hidden = [
+        'password',
+        'remember_token',
+    ];
+
+    /**
+     * The attributes that should be cast.
+     *
+     * @var array<string, string>
+     */
+    protected $casts = [
+        'email_verified_at' => 'datetime',
+    ];
+}
Index: app/Models/Renk.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Models/Renk.php	(date 1649753705355)
+++ app/Models/Renk.php	(date 1649753705355)
@@ -0,0 +1,13 @@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Database\Eloquent\Model;
+
+class Renk extends Model
+{
+    use HasFactory;
+    protected $table = "renk";
+    protected $guarded = [];
+}
Index: app/Models/Beden.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Models/Beden.php	(date 1649682084181)
+++ app/Models/Beden.php	(date 1649682084181)
@@ -0,0 +1,13 @@
+<?php
+
+namespace App\Models;
+
+use Illuminate\Database\Eloquent\Factories\HasFactory;
+use Illuminate\Database\Eloquent\Model;
+
+class Beden extends Model
+{
+    use HasFactory;
+    protected $table = "beden";
+    protected $guarded = [];
+}
Index: app/Http/Middleware/TrustHosts.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Middleware/TrustHosts.php	(date 1648547424000)
+++ app/Http/Middleware/TrustHosts.php	(date 1648547424000)
@@ -0,0 +1,20 @@
+<?php
+
+namespace App\Http\Middleware;
+
+use Illuminate\Http\Middleware\TrustHosts as Middleware;
+
+class TrustHosts extends Middleware
+{
+    /**
+     * Get the host patterns that should be trusted.
+     *
+     * @return array<int, string|null>
+     */
+    public function hosts()
+    {
+        return [
+            $this->allSubdomainsOfApplicationUrl(),
+        ];
+    }
+}
Index: app/Http/Controllers/Controller.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Controllers/Controller.php	(date 1648547424000)
+++ app/Http/Controllers/Controller.php	(date 1648547424000)
@@ -0,0 +1,13 @@
+<?php
+
+namespace App\Http\Controllers;
+
+use Illuminate\Foundation\Auth\Access\AuthorizesRequests;
+use Illuminate\Foundation\Bus\DispatchesJobs;
+use Illuminate\Foundation\Validation\ValidatesRequests;
+use Illuminate\Routing\Controller as BaseController;
+
+class Controller extends BaseController
+{
+    use AuthorizesRequests, DispatchesJobs, ValidatesRequests;
+}
Index: app/Http/Controllers/AnasayfaController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Controllers/AnasayfaController.php	(date 1649686632180)
+++ app/Http/Controllers/AnasayfaController.php	(date 1649686632180)
@@ -0,0 +1,14 @@
+<?php
+
+namespace App\Http\Controllers;
+
+use App\Models\Renk;
+use Illuminate\Http\Request;
+
+class AnasayfaController extends Controller
+{
+    public function index() {
+        return view('anasayfa');
+    }
+
+}
Index: app/Http/Controllers/DetayController.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Controllers/DetayController.php	(date 1649745929618)
+++ app/Http/Controllers/DetayController.php	(date 1649745929618)
@@ -0,0 +1,17 @@
+<?php
+
+namespace App\Http\Controllers;
+
+use App\Models\Eticaret;
+use Illuminate\Http\Request;
+
+class DetayController extends Controller
+{
+    public function index($id)
+    {
+        $urun = Eticaret::where('id', $id)->first();
+        return view('detay', compact('urun'));
+
+    }
+
+}
Index: app/Http/Middleware/EncryptCookies.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Middleware/EncryptCookies.php	(date 1648547424000)
+++ app/Http/Middleware/EncryptCookies.php	(date 1648547424000)
@@ -0,0 +1,17 @@
+<?php
+
+namespace App\Http\Middleware;
+
+use Illuminate\Cookie\Middleware\EncryptCookies as Middleware;
+
+class EncryptCookies extends Middleware
+{
+    /**
+     * The names of the cookies that should not be encrypted.
+     *
+     * @var array<int, string>
+     */
+    protected $except = [
+        //
+    ];
+}
Index: app/Http/Middleware/PreventRequestsDuringMaintenance.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Middleware/PreventRequestsDuringMaintenance.php	(date 1648547424000)
+++ app/Http/Middleware/PreventRequestsDuringMaintenance.php	(date 1648547424000)
@@ -0,0 +1,17 @@
+<?php
+
+namespace App\Http\Middleware;
+
+use Illuminate\Foundation\Http\Middleware\PreventRequestsDuringMaintenance as Middleware;
+
+class PreventRequestsDuringMaintenance extends Middleware
+{
+    /**
+     * The URIs that should be reachable while maintenance mode is enabled.
+     *
+     * @var array<int, string>
+     */
+    protected $except = [
+        //
+    ];
+}
Index: app/Http/Middleware/TrimStrings.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Middleware/TrimStrings.php	(date 1648547424000)
+++ app/Http/Middleware/TrimStrings.php	(date 1648547424000)
@@ -0,0 +1,19 @@
+<?php
+
+namespace App\Http\Middleware;
+
+use Illuminate\Foundation\Http\Middleware\TrimStrings as Middleware;
+
+class TrimStrings extends Middleware
+{
+    /**
+     * The names of the attributes that should not be trimmed.
+     *
+     * @var array<int, string>
+     */
+    protected $except = [
+        'current_password',
+        'password',
+        'password_confirmation',
+    ];
+}
Index: app/Http/Middleware/TrustProxies.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Middleware/TrustProxies.php	(date 1648547424000)
+++ app/Http/Middleware/TrustProxies.php	(date 1648547424000)
@@ -0,0 +1,28 @@
+<?php
+
+namespace App\Http\Middleware;
+
+use Illuminate\Http\Middleware\TrustProxies as Middleware;
+use Illuminate\Http\Request;
+
+class TrustProxies extends Middleware
+{
+    /**
+     * The trusted proxies for this application.
+     *
+     * @var array<int, string>|string|null
+     */
+    protected $proxies;
+
+    /**
+     * The headers that should be used to detect proxies.
+     *
+     * @var int
+     */
+    protected $headers =
+        Request::HEADER_X_FORWARDED_FOR |
+        Request::HEADER_X_FORWARDED_HOST |
+        Request::HEADER_X_FORWARDED_PORT |
+        Request::HEADER_X_FORWARDED_PROTO |
+        Request::HEADER_X_FORWARDED_AWS_ELB;
+}
Index: app/Http/Middleware/VerifyCsrfToken.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Middleware/VerifyCsrfToken.php	(date 1648547424000)
+++ app/Http/Middleware/VerifyCsrfToken.php	(date 1648547424000)
@@ -0,0 +1,17 @@
+<?php
+
+namespace App\Http\Middleware;
+
+use Illuminate\Foundation\Http\Middleware\VerifyCsrfToken as Middleware;
+
+class VerifyCsrfToken extends Middleware
+{
+    /**
+     * The URIs that should be excluded from CSRF verification.
+     *
+     * @var array<int, string>
+     */
+    protected $except = [
+        //
+    ];
+}
Index: app/Http/Middleware/Authenticate.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Middleware/Authenticate.php	(date 1648547424000)
+++ app/Http/Middleware/Authenticate.php	(date 1648547424000)
@@ -0,0 +1,21 @@
+<?php
+
+namespace App\Http\Middleware;
+
+use Illuminate\Auth\Middleware\Authenticate as Middleware;
+
+class Authenticate extends Middleware
+{
+    /**
+     * Get the path the user should be redirected to when they are not authenticated.
+     *
+     * @param  \Illuminate\Http\Request  $request
+     * @return string|null
+     */
+    protected function redirectTo($request)
+    {
+        if (! $request->expectsJson()) {
+            return route('login');
+        }
+    }
+}
Index: app/Http/Middleware/RedirectIfAuthenticated.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Middleware/RedirectIfAuthenticated.php	(date 1648547424000)
+++ app/Http/Middleware/RedirectIfAuthenticated.php	(date 1648547424000)
@@ -0,0 +1,32 @@
+<?php
+
+namespace App\Http\Middleware;
+
+use App\Providers\RouteServiceProvider;
+use Closure;
+use Illuminate\Http\Request;
+use Illuminate\Support\Facades\Auth;
+
+class RedirectIfAuthenticated
+{
+    /**
+     * Handle an incoming request.
+     *
+     * @param  \Illuminate\Http\Request  $request
+     * @param  \Closure(\Illuminate\Http\Request): (\Illuminate\Http\Response|\Illuminate\Http\RedirectResponse)  $next
+     * @param  string|null  ...$guards
+     * @return \Illuminate\Http\Response|\Illuminate\Http\RedirectResponse
+     */
+    public function handle(Request $request, Closure $next, ...$guards)
+    {
+        $guards = empty($guards) ? [null] : $guards;
+
+        foreach ($guards as $guard) {
+            if (Auth::guard($guard)->check()) {
+                return redirect(RouteServiceProvider::HOME);
+            }
+        }
+
+        return $next($request);
+    }
+}
Index: app/Http/Kernel.php
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- app/Http/Kernel.php	(date 1648547424000)
+++ app/Http/Kernel.php	(date 1648547424000)
@@ -0,0 +1,67 @@
+<?php
+
+namespace App\Http;
+
+use Illuminate\Foundation\Http\Kernel as HttpKernel;
+
+class Kernel extends HttpKernel
+{
+    /**
+     * The application's global HTTP middleware stack.
+     *
+     * These middleware are run during every request to your application.
+     *
+     * @var array<int, class-string|string>
+     */
+    protected $middleware = [
+        // \App\Http\Middleware\TrustHosts::class,
+        \App\Http\Middleware\TrustProxies::class,
+        \Illuminate\Http\Middleware\HandleCors::class,
+        \App\Http\Middleware\PreventRequestsDuringMaintenance::class,
+        \Illuminate\Foundation\Http\Middleware\ValidatePostSize::class,
+        \App\Http\Middleware\TrimStrings::class,
+        \Illuminate\Foundation\Http\Middleware\ConvertEmptyStringsToNull::class,
+    ];
+
+    /**
+     * The application's route middleware groups.
+     *
+     * @var array<string, array<int, class-string|string>>
+     */
+    protected $middlewareGroups = [
+        'web' => [
+            \App\Http\Middleware\EncryptCookies::class,
+            \Illuminate\Cookie\Middleware\AddQueuedCookiesToResponse::class,
+            \Illuminate\Session\Middleware\StartSession::class,
+            \Illuminate\View\Middleware\ShareErrorsFromSession::class,
+            \App\Http\Middleware\VerifyCsrfToken::class,
+            \Illuminate\Routing\Middleware\SubstituteBindings::class,
+        ],
+
+        'api' => [
+            // \Laravel\Sanctum\Http\Middleware\EnsureFrontendRequestsAreStateful::class,
+            'throttle:api',
+            \Illuminate\Routing\Middleware\SubstituteBindings::class,
+        ],
+    ];
+
+    /**
+     * The application's route middleware.
+     *
+     * These middleware may be assigned to groups or used individually.
+     *
+     * @var array<string, class-string|string>
+     */
+    protected $routeMiddleware = [
+        'auth' => \App\Http\Middleware\Authenticate::class,
+        'auth.basic' => \Illuminate\Auth\Middleware\AuthenticateWithBasicAuth::class,
+        'auth.session' => \Illuminate\Session\Middleware\AuthenticateSession::class,
+        'cache.headers' => \Illuminate\Http\Middleware\SetCacheHeaders::class,
+        'can' => \Illuminate\Auth\Middleware\Authorize::class,
+        'guest' => \App\Http\Middleware\RedirectIfAuthenticated::class,
+        'password.confirm' => \Illuminate\Auth\Middleware\RequirePassword::class,
+        'signed' => \Illuminate\Routing\Middleware\ValidateSignature::class,
+        'throttle' => \Illuminate\Routing\Middleware\ThrottleRequests::class,
+        'verified' => \Illuminate\Auth\Middleware\EnsureEmailIsVerified::class,
+    ];
+}
Index: README.md
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- README.md	(date 1648547424000)
+++ README.md	(date 1648547424000)
@@ -0,0 +1,64 @@
+<p align="center"><a href="https://laravel.com" target="_blank"><img src="https://raw.githubusercontent.com/laravel/art/master/logo-lockup/5%20SVG/2%20CMYK/1%20Full%20Color/laravel-logolockup-cmyk-red.svg" width="400"></a></p>
+
+<p align="center">
+<a href="https://travis-ci.org/laravel/framework"><img src="https://travis-ci.org/laravel/framework.svg" alt="Build Status"></a>
+<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/dt/laravel/framework" alt="Total Downloads"></a>
+<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/v/laravel/framework" alt="Latest Stable Version"></a>
+<a href="https://packagist.org/packages/laravel/framework"><img src="https://img.shields.io/packagist/l/laravel/framework" alt="License"></a>
+</p>
+
+## About Laravel
+
+Laravel is a web application framework with expressive, elegant syntax. We believe development must be an enjoyable and creative experience to be truly fulfilling. Laravel takes the pain out of development by easing common tasks used in many web projects, such as:
+
+- [Simple, fast routing engine](https://laravel.com/docs/routing).
+- [Powerful dependency injection container](https://laravel.com/docs/container).
+- Multiple back-ends for [session](https://laravel.com/docs/session) and [cache](https://laravel.com/docs/cache) storage.
+- Expressive, intuitive [database ORM](https://laravel.com/docs/eloquent).
+- Database agnostic [schema migrations](https://laravel.com/docs/migrations).
+- [Robust background job processing](https://laravel.com/docs/queues).
+- [Real-time event broadcasting](https://laravel.com/docs/broadcasting).
+
+Laravel is accessible, powerful, and provides tools required for large, robust applications.
+
+## Learning Laravel
+
+Laravel has the most extensive and thorough [documentation](https://laravel.com/docs) and video tutorial library of all modern web application frameworks, making it a breeze to get started with the framework.
+
+If you don't feel like reading, [Laracasts](https://laracasts.com) can help. Laracasts contains over 2000 video tutorials on a range of topics including Laravel, modern PHP, unit testing, and JavaScript. Boost your skills by digging into our comprehensive video library.
+
+## Laravel Sponsors
+
+We would like to extend our thanks to the following sponsors for funding Laravel development. If you are interested in becoming a sponsor, please visit the Laravel [Patreon page](https://patreon.com/taylorotwell).
+
+### Premium Partners
+
+- **[Vehikl](https://vehikl.com/)**
+- **[Tighten Co.](https://tighten.co)**
+- **[Kirschbaum Development Group](https://kirschbaumdevelopment.com)**
+- **[64 Robots](https://64robots.com)**
+- **[Cubet Techno Labs](https://cubettech.com)**
+- **[Cyber-Duck](https://cyber-duck.co.uk)**
+- **[Many](https://www.many.co.uk)**
+- **[Webdock, Fast VPS Hosting](https://www.webdock.io/en)**
+- **[DevSquad](https://devsquad.com)**
+- **[Curotec](https://www.curotec.com/services/technologies/laravel/)**
+- **[OP.GG](https://op.gg)**
+- **[WebReinvent](https://webreinvent.com/?utm_source=laravel&utm_medium=github&utm_campaign=patreon-sponsors)**
+- **[Lendio](https://lendio.com)**
+
+## Contributing
+
+Thank you for considering contributing to the Laravel framework! The contribution guide can be found in the [Laravel documentation](https://laravel.com/docs/contributions).
+
+## Code of Conduct
+
+In order to ensure that the Laravel community is welcoming to all, please review and abide by the [Code of Conduct](https://laravel.com/docs/contributions#code-of-conduct).
+
+## Security Vulnerabilities
+
+If you discover a security vulnerability within Laravel, please send an e-mail to Taylor Otwell via [taylor@laravel.com](mailto:taylor@laravel.com). All security vulnerabilities will be promptly addressed.
+
+## License
+
+The Laravel framework is open-sourced software licensed under the [MIT license](https://opensource.org/licenses/MIT).
Index: resources/js/app.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- resources/js/app.js	(date 1648547424000)
+++ resources/js/app.js	(date 1648547424000)
@@ -0,0 +1,1 @@
+require('./bootstrap');
Index: resources/js/bootstrap.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- resources/js/bootstrap.js	(date 1648547424000)
+++ resources/js/bootstrap.js	(date 1648547424000)
@@ -0,0 +1,28 @@
+window._ = require('lodash');
+
+/**
+ * We'll load the axios HTTP library which allows us to easily issue requests
+ * to our Laravel back-end. This library automatically handles sending the
+ * CSRF token as a header based on the value of the "XSRF" token cookie.
+ */
+
+window.axios = require('axios');
+
+window.axios.defaults.headers.common['X-Requested-With'] = 'XMLHttpRequest';
+
+/**
+ * Echo exposes an expressive API for subscribing to channels and listening
+ * for events that are broadcast by Laravel. Echo and event broadcasting
+ * allows your team to easily build robust real-time web applications.
+ */
+
+// import Echo from 'laravel-echo';
+
+// window.Pusher = require('pusher-js');
+
+// window.Echo = new Echo({
+//     broadcaster: 'pusher',
+//     key: process.env.MIX_PUSHER_APP_KEY,
+//     cluster: process.env.MIX_PUSHER_APP_CLUSTER,
+//     forceTLS: true
+// });
Index: phpunit.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- phpunit.xml	(date 1648547424000)
+++ phpunit.xml	(date 1648547424000)
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<phpunit xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+         xsi:noNamespaceSchemaLocation="./vendor/phpunit/phpunit/phpunit.xsd"
+         bootstrap="vendor/autoload.php"
+         colors="true"
+>
+    <testsuites>
+        <testsuite name="Unit">
+            <directory suffix="Test.php">./tests/Unit</directory>
+        </testsuite>
+        <testsuite name="Feature">
+            <directory suffix="Test.php">./tests/Feature</directory>
+        </testsuite>
+    </testsuites>
+    <coverage processUncoveredFiles="true">
+        <include>
+            <directory suffix=".php">./app</directory>
+        </include>
+    </coverage>
+    <php>
+        <env name="APP_ENV" value="testing"/>
+        <env name="BCRYPT_ROUNDS" value="4"/>
+        <env name="CACHE_DRIVER" value="array"/>
+        <!-- <env name="DB_CONNECTION" value="sqlite"/> -->
+        <!-- <env name="DB_DATABASE" value=":memory:"/> -->
+        <env name="MAIL_MAILER" value="array"/>
+        <env name="QUEUE_CONNECTION" value="sync"/>
+        <env name="SESSION_DRIVER" value="array"/>
+        <env name="TELESCOPE_ENABLED" value="false"/>
+    </php>
+</phpunit>
Index: .editorconfig
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .editorconfig	(date 1648547424000)
+++ .editorconfig	(date 1648547424000)
@@ -0,0 +1,18 @@
+root = true
+
+[*]
+charset = utf-8
+end_of_line = lf
+insert_final_newline = true
+indent_style = space
+indent_size = 4
+trim_trailing_whitespace = true
+
+[*.md]
+trim_trailing_whitespace = false
+
+[*.{yml,yaml}]
+indent_size = 2
+
+[docker-compose.yml]
+indent_size = 4
Index: composer.lock
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- composer.lock	(date 1649681098295)
+++ composer.lock	(date 1649681098295)
@@ -0,0 +1,7745 @@
+{
+    "_readme": [
+        "This file locks the dependencies of your project to a known state",
+        "Read more about it at https://getcomposer.org/doc/01-basic-usage.md#installing-dependencies",
+        "This file is @generated automatically"
+    ],
+    "content-hash": "12524947d8c752f84bc21aaaede06bfa",
+    "packages": [
+        {
+            "name": "brick/math",
+            "version": "0.9.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/brick/math.git",
+                "reference": "ca57d18f028f84f777b2168cd1911b0dee2343ae"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/brick/math/zipball/ca57d18f028f84f777b2168cd1911b0dee2343ae",
+                "reference": "ca57d18f028f84f777b2168cd1911b0dee2343ae",
+                "shasum": ""
+            },
+            "require": {
+                "ext-json": "*",
+                "php": "^7.1 || ^8.0"
+            },
+            "require-dev": {
+                "php-coveralls/php-coveralls": "^2.2",
+                "phpunit/phpunit": "^7.5.15 || ^8.5 || ^9.0",
+                "vimeo/psalm": "4.9.2"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Brick\\Math\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "description": "Arbitrary-precision arithmetic library",
+            "keywords": [
+                "Arbitrary-precision",
+                "BigInteger",
+                "BigRational",
+                "arithmetic",
+                "bigdecimal",
+                "bignum",
+                "brick",
+                "math"
+            ],
+            "support": {
+                "issues": "https://github.com/brick/math/issues",
+                "source": "https://github.com/brick/math/tree/0.9.3"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/BenMorel",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/brick/math",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-08-15T20:50:18+00:00"
+        },
+        {
+            "name": "dflydev/dot-access-data",
+            "version": "v3.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/dflydev/dflydev-dot-access-data.git",
+                "reference": "0992cc19268b259a39e86f296da5f0677841f42c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/dflydev/dflydev-dot-access-data/zipball/0992cc19268b259a39e86f296da5f0677841f42c",
+                "reference": "0992cc19268b259a39e86f296da5f0677841f42c",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.1 || ^8.0"
+            },
+            "require-dev": {
+                "phpstan/phpstan": "^0.12.42",
+                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.3",
+                "scrutinizer/ocular": "1.6.0",
+                "squizlabs/php_codesniffer": "^3.5",
+                "vimeo/psalm": "^3.14"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "3.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Dflydev\\DotAccessData\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Dragonfly Development Inc.",
+                    "email": "info@dflydev.com",
+                    "homepage": "http://dflydev.com"
+                },
+                {
+                    "name": "Beau Simensen",
+                    "email": "beau@dflydev.com",
+                    "homepage": "http://beausimensen.com"
+                },
+                {
+                    "name": "Carlos Frutos",
+                    "email": "carlos@kiwing.it",
+                    "homepage": "https://github.com/cfrutos"
+                },
+                {
+                    "name": "Colin O'Dell",
+                    "email": "colinodell@gmail.com",
+                    "homepage": "https://www.colinodell.com"
+                }
+            ],
+            "description": "Given a deep data structure, access data by dot notation.",
+            "homepage": "https://github.com/dflydev/dflydev-dot-access-data",
+            "keywords": [
+                "access",
+                "data",
+                "dot",
+                "notation"
+            ],
+            "support": {
+                "issues": "https://github.com/dflydev/dflydev-dot-access-data/issues",
+                "source": "https://github.com/dflydev/dflydev-dot-access-data/tree/v3.0.1"
+            },
+            "time": "2021-08-13T13:06:58+00:00"
+        },
+        {
+            "name": "doctrine/inflector",
+            "version": "2.0.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/doctrine/inflector.git",
+                "reference": "8b7ff3e4b7de6b2c84da85637b59fd2880ecaa89"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/doctrine/inflector/zipball/8b7ff3e4b7de6b2c84da85637b59fd2880ecaa89",
+                "reference": "8b7ff3e4b7de6b2c84da85637b59fd2880ecaa89",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.2 || ^8.0"
+            },
+            "require-dev": {
+                "doctrine/coding-standard": "^8.2",
+                "phpstan/phpstan": "^0.12",
+                "phpstan/phpstan-phpunit": "^0.12",
+                "phpstan/phpstan-strict-rules": "^0.12",
+                "phpunit/phpunit": "^7.0 || ^8.0 || ^9.0",
+                "vimeo/psalm": "^4.10"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Doctrine\\Inflector\\": "lib/Doctrine/Inflector"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Guilherme Blanco",
+                    "email": "guilhermeblanco@gmail.com"
+                },
+                {
+                    "name": "Roman Borschel",
+                    "email": "roman@code-factory.org"
+                },
+                {
+                    "name": "Benjamin Eberlei",
+                    "email": "kontakt@beberlei.de"
+                },
+                {
+                    "name": "Jonathan Wage",
+                    "email": "jonwage@gmail.com"
+                },
+                {
+                    "name": "Johannes Schmitt",
+                    "email": "schmittjoh@gmail.com"
+                }
+            ],
+            "description": "PHP Doctrine Inflector is a small library that can perform string manipulations with regard to upper/lowercase and singular/plural forms of words.",
+            "homepage": "https://www.doctrine-project.org/projects/inflector.html",
+            "keywords": [
+                "inflection",
+                "inflector",
+                "lowercase",
+                "manipulation",
+                "php",
+                "plural",
+                "singular",
+                "strings",
+                "uppercase",
+                "words"
+            ],
+            "support": {
+                "issues": "https://github.com/doctrine/inflector/issues",
+                "source": "https://github.com/doctrine/inflector/tree/2.0.4"
+            },
+            "funding": [
+                {
+                    "url": "https://www.doctrine-project.org/sponsorship.html",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://www.patreon.com/phpdoctrine",
+                    "type": "patreon"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Finflector",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-10-22T20:16:43+00:00"
+        },
+        {
+            "name": "doctrine/lexer",
+            "version": "1.2.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/doctrine/lexer.git",
+                "reference": "c268e882d4dbdd85e36e4ad69e02dc284f89d229"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/doctrine/lexer/zipball/c268e882d4dbdd85e36e4ad69e02dc284f89d229",
+                "reference": "c268e882d4dbdd85e36e4ad69e02dc284f89d229",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.1 || ^8.0"
+            },
+            "require-dev": {
+                "doctrine/coding-standard": "^9.0",
+                "phpstan/phpstan": "^1.3",
+                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.5",
+                "vimeo/psalm": "^4.11"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Doctrine\\Common\\Lexer\\": "lib/Doctrine/Common/Lexer"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Guilherme Blanco",
+                    "email": "guilhermeblanco@gmail.com"
+                },
+                {
+                    "name": "Roman Borschel",
+                    "email": "roman@code-factory.org"
+                },
+                {
+                    "name": "Johannes Schmitt",
+                    "email": "schmittjoh@gmail.com"
+                }
+            ],
+            "description": "PHP Doctrine Lexer parser library that can be used in Top-Down, Recursive Descent Parsers.",
+            "homepage": "https://www.doctrine-project.org/projects/lexer.html",
+            "keywords": [
+                "annotations",
+                "docblock",
+                "lexer",
+                "parser",
+                "php"
+            ],
+            "support": {
+                "issues": "https://github.com/doctrine/lexer/issues",
+                "source": "https://github.com/doctrine/lexer/tree/1.2.3"
+            },
+            "funding": [
+                {
+                    "url": "https://www.doctrine-project.org/sponsorship.html",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://www.patreon.com/phpdoctrine",
+                    "type": "patreon"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Flexer",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-02-28T11:07:21+00:00"
+        },
+        {
+            "name": "dragonmantank/cron-expression",
+            "version": "v3.3.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/dragonmantank/cron-expression.git",
+                "reference": "be85b3f05b46c39bbc0d95f6c071ddff669510fa"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/dragonmantank/cron-expression/zipball/be85b3f05b46c39bbc0d95f6c071ddff669510fa",
+                "reference": "be85b3f05b46c39bbc0d95f6c071ddff669510fa",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.2|^8.0",
+                "webmozart/assert": "^1.0"
+            },
+            "replace": {
+                "mtdowling/cron-expression": "^1.0"
+            },
+            "require-dev": {
+                "phpstan/extension-installer": "^1.0",
+                "phpstan/phpstan": "^1.0",
+                "phpstan/phpstan-webmozart-assert": "^1.0",
+                "phpunit/phpunit": "^7.0|^8.0|^9.0"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Cron\\": "src/Cron/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Chris Tankersley",
+                    "email": "chris@ctankersley.com",
+                    "homepage": "https://github.com/dragonmantank"
+                }
+            ],
+            "description": "CRON for PHP: Calculate the next or previous run date and determine if a CRON expression is due",
+            "keywords": [
+                "cron",
+                "schedule"
+            ],
+            "support": {
+                "issues": "https://github.com/dragonmantank/cron-expression/issues",
+                "source": "https://github.com/dragonmantank/cron-expression/tree/v3.3.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/dragonmantank",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-01-18T15:43:28+00:00"
+        },
+        {
+            "name": "egulias/email-validator",
+            "version": "3.1.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/egulias/EmailValidator.git",
+                "reference": "ee0db30118f661fb166bcffbf5d82032df484697"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/egulias/EmailValidator/zipball/ee0db30118f661fb166bcffbf5d82032df484697",
+                "reference": "ee0db30118f661fb166bcffbf5d82032df484697",
+                "shasum": ""
+            },
+            "require": {
+                "doctrine/lexer": "^1.2",
+                "php": ">=7.2",
+                "symfony/polyfill-intl-idn": "^1.15"
+            },
+            "require-dev": {
+                "php-coveralls/php-coveralls": "^2.2",
+                "phpunit/phpunit": "^8.5.8|^9.3.3",
+                "vimeo/psalm": "^4"
+            },
+            "suggest": {
+                "ext-intl": "PHP Internationalization Libraries are required to use the SpoofChecking validation"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Egulias\\EmailValidator\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Eduardo Gulias Davis"
+                }
+            ],
+            "description": "A library for validating emails against several RFCs",
+            "homepage": "https://github.com/egulias/EmailValidator",
+            "keywords": [
+                "email",
+                "emailvalidation",
+                "emailvalidator",
+                "validation",
+                "validator"
+            ],
+            "support": {
+                "issues": "https://github.com/egulias/EmailValidator/issues",
+                "source": "https://github.com/egulias/EmailValidator/tree/3.1.2"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/egulias",
+                    "type": "github"
+                }
+            ],
+            "time": "2021-10-11T09:18:27+00:00"
+        },
+        {
+            "name": "fruitcake/php-cors",
+            "version": "v1.2.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/fruitcake/php-cors.git",
+                "reference": "58571acbaa5f9f462c9c77e911700ac66f446d4e"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/fruitcake/php-cors/zipball/58571acbaa5f9f462c9c77e911700ac66f446d4e",
+                "reference": "58571acbaa5f9f462c9c77e911700ac66f446d4e",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.4|^8.0",
+                "symfony/http-foundation": "^4.4|^5.4|^6"
+            },
+            "require-dev": {
+                "phpstan/phpstan": "^1.4",
+                "phpunit/phpunit": "^9",
+                "squizlabs/php_codesniffer": "^3.5"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.1-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Fruitcake\\Cors\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fruitcake",
+                    "homepage": "https://fruitcake.nl"
+                },
+                {
+                    "name": "Barryvdh",
+                    "email": "barryvdh@gmail.com"
+                }
+            ],
+            "description": "Cross-origin resource sharing library for the Symfony HttpFoundation",
+            "homepage": "https://github.com/fruitcake/php-cors",
+            "keywords": [
+                "cors",
+                "laravel",
+                "symfony"
+            ],
+            "support": {
+                "issues": "https://github.com/fruitcake/php-cors/issues",
+                "source": "https://github.com/fruitcake/php-cors/tree/v1.2.0"
+            },
+            "funding": [
+                {
+                    "url": "https://fruitcake.nl",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/barryvdh",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-02-20T15:07:15+00:00"
+        },
+        {
+            "name": "graham-campbell/result-type",
+            "version": "v1.0.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/GrahamCampbell/Result-Type.git",
+                "reference": "0690bde05318336c7221785f2a932467f98b64ca"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/GrahamCampbell/Result-Type/zipball/0690bde05318336c7221785f2a932467f98b64ca",
+                "reference": "0690bde05318336c7221785f2a932467f98b64ca",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.0 || ^8.0",
+                "phpoption/phpoption": "^1.8"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^6.5.14 || ^7.5.20 || ^8.5.19 || ^9.5.8"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "GrahamCampbell\\ResultType\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Graham Campbell",
+                    "email": "hello@gjcampbell.co.uk",
+                    "homepage": "https://github.com/GrahamCampbell"
+                }
+            ],
+            "description": "An Implementation Of The Result Type",
+            "keywords": [
+                "Graham Campbell",
+                "GrahamCampbell",
+                "Result Type",
+                "Result-Type",
+                "result"
+            ],
+            "support": {
+                "issues": "https://github.com/GrahamCampbell/Result-Type/issues",
+                "source": "https://github.com/GrahamCampbell/Result-Type/tree/v1.0.4"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/GrahamCampbell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/graham-campbell/result-type",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-11-21T21:41:47+00:00"
+        },
+        {
+            "name": "guzzlehttp/guzzle",
+            "version": "7.4.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/guzzle/guzzle.git",
+                "reference": "ac1ec1cd9b5624694c3a40be801d94137afb12b4"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/guzzle/guzzle/zipball/ac1ec1cd9b5624694c3a40be801d94137afb12b4",
+                "reference": "ac1ec1cd9b5624694c3a40be801d94137afb12b4",
+                "shasum": ""
+            },
+            "require": {
+                "ext-json": "*",
+                "guzzlehttp/promises": "^1.5",
+                "guzzlehttp/psr7": "^1.8.3 || ^2.1",
+                "php": "^7.2.5 || ^8.0",
+                "psr/http-client": "^1.0",
+                "symfony/deprecation-contracts": "^2.2 || ^3.0"
+            },
+            "provide": {
+                "psr/http-client-implementation": "1.0"
+            },
+            "require-dev": {
+                "bamarni/composer-bin-plugin": "^1.4.1",
+                "ext-curl": "*",
+                "php-http/client-integration-tests": "^3.0",
+                "phpunit/phpunit": "^8.5.5 || ^9.3.5",
+                "psr/log": "^1.1 || ^2.0 || ^3.0"
+            },
+            "suggest": {
+                "ext-curl": "Required for CURL handler support",
+                "ext-intl": "Required for Internationalized Domain Name (IDN) support",
+                "psr/log": "Required for using the Log middleware"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "7.4-dev"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "src/functions_include.php"
+                ],
+                "psr-4": {
+                    "GuzzleHttp\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Graham Campbell",
+                    "email": "hello@gjcampbell.co.uk",
+                    "homepage": "https://github.com/GrahamCampbell"
+                },
+                {
+                    "name": "Michael Dowling",
+                    "email": "mtdowling@gmail.com",
+                    "homepage": "https://github.com/mtdowling"
+                },
+                {
+                    "name": "Jeremy Lindblom",
+                    "email": "jeremeamia@gmail.com",
+                    "homepage": "https://github.com/jeremeamia"
+                },
+                {
+                    "name": "George Mponos",
+                    "email": "gmponos@gmail.com",
+                    "homepage": "https://github.com/gmponos"
+                },
+                {
+                    "name": "Tobias Nyholm",
+                    "email": "tobias.nyholm@gmail.com",
+                    "homepage": "https://github.com/Nyholm"
+                },
+                {
+                    "name": "Márk Sági-Kazár",
+                    "email": "mark.sagikazar@gmail.com",
+                    "homepage": "https://github.com/sagikazarmark"
+                },
+                {
+                    "name": "Tobias Schultze",
+                    "email": "webmaster@tubo-world.de",
+                    "homepage": "https://github.com/Tobion"
+                }
+            ],
+            "description": "Guzzle is a PHP HTTP client library",
+            "keywords": [
+                "client",
+                "curl",
+                "framework",
+                "http",
+                "http client",
+                "psr-18",
+                "psr-7",
+                "rest",
+                "web service"
+            ],
+            "support": {
+                "issues": "https://github.com/guzzle/guzzle/issues",
+                "source": "https://github.com/guzzle/guzzle/tree/7.4.2"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/GrahamCampbell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://github.com/Nyholm",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/guzzle",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-20T14:16:28+00:00"
+        },
+        {
+            "name": "guzzlehttp/promises",
+            "version": "1.5.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/guzzle/promises.git",
+                "reference": "fe752aedc9fd8fcca3fe7ad05d419d32998a06da"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/guzzle/promises/zipball/fe752aedc9fd8fcca3fe7ad05d419d32998a06da",
+                "reference": "fe752aedc9fd8fcca3fe7ad05d419d32998a06da",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.5"
+            },
+            "require-dev": {
+                "symfony/phpunit-bridge": "^4.4 || ^5.1"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.5-dev"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "src/functions_include.php"
+                ],
+                "psr-4": {
+                    "GuzzleHttp\\Promise\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Graham Campbell",
+                    "email": "hello@gjcampbell.co.uk",
+                    "homepage": "https://github.com/GrahamCampbell"
+                },
+                {
+                    "name": "Michael Dowling",
+                    "email": "mtdowling@gmail.com",
+                    "homepage": "https://github.com/mtdowling"
+                },
+                {
+                    "name": "Tobias Nyholm",
+                    "email": "tobias.nyholm@gmail.com",
+                    "homepage": "https://github.com/Nyholm"
+                },
+                {
+                    "name": "Tobias Schultze",
+                    "email": "webmaster@tubo-world.de",
+                    "homepage": "https://github.com/Tobion"
+                }
+            ],
+            "description": "Guzzle promises library",
+            "keywords": [
+                "promise"
+            ],
+            "support": {
+                "issues": "https://github.com/guzzle/promises/issues",
+                "source": "https://github.com/guzzle/promises/tree/1.5.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/GrahamCampbell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://github.com/Nyholm",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/promises",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-10-22T20:56:57+00:00"
+        },
+        {
+            "name": "guzzlehttp/psr7",
+            "version": "2.2.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/guzzle/psr7.git",
+                "reference": "c94a94f120803a18554c1805ef2e539f8285f9a2"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/guzzle/psr7/zipball/c94a94f120803a18554c1805ef2e539f8285f9a2",
+                "reference": "c94a94f120803a18554c1805ef2e539f8285f9a2",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.2.5 || ^8.0",
+                "psr/http-factory": "^1.0",
+                "psr/http-message": "^1.0",
+                "ralouphie/getallheaders": "^3.0"
+            },
+            "provide": {
+                "psr/http-factory-implementation": "1.0",
+                "psr/http-message-implementation": "1.0"
+            },
+            "require-dev": {
+                "bamarni/composer-bin-plugin": "^1.4.1",
+                "http-interop/http-factory-tests": "^0.9",
+                "phpunit/phpunit": "^8.5.8 || ^9.3.10"
+            },
+            "suggest": {
+                "laminas/laminas-httphandlerrunner": "Emit PSR-7 responses"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.2-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "GuzzleHttp\\Psr7\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Graham Campbell",
+                    "email": "hello@gjcampbell.co.uk",
+                    "homepage": "https://github.com/GrahamCampbell"
+                },
+                {
+                    "name": "Michael Dowling",
+                    "email": "mtdowling@gmail.com",
+                    "homepage": "https://github.com/mtdowling"
+                },
+                {
+                    "name": "George Mponos",
+                    "email": "gmponos@gmail.com",
+                    "homepage": "https://github.com/gmponos"
+                },
+                {
+                    "name": "Tobias Nyholm",
+                    "email": "tobias.nyholm@gmail.com",
+                    "homepage": "https://github.com/Nyholm"
+                },
+                {
+                    "name": "Márk Sági-Kazár",
+                    "email": "mark.sagikazar@gmail.com",
+                    "homepage": "https://github.com/sagikazarmark"
+                },
+                {
+                    "name": "Tobias Schultze",
+                    "email": "webmaster@tubo-world.de",
+                    "homepage": "https://github.com/Tobion"
+                },
+                {
+                    "name": "Márk Sági-Kazár",
+                    "email": "mark.sagikazar@gmail.com",
+                    "homepage": "https://sagikazarmark.hu"
+                }
+            ],
+            "description": "PSR-7 message implementation that also provides common utility methods",
+            "keywords": [
+                "http",
+                "message",
+                "psr-7",
+                "request",
+                "response",
+                "stream",
+                "uri",
+                "url"
+            ],
+            "support": {
+                "issues": "https://github.com/guzzle/psr7/issues",
+                "source": "https://github.com/guzzle/psr7/tree/2.2.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/GrahamCampbell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://github.com/Nyholm",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/guzzlehttp/psr7",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-20T21:55:58+00:00"
+        },
+        {
+            "name": "laravel/framework",
+            "version": "v9.7.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/laravel/framework.git",
+                "reference": "54c9696ee3e558ab29317ed6e0cb16bb9db5aad4"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/laravel/framework/zipball/54c9696ee3e558ab29317ed6e0cb16bb9db5aad4",
+                "reference": "54c9696ee3e558ab29317ed6e0cb16bb9db5aad4",
+                "shasum": ""
+            },
+            "require": {
+                "doctrine/inflector": "^2.0",
+                "dragonmantank/cron-expression": "^3.1",
+                "egulias/email-validator": "^3.1",
+                "ext-mbstring": "*",
+                "ext-openssl": "*",
+                "fruitcake/php-cors": "^1.2",
+                "laravel/serializable-closure": "^1.0",
+                "league/commonmark": "^2.2",
+                "league/flysystem": "^3.0",
+                "monolog/monolog": "^2.0",
+                "nesbot/carbon": "^2.53.1",
+                "php": "^8.0.2",
+                "psr/container": "^1.1.1|^2.0.1",
+                "psr/log": "^1.0|^2.0|^3.0",
+                "psr/simple-cache": "^1.0|^2.0|^3.0",
+                "ramsey/uuid": "^4.2.2",
+                "symfony/console": "^6.0",
+                "symfony/error-handler": "^6.0",
+                "symfony/finder": "^6.0",
+                "symfony/http-foundation": "^6.0",
+                "symfony/http-kernel": "^6.0",
+                "symfony/mailer": "^6.0",
+                "symfony/mime": "^6.0",
+                "symfony/process": "^6.0",
+                "symfony/routing": "^6.0",
+                "symfony/var-dumper": "^6.0",
+                "tijsverkoyen/css-to-inline-styles": "^2.2.2",
+                "vlucas/phpdotenv": "^5.4.1",
+                "voku/portable-ascii": "^2.0"
+            },
+            "conflict": {
+                "tightenco/collect": "<5.5.33"
+            },
+            "provide": {
+                "psr/container-implementation": "1.1|2.0",
+                "psr/simple-cache-implementation": "1.0|2.0|3.0"
+            },
+            "replace": {
+                "illuminate/auth": "self.version",
+                "illuminate/broadcasting": "self.version",
+                "illuminate/bus": "self.version",
+                "illuminate/cache": "self.version",
+                "illuminate/collections": "self.version",
+                "illuminate/conditionable": "self.version",
+                "illuminate/config": "self.version",
+                "illuminate/console": "self.version",
+                "illuminate/container": "self.version",
+                "illuminate/contracts": "self.version",
+                "illuminate/cookie": "self.version",
+                "illuminate/database": "self.version",
+                "illuminate/encryption": "self.version",
+                "illuminate/events": "self.version",
+                "illuminate/filesystem": "self.version",
+                "illuminate/hashing": "self.version",
+                "illuminate/http": "self.version",
+                "illuminate/log": "self.version",
+                "illuminate/macroable": "self.version",
+                "illuminate/mail": "self.version",
+                "illuminate/notifications": "self.version",
+                "illuminate/pagination": "self.version",
+                "illuminate/pipeline": "self.version",
+                "illuminate/queue": "self.version",
+                "illuminate/redis": "self.version",
+                "illuminate/routing": "self.version",
+                "illuminate/session": "self.version",
+                "illuminate/support": "self.version",
+                "illuminate/testing": "self.version",
+                "illuminate/translation": "self.version",
+                "illuminate/validation": "self.version",
+                "illuminate/view": "self.version"
+            },
+            "require-dev": {
+                "aws/aws-sdk-php": "^3.198.1",
+                "doctrine/dbal": "^2.13.3|^3.1.4",
+                "fakerphp/faker": "^1.9.2",
+                "guzzlehttp/guzzle": "^7.2",
+                "league/flysystem-aws-s3-v3": "^3.0",
+                "league/flysystem-ftp": "^3.0",
+                "league/flysystem-sftp-v3": "^3.0",
+                "mockery/mockery": "^1.4.4",
+                "orchestra/testbench-core": "^7.1",
+                "pda/pheanstalk": "^4.0",
+                "phpstan/phpstan": "^1.4.7",
+                "phpunit/phpunit": "^9.5.8",
+                "predis/predis": "^1.1.9",
+                "symfony/cache": "^6.0"
+            },
+            "suggest": {
+                "ably/ably-php": "Required to use the Ably broadcast driver (^1.0).",
+                "aws/aws-sdk-php": "Required to use the SQS queue driver, DynamoDb failed job storage, and SES mail driver (^3.198.1).",
+                "brianium/paratest": "Required to run tests in parallel (^6.0).",
+                "doctrine/dbal": "Required to rename columns and drop SQLite columns (^2.13.3|^3.1.4).",
+                "ext-bcmath": "Required to use the multiple_of validation rule.",
+                "ext-ftp": "Required to use the Flysystem FTP driver.",
+                "ext-gd": "Required to use Illuminate\\Http\\Testing\\FileFactory::image().",
+                "ext-memcached": "Required to use the memcache cache driver.",
+                "ext-pcntl": "Required to use all features of the queue worker.",
+                "ext-posix": "Required to use all features of the queue worker.",
+                "ext-redis": "Required to use the Redis cache and queue drivers (^4.0|^5.0).",
+                "fakerphp/faker": "Required to use the eloquent factory builder (^1.9.1).",
+                "filp/whoops": "Required for friendly error pages in development (^2.14.3).",
+                "guzzlehttp/guzzle": "Required to use the HTTP Client and the ping methods on schedules (^7.2).",
+                "laravel/tinker": "Required to use the tinker console command (^2.0).",
+                "league/flysystem-aws-s3-v3": "Required to use the Flysystem S3 driver (^3.0).",
+                "league/flysystem-ftp": "Required to use the Flysystem FTP driver (^3.0).",
+                "league/flysystem-sftp-v3": "Required to use the Flysystem SFTP driver (^3.0).",
+                "mockery/mockery": "Required to use mocking (^1.4.4).",
+                "nyholm/psr7": "Required to use PSR-7 bridging features (^1.2).",
+                "pda/pheanstalk": "Required to use the beanstalk queue driver (^4.0).",
+                "phpunit/phpunit": "Required to use assertions and run tests (^9.5.8).",
+                "predis/predis": "Required to use the predis connector (^1.1.9).",
+                "psr/http-message": "Required to allow Storage::put to accept a StreamInterface (^1.0).",
+                "pusher/pusher-php-server": "Required to use the Pusher broadcast driver (^6.0|^7.0).",
+                "symfony/cache": "Required to PSR-6 cache bridge (^6.0).",
+                "symfony/filesystem": "Required to enable support for relative symbolic links (^6.0).",
+                "symfony/http-client": "Required to enable support for the Symfony API mail transports (^6.0).",
+                "symfony/mailgun-mailer": "Required to enable support for the Mailgun mail transport (^6.0).",
+                "symfony/postmark-mailer": "Required to enable support for the Postmark mail transport (^6.0).",
+                "symfony/psr-http-message-bridge": "Required to use PSR-7 bridging features (^2.0)."
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "9.x-dev"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "src/Illuminate/Collections/helpers.php",
+                    "src/Illuminate/Events/functions.php",
+                    "src/Illuminate/Foundation/helpers.php",
+                    "src/Illuminate/Support/helpers.php"
+                ],
+                "psr-4": {
+                    "Illuminate\\": "src/Illuminate/",
+                    "Illuminate\\Support\\": [
+                        "src/Illuminate/Macroable/",
+                        "src/Illuminate/Collections/",
+                        "src/Illuminate/Conditionable/"
+                    ]
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Taylor Otwell",
+                    "email": "taylor@laravel.com"
+                }
+            ],
+            "description": "The Laravel Framework.",
+            "homepage": "https://laravel.com",
+            "keywords": [
+                "framework",
+                "laravel"
+            ],
+            "support": {
+                "issues": "https://github.com/laravel/framework/issues",
+                "source": "https://github.com/laravel/framework"
+            },
+            "time": "2022-04-05T15:07:51+00:00"
+        },
+        {
+            "name": "laravel/sanctum",
+            "version": "v2.15.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/laravel/sanctum.git",
+                "reference": "5be160413b6f37dcf8758663edeab12d0e806f56"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/laravel/sanctum/zipball/5be160413b6f37dcf8758663edeab12d0e806f56",
+                "reference": "5be160413b6f37dcf8758663edeab12d0e806f56",
+                "shasum": ""
+            },
+            "require": {
+                "ext-json": "*",
+                "illuminate/console": "^6.9|^7.0|^8.0|^9.0",
+                "illuminate/contracts": "^6.9|^7.0|^8.0|^9.0",
+                "illuminate/database": "^6.9|^7.0|^8.0|^9.0",
+                "illuminate/support": "^6.9|^7.0|^8.0|^9.0",
+                "php": "^7.2|^8.0"
+            },
+            "require-dev": {
+                "mockery/mockery": "^1.0",
+                "orchestra/testbench": "^4.0|^5.0|^6.0|^7.0",
+                "phpunit/phpunit": "^8.0|^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.x-dev"
+                },
+                "laravel": {
+                    "providers": [
+                        "Laravel\\Sanctum\\SanctumServiceProvider"
+                    ]
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Laravel\\Sanctum\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Taylor Otwell",
+                    "email": "taylor@laravel.com"
+                }
+            ],
+            "description": "Laravel Sanctum provides a featherweight authentication system for SPAs and simple APIs.",
+            "keywords": [
+                "auth",
+                "laravel",
+                "sanctum"
+            ],
+            "support": {
+                "issues": "https://github.com/laravel/sanctum/issues",
+                "source": "https://github.com/laravel/sanctum"
+            },
+            "time": "2022-03-28T13:53:05+00:00"
+        },
+        {
+            "name": "laravel/serializable-closure",
+            "version": "v1.1.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/laravel/serializable-closure.git",
+                "reference": "9e4b005daa20b0c161f3845040046dc9ddc1d74e"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/laravel/serializable-closure/zipball/9e4b005daa20b0c161f3845040046dc9ddc1d74e",
+                "reference": "9e4b005daa20b0c161f3845040046dc9ddc1d74e",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.3|^8.0"
+            },
+            "require-dev": {
+                "pestphp/pest": "^1.18",
+                "phpstan/phpstan": "^0.12.98",
+                "symfony/var-dumper": "^5.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Laravel\\SerializableClosure\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Taylor Otwell",
+                    "email": "taylor@laravel.com"
+                },
+                {
+                    "name": "Nuno Maduro",
+                    "email": "nuno@laravel.com"
+                }
+            ],
+            "description": "Laravel Serializable Closure provides an easy and secure way to serialize closures in PHP.",
+            "keywords": [
+                "closure",
+                "laravel",
+                "serializable"
+            ],
+            "support": {
+                "issues": "https://github.com/laravel/serializable-closure/issues",
+                "source": "https://github.com/laravel/serializable-closure"
+            },
+            "time": "2022-02-11T19:23:53+00:00"
+        },
+        {
+            "name": "laravel/tinker",
+            "version": "v2.7.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/laravel/tinker.git",
+                "reference": "dff39b661e827dae6e092412f976658df82dbac5"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/laravel/tinker/zipball/dff39b661e827dae6e092412f976658df82dbac5",
+                "reference": "dff39b661e827dae6e092412f976658df82dbac5",
+                "shasum": ""
+            },
+            "require": {
+                "illuminate/console": "^6.0|^7.0|^8.0|^9.0",
+                "illuminate/contracts": "^6.0|^7.0|^8.0|^9.0",
+                "illuminate/support": "^6.0|^7.0|^8.0|^9.0",
+                "php": "^7.2.5|^8.0",
+                "psy/psysh": "^0.10.4|^0.11.1",
+                "symfony/var-dumper": "^4.3.4|^5.0|^6.0"
+            },
+            "require-dev": {
+                "mockery/mockery": "~1.3.3|^1.4.2",
+                "phpunit/phpunit": "^8.5.8|^9.3.3"
+            },
+            "suggest": {
+                "illuminate/database": "The Illuminate Database package (^6.0|^7.0|^8.0|^9.0)."
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.x-dev"
+                },
+                "laravel": {
+                    "providers": [
+                        "Laravel\\Tinker\\TinkerServiceProvider"
+                    ]
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Laravel\\Tinker\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Taylor Otwell",
+                    "email": "taylor@laravel.com"
+                }
+            ],
+            "description": "Powerful REPL for the Laravel framework.",
+            "keywords": [
+                "REPL",
+                "Tinker",
+                "laravel",
+                "psysh"
+            ],
+            "support": {
+                "issues": "https://github.com/laravel/tinker/issues",
+                "source": "https://github.com/laravel/tinker/tree/v2.7.2"
+            },
+            "time": "2022-03-23T12:38:24+00:00"
+        },
+        {
+            "name": "league/commonmark",
+            "version": "2.3.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/thephpleague/commonmark.git",
+                "reference": "32a49eb2b38fe5e5c417ab748a45d0beaab97955"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/thephpleague/commonmark/zipball/32a49eb2b38fe5e5c417ab748a45d0beaab97955",
+                "reference": "32a49eb2b38fe5e5c417ab748a45d0beaab97955",
+                "shasum": ""
+            },
+            "require": {
+                "ext-mbstring": "*",
+                "league/config": "^1.1.1",
+                "php": "^7.4 || ^8.0",
+                "psr/event-dispatcher": "^1.0",
+                "symfony/deprecation-contracts": "^2.1 || ^3.0",
+                "symfony/polyfill-php80": "^1.16"
+            },
+            "require-dev": {
+                "cebe/markdown": "^1.0",
+                "commonmark/cmark": "0.30.0",
+                "commonmark/commonmark.js": "0.30.0",
+                "composer/package-versions-deprecated": "^1.8",
+                "embed/embed": "^4.4",
+                "erusev/parsedown": "^1.0",
+                "ext-json": "*",
+                "github/gfm": "0.29.0",
+                "michelf/php-markdown": "^1.4",
+                "nyholm/psr7": "^1.5",
+                "phpstan/phpstan": "^0.12.88 || ^1.0.0",
+                "phpunit/phpunit": "^9.5.5",
+                "scrutinizer/ocular": "^1.8.1",
+                "symfony/finder": "^5.3",
+                "symfony/yaml": "^2.3 | ^3.0 | ^4.0 | ^5.0 | ^6.0",
+                "unleashedtech/php-coding-standard": "^3.1",
+                "vimeo/psalm": "^4.7.3"
+            },
+            "suggest": {
+                "symfony/yaml": "v2.3+ required if using the Front Matter extension"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "2.4-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "League\\CommonMark\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Colin O'Dell",
+                    "email": "colinodell@gmail.com",
+                    "homepage": "https://www.colinodell.com",
+                    "role": "Lead Developer"
+                }
+            ],
+            "description": "Highly-extensible PHP Markdown parser which fully supports the CommonMark spec and GitHub-Flavored Markdown (GFM)",
+            "homepage": "https://commonmark.thephpleague.com",
+            "keywords": [
+                "commonmark",
+                "flavored",
+                "gfm",
+                "github",
+                "github-flavored",
+                "markdown",
+                "md",
+                "parser"
+            ],
+            "support": {
+                "docs": "https://commonmark.thephpleague.com/",
+                "forum": "https://github.com/thephpleague/commonmark/discussions",
+                "issues": "https://github.com/thephpleague/commonmark/issues",
+                "rss": "https://github.com/thephpleague/commonmark/releases.atom",
+                "source": "https://github.com/thephpleague/commonmark"
+            },
+            "funding": [
+                {
+                    "url": "https://www.colinodell.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://www.paypal.me/colinpodell/10.00",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/colinodell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/league/commonmark",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-04-07T22:37:05+00:00"
+        },
+        {
+            "name": "league/config",
+            "version": "v1.1.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/thephpleague/config.git",
+                "reference": "a9d39eeeb6cc49d10a6e6c36f22c4c1f4a767f3e"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/thephpleague/config/zipball/a9d39eeeb6cc49d10a6e6c36f22c4c1f4a767f3e",
+                "reference": "a9d39eeeb6cc49d10a6e6c36f22c4c1f4a767f3e",
+                "shasum": ""
+            },
+            "require": {
+                "dflydev/dot-access-data": "^3.0.1",
+                "nette/schema": "^1.2",
+                "php": "^7.4 || ^8.0"
+            },
+            "require-dev": {
+                "phpstan/phpstan": "^0.12.90",
+                "phpunit/phpunit": "^9.5.5",
+                "scrutinizer/ocular": "^1.8.1",
+                "unleashedtech/php-coding-standard": "^3.1",
+                "vimeo/psalm": "^4.7.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.2-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "League\\Config\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Colin O'Dell",
+                    "email": "colinodell@gmail.com",
+                    "homepage": "https://www.colinodell.com",
+                    "role": "Lead Developer"
+                }
+            ],
+            "description": "Define configuration arrays with strict schemas and access values with dot notation",
+            "homepage": "https://config.thephpleague.com",
+            "keywords": [
+                "array",
+                "config",
+                "configuration",
+                "dot",
+                "dot-access",
+                "nested",
+                "schema"
+            ],
+            "support": {
+                "docs": "https://config.thephpleague.com/",
+                "issues": "https://github.com/thephpleague/config/issues",
+                "rss": "https://github.com/thephpleague/config/releases.atom",
+                "source": "https://github.com/thephpleague/config"
+            },
+            "funding": [
+                {
+                    "url": "https://www.colinodell.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://www.paypal.me/colinpodell/10.00",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/colinodell",
+                    "type": "github"
+                }
+            ],
+            "time": "2021-08-14T12:15:32+00:00"
+        },
+        {
+            "name": "league/flysystem",
+            "version": "3.0.15",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/thephpleague/flysystem.git",
+                "reference": "3b71cd136dc0331ee87b636b25f4ee339368c718"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/thephpleague/flysystem/zipball/3b71cd136dc0331ee87b636b25f4ee339368c718",
+                "reference": "3b71cd136dc0331ee87b636b25f4ee339368c718",
+                "shasum": ""
+            },
+            "require": {
+                "league/mime-type-detection": "^1.0.0",
+                "php": "^8.0.2"
+            },
+            "conflict": {
+                "aws/aws-sdk-php": "3.209.31 || 3.210.0",
+                "guzzlehttp/guzzle": "<7.0",
+                "guzzlehttp/ringphp": "<1.1.1",
+                "symfony/http-client": "<5.2"
+            },
+            "require-dev": {
+                "async-aws/s3": "^1.5",
+                "async-aws/simple-s3": "^1.0",
+                "aws/aws-sdk-php": "^3.198.1",
+                "composer/semver": "^3.0",
+                "ext-fileinfo": "*",
+                "ext-ftp": "*",
+                "ext-zip": "*",
+                "friendsofphp/php-cs-fixer": "^3.5",
+                "google/cloud-storage": "^1.23",
+                "microsoft/azure-storage-blob": "^1.1",
+                "phpseclib/phpseclib": "^2.0",
+                "phpstan/phpstan": "^0.12.26",
+                "phpunit/phpunit": "^9.5.11",
+                "sabre/dav": "^4.3.1"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "League\\Flysystem\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Frank de Jonge",
+                    "email": "info@frankdejonge.nl"
+                }
+            ],
+            "description": "File storage abstraction for PHP",
+            "keywords": [
+                "WebDAV",
+                "aws",
+                "cloud",
+                "file",
+                "files",
+                "filesystem",
+                "filesystems",
+                "ftp",
+                "s3",
+                "sftp",
+                "storage"
+            ],
+            "support": {
+                "issues": "https://github.com/thephpleague/flysystem/issues",
+                "source": "https://github.com/thephpleague/flysystem/tree/3.0.15"
+            },
+            "funding": [
+                {
+                    "url": "https://offset.earth/frankdejonge",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/frankdejonge",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/league/flysystem",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-04-08T18:36:06+00:00"
+        },
+        {
+            "name": "league/mime-type-detection",
+            "version": "1.9.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/thephpleague/mime-type-detection.git",
+                "reference": "aa70e813a6ad3d1558fc927863d47309b4c23e69"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/thephpleague/mime-type-detection/zipball/aa70e813a6ad3d1558fc927863d47309b4c23e69",
+                "reference": "aa70e813a6ad3d1558fc927863d47309b4c23e69",
+                "shasum": ""
+            },
+            "require": {
+                "ext-fileinfo": "*",
+                "php": "^7.2 || ^8.0"
+            },
+            "require-dev": {
+                "friendsofphp/php-cs-fixer": "^3.2",
+                "phpstan/phpstan": "^0.12.68",
+                "phpunit/phpunit": "^8.5.8 || ^9.3"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "League\\MimeTypeDetection\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Frank de Jonge",
+                    "email": "info@frankdejonge.nl"
+                }
+            ],
+            "description": "Mime-type detection for Flysystem",
+            "support": {
+                "issues": "https://github.com/thephpleague/mime-type-detection/issues",
+                "source": "https://github.com/thephpleague/mime-type-detection/tree/1.9.0"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/frankdejonge",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/league/flysystem",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-11-21T11:48:40+00:00"
+        },
+        {
+            "name": "monolog/monolog",
+            "version": "2.5.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/Seldaek/monolog.git",
+                "reference": "4192345e260f1d51b365536199744b987e160edc"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/Seldaek/monolog/zipball/4192345e260f1d51b365536199744b987e160edc",
+                "reference": "4192345e260f1d51b365536199744b987e160edc",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.2",
+                "psr/log": "^1.0.1 || ^2.0 || ^3.0"
+            },
+            "provide": {
+                "psr/log-implementation": "1.0.0 || 2.0.0 || 3.0.0"
+            },
+            "require-dev": {
+                "aws/aws-sdk-php": "^2.4.9 || ^3.0",
+                "doctrine/couchdb": "~1.0@dev",
+                "elasticsearch/elasticsearch": "^7",
+                "graylog2/gelf-php": "^1.4.2",
+                "mongodb/mongodb": "^1.8",
+                "php-amqplib/php-amqplib": "~2.4 || ^3",
+                "php-console/php-console": "^3.1.3",
+                "phpspec/prophecy": "^1.6.1",
+                "phpstan/phpstan": "^0.12.91",
+                "phpunit/phpunit": "^8.5",
+                "predis/predis": "^1.1",
+                "rollbar/rollbar": "^1.3 || ^2 || ^3",
+                "ruflin/elastica": ">=0.90@dev",
+                "swiftmailer/swiftmailer": "^5.3|^6.0"
+            },
+            "suggest": {
+                "aws/aws-sdk-php": "Allow sending log messages to AWS services like DynamoDB",
+                "doctrine/couchdb": "Allow sending log messages to a CouchDB server",
+                "elasticsearch/elasticsearch": "Allow sending log messages to an Elasticsearch server via official client",
+                "ext-amqp": "Allow sending log messages to an AMQP server (1.0+ required)",
+                "ext-curl": "Required to send log messages using the IFTTTHandler, the LogglyHandler, the SendGridHandler, the SlackWebhookHandler or the TelegramBotHandler",
+                "ext-mbstring": "Allow to work properly with unicode symbols",
+                "ext-mongodb": "Allow sending log messages to a MongoDB server (via driver)",
+                "ext-openssl": "Required to send log messages using SSL",
+                "ext-sockets": "Allow sending log messages to a Syslog server (via UDP driver)",
+                "graylog2/gelf-php": "Allow sending log messages to a GrayLog2 server",
+                "mongodb/mongodb": "Allow sending log messages to a MongoDB server (via library)",
+                "php-amqplib/php-amqplib": "Allow sending log messages to an AMQP server using php-amqplib",
+                "php-console/php-console": "Allow sending log messages to Google Chrome",
+                "rollbar/rollbar": "Allow sending log messages to Rollbar",
+                "ruflin/elastica": "Allow sending log messages to an Elastic Search server"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "2.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Monolog\\": "src/Monolog"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Jordi Boggiano",
+                    "email": "j.boggiano@seld.be",
+                    "homepage": "https://seld.be"
+                }
+            ],
+            "description": "Sends your logs to files, sockets, inboxes, databases and various web services",
+            "homepage": "https://github.com/Seldaek/monolog",
+            "keywords": [
+                "log",
+                "logging",
+                "psr-3"
+            ],
+            "support": {
+                "issues": "https://github.com/Seldaek/monolog/issues",
+                "source": "https://github.com/Seldaek/monolog/tree/2.5.0"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/Seldaek",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/monolog/monolog",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-04-08T15:43:54+00:00"
+        },
+        {
+            "name": "nesbot/carbon",
+            "version": "2.57.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/briannesbitt/Carbon.git",
+                "reference": "4a54375c21eea4811dbd1149fe6b246517554e78"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/briannesbitt/Carbon/zipball/4a54375c21eea4811dbd1149fe6b246517554e78",
+                "reference": "4a54375c21eea4811dbd1149fe6b246517554e78",
+                "shasum": ""
+            },
+            "require": {
+                "ext-json": "*",
+                "php": "^7.1.8 || ^8.0",
+                "symfony/polyfill-mbstring": "^1.0",
+                "symfony/polyfill-php80": "^1.16",
+                "symfony/translation": "^3.4 || ^4.0 || ^5.0 || ^6.0"
+            },
+            "require-dev": {
+                "doctrine/dbal": "^2.0 || ^3.0",
+                "doctrine/orm": "^2.7",
+                "friendsofphp/php-cs-fixer": "^3.0",
+                "kylekatarnls/multi-tester": "^2.0",
+                "phpmd/phpmd": "^2.9",
+                "phpstan/extension-installer": "^1.0",
+                "phpstan/phpstan": "^0.12.54 || ^1.0",
+                "phpunit/phpunit": "^7.5.20 || ^8.5.14",
+                "squizlabs/php_codesniffer": "^3.4"
+            },
+            "bin": [
+                "bin/carbon"
+            ],
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-3.x": "3.x-dev",
+                    "dev-master": "2.x-dev"
+                },
+                "laravel": {
+                    "providers": [
+                        "Carbon\\Laravel\\ServiceProvider"
+                    ]
+                },
+                "phpstan": {
+                    "includes": [
+                        "extension.neon"
+                    ]
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Carbon\\": "src/Carbon/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Brian Nesbitt",
+                    "email": "brian@nesbot.com",
+                    "homepage": "https://markido.com"
+                },
+                {
+                    "name": "kylekatarnls",
+                    "homepage": "https://github.com/kylekatarnls"
+                }
+            ],
+            "description": "An API extension for DateTime that supports 281 different languages.",
+            "homepage": "https://carbon.nesbot.com",
+            "keywords": [
+                "date",
+                "datetime",
+                "time"
+            ],
+            "support": {
+                "docs": "https://carbon.nesbot.com/docs",
+                "issues": "https://github.com/briannesbitt/Carbon/issues",
+                "source": "https://github.com/briannesbitt/Carbon"
+            },
+            "funding": [
+                {
+                    "url": "https://opencollective.com/Carbon",
+                    "type": "open_collective"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/nesbot/carbon",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-02-13T18:13:33+00:00"
+        },
+        {
+            "name": "nette/schema",
+            "version": "v1.2.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/nette/schema.git",
+                "reference": "9a39cef03a5b34c7de64f551538cbba05c2be5df"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/nette/schema/zipball/9a39cef03a5b34c7de64f551538cbba05c2be5df",
+                "reference": "9a39cef03a5b34c7de64f551538cbba05c2be5df",
+                "shasum": ""
+            },
+            "require": {
+                "nette/utils": "^2.5.7 || ^3.1.5 ||  ^4.0",
+                "php": ">=7.1 <8.2"
+            },
+            "require-dev": {
+                "nette/tester": "^2.3 || ^2.4",
+                "phpstan/phpstan-nette": "^0.12",
+                "tracy/tracy": "^2.7"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.2-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause",
+                "GPL-2.0-only",
+                "GPL-3.0-only"
+            ],
+            "authors": [
+                {
+                    "name": "David Grudl",
+                    "homepage": "https://davidgrudl.com"
+                },
+                {
+                    "name": "Nette Community",
+                    "homepage": "https://nette.org/contributors"
+                }
+            ],
+            "description": "📐 Nette Schema: validating data structures against a given Schema.",
+            "homepage": "https://nette.org",
+            "keywords": [
+                "config",
+                "nette"
+            ],
+            "support": {
+                "issues": "https://github.com/nette/schema/issues",
+                "source": "https://github.com/nette/schema/tree/v1.2.2"
+            },
+            "time": "2021-10-15T11:40:02+00:00"
+        },
+        {
+            "name": "nette/utils",
+            "version": "v3.2.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/nette/utils.git",
+                "reference": "0af4e3de4df9f1543534beab255ccf459e7a2c99"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/nette/utils/zipball/0af4e3de4df9f1543534beab255ccf459e7a2c99",
+                "reference": "0af4e3de4df9f1543534beab255ccf459e7a2c99",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.2 <8.2"
+            },
+            "conflict": {
+                "nette/di": "<3.0.6"
+            },
+            "require-dev": {
+                "nette/tester": "~2.0",
+                "phpstan/phpstan": "^1.0",
+                "tracy/tracy": "^2.3"
+            },
+            "suggest": {
+                "ext-gd": "to use Image",
+                "ext-iconv": "to use Strings::webalize(), toAscii(), chr() and reverse()",
+                "ext-intl": "to use Strings::webalize(), toAscii(), normalize() and compare()",
+                "ext-json": "to use Nette\\Utils\\Json",
+                "ext-mbstring": "to use Strings::lower() etc...",
+                "ext-tokenizer": "to use Nette\\Utils\\Reflection::getUseStatements()",
+                "ext-xml": "to use Strings::length() etc. when mbstring is not available"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.2-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause",
+                "GPL-2.0-only",
+                "GPL-3.0-only"
+            ],
+            "authors": [
+                {
+                    "name": "David Grudl",
+                    "homepage": "https://davidgrudl.com"
+                },
+                {
+                    "name": "Nette Community",
+                    "homepage": "https://nette.org/contributors"
+                }
+            ],
+            "description": "🛠  Nette Utils: lightweight utilities for string & array manipulation, image handling, safe JSON encoding/decoding, validation, slug or strong password generating etc.",
+            "homepage": "https://nette.org",
+            "keywords": [
+                "array",
+                "core",
+                "datetime",
+                "images",
+                "json",
+                "nette",
+                "paginator",
+                "password",
+                "slugify",
+                "string",
+                "unicode",
+                "utf-8",
+                "utility",
+                "validation"
+            ],
+            "support": {
+                "issues": "https://github.com/nette/utils/issues",
+                "source": "https://github.com/nette/utils/tree/v3.2.7"
+            },
+            "time": "2022-01-24T11:29:14+00:00"
+        },
+        {
+            "name": "nikic/php-parser",
+            "version": "v4.13.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/nikic/PHP-Parser.git",
+                "reference": "210577fe3cf7badcc5814d99455df46564f3c077"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/nikic/PHP-Parser/zipball/210577fe3cf7badcc5814d99455df46564f3c077",
+                "reference": "210577fe3cf7badcc5814d99455df46564f3c077",
+                "shasum": ""
+            },
+            "require": {
+                "ext-tokenizer": "*",
+                "php": ">=7.0"
+            },
+            "require-dev": {
+                "ircmaxell/php-yacc": "^0.0.7",
+                "phpunit/phpunit": "^6.5 || ^7.0 || ^8.0 || ^9.0"
+            },
+            "bin": [
+                "bin/php-parse"
+            ],
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.9-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "PhpParser\\": "lib/PhpParser"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Nikita Popov"
+                }
+            ],
+            "description": "A PHP parser written in PHP",
+            "keywords": [
+                "parser",
+                "php"
+            ],
+            "support": {
+                "issues": "https://github.com/nikic/PHP-Parser/issues",
+                "source": "https://github.com/nikic/PHP-Parser/tree/v4.13.2"
+            },
+            "time": "2021-11-30T19:35:32+00:00"
+        },
+        {
+            "name": "phpoption/phpoption",
+            "version": "1.8.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/schmittjoh/php-option.git",
+                "reference": "eab7a0df01fe2344d172bff4cd6dbd3f8b84ad15"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/schmittjoh/php-option/zipball/eab7a0df01fe2344d172bff4cd6dbd3f8b84ad15",
+                "reference": "eab7a0df01fe2344d172bff4cd6dbd3f8b84ad15",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.0 || ^8.0"
+            },
+            "require-dev": {
+                "bamarni/composer-bin-plugin": "^1.4.1",
+                "phpunit/phpunit": "^6.5.14 || ^7.5.20 || ^8.5.19 || ^9.5.8"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.8-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "PhpOption\\": "src/PhpOption/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "Apache-2.0"
+            ],
+            "authors": [
+                {
+                    "name": "Johannes M. Schmitt",
+                    "email": "schmittjoh@gmail.com",
+                    "homepage": "https://github.com/schmittjoh"
+                },
+                {
+                    "name": "Graham Campbell",
+                    "email": "hello@gjcampbell.co.uk",
+                    "homepage": "https://github.com/GrahamCampbell"
+                }
+            ],
+            "description": "Option Type for PHP",
+            "keywords": [
+                "language",
+                "option",
+                "php",
+                "type"
+            ],
+            "support": {
+                "issues": "https://github.com/schmittjoh/php-option/issues",
+                "source": "https://github.com/schmittjoh/php-option/tree/1.8.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/GrahamCampbell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/phpoption/phpoption",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-12-04T23:24:31+00:00"
+        },
+        {
+            "name": "psr/container",
+            "version": "2.0.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/container.git",
+                "reference": "c71ecc56dfe541dbd90c5360474fbc405f8d5963"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/container/zipball/c71ecc56dfe541dbd90c5360474fbc405f8d5963",
+                "reference": "c71ecc56dfe541dbd90c5360474fbc405f8d5963",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.4.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Psr\\Container\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "https://www.php-fig.org/"
+                }
+            ],
+            "description": "Common Container Interface (PHP FIG PSR-11)",
+            "homepage": "https://github.com/php-fig/container",
+            "keywords": [
+                "PSR-11",
+                "container",
+                "container-interface",
+                "container-interop",
+                "psr"
+            ],
+            "support": {
+                "issues": "https://github.com/php-fig/container/issues",
+                "source": "https://github.com/php-fig/container/tree/2.0.2"
+            },
+            "time": "2021-11-05T16:47:00+00:00"
+        },
+        {
+            "name": "psr/event-dispatcher",
+            "version": "1.0.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/event-dispatcher.git",
+                "reference": "dbefd12671e8a14ec7f180cab83036ed26714bb0"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/event-dispatcher/zipball/dbefd12671e8a14ec7f180cab83036ed26714bb0",
+                "reference": "dbefd12671e8a14ec7f180cab83036ed26714bb0",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.2.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Psr\\EventDispatcher\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "http://www.php-fig.org/"
+                }
+            ],
+            "description": "Standard interfaces for event handling.",
+            "keywords": [
+                "events",
+                "psr",
+                "psr-14"
+            ],
+            "support": {
+                "issues": "https://github.com/php-fig/event-dispatcher/issues",
+                "source": "https://github.com/php-fig/event-dispatcher/tree/1.0.0"
+            },
+            "time": "2019-01-08T18:20:26+00:00"
+        },
+        {
+            "name": "psr/http-client",
+            "version": "1.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/http-client.git",
+                "reference": "2dfb5f6c5eff0e91e20e913f8c5452ed95b86621"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/http-client/zipball/2dfb5f6c5eff0e91e20e913f8c5452ed95b86621",
+                "reference": "2dfb5f6c5eff0e91e20e913f8c5452ed95b86621",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.0 || ^8.0",
+                "psr/http-message": "^1.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Psr\\Http\\Client\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "http://www.php-fig.org/"
+                }
+            ],
+            "description": "Common interface for HTTP clients",
+            "homepage": "https://github.com/php-fig/http-client",
+            "keywords": [
+                "http",
+                "http-client",
+                "psr",
+                "psr-18"
+            ],
+            "support": {
+                "source": "https://github.com/php-fig/http-client/tree/master"
+            },
+            "time": "2020-06-29T06:28:15+00:00"
+        },
+        {
+            "name": "psr/http-factory",
+            "version": "1.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/http-factory.git",
+                "reference": "12ac7fcd07e5b077433f5f2bee95b3a771bf61be"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/http-factory/zipball/12ac7fcd07e5b077433f5f2bee95b3a771bf61be",
+                "reference": "12ac7fcd07e5b077433f5f2bee95b3a771bf61be",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.0.0",
+                "psr/http-message": "^1.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Psr\\Http\\Message\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "http://www.php-fig.org/"
+                }
+            ],
+            "description": "Common interfaces for PSR-7 HTTP message factories",
+            "keywords": [
+                "factory",
+                "http",
+                "message",
+                "psr",
+                "psr-17",
+                "psr-7",
+                "request",
+                "response"
+            ],
+            "support": {
+                "source": "https://github.com/php-fig/http-factory/tree/master"
+            },
+            "time": "2019-04-30T12:38:16+00:00"
+        },
+        {
+            "name": "psr/http-message",
+            "version": "1.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/http-message.git",
+                "reference": "f6561bf28d520154e4b0ec72be95418abe6d9363"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/http-message/zipball/f6561bf28d520154e4b0ec72be95418abe6d9363",
+                "reference": "f6561bf28d520154e4b0ec72be95418abe6d9363",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.3.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Psr\\Http\\Message\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "http://www.php-fig.org/"
+                }
+            ],
+            "description": "Common interface for HTTP messages",
+            "homepage": "https://github.com/php-fig/http-message",
+            "keywords": [
+                "http",
+                "http-message",
+                "psr",
+                "psr-7",
+                "request",
+                "response"
+            ],
+            "support": {
+                "source": "https://github.com/php-fig/http-message/tree/master"
+            },
+            "time": "2016-08-06T14:39:51+00:00"
+        },
+        {
+            "name": "psr/log",
+            "version": "3.0.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/log.git",
+                "reference": "fe5ea303b0887d5caefd3d431c3e61ad47037001"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/log/zipball/fe5ea303b0887d5caefd3d431c3e61ad47037001",
+                "reference": "fe5ea303b0887d5caefd3d431c3e61ad47037001",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Psr\\Log\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "https://www.php-fig.org/"
+                }
+            ],
+            "description": "Common interface for logging libraries",
+            "homepage": "https://github.com/php-fig/log",
+            "keywords": [
+                "log",
+                "psr",
+                "psr-3"
+            ],
+            "support": {
+                "source": "https://github.com/php-fig/log/tree/3.0.0"
+            },
+            "time": "2021-07-14T16:46:02+00:00"
+        },
+        {
+            "name": "psr/simple-cache",
+            "version": "3.0.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/php-fig/simple-cache.git",
+                "reference": "764e0b3939f5ca87cb904f570ef9be2d78a07865"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/php-fig/simple-cache/zipball/764e0b3939f5ca87cb904f570ef9be2d78a07865",
+                "reference": "764e0b3939f5ca87cb904f570ef9be2d78a07865",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.0.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Psr\\SimpleCache\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "PHP-FIG",
+                    "homepage": "https://www.php-fig.org/"
+                }
+            ],
+            "description": "Common interfaces for simple caching",
+            "keywords": [
+                "cache",
+                "caching",
+                "psr",
+                "psr-16",
+                "simple-cache"
+            ],
+            "support": {
+                "source": "https://github.com/php-fig/simple-cache/tree/3.0.0"
+            },
+            "time": "2021-10-29T13:26:27+00:00"
+        },
+        {
+            "name": "psy/psysh",
+            "version": "v0.11.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/bobthecow/psysh.git",
+                "reference": "7f7da640d68b9c9fec819caae7c744a213df6514"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/bobthecow/psysh/zipball/7f7da640d68b9c9fec819caae7c744a213df6514",
+                "reference": "7f7da640d68b9c9fec819caae7c744a213df6514",
+                "shasum": ""
+            },
+            "require": {
+                "ext-json": "*",
+                "ext-tokenizer": "*",
+                "nikic/php-parser": "^4.0 || ^3.1",
+                "php": "^8.0 || ^7.0.8",
+                "symfony/console": "^6.0 || ^5.0 || ^4.0 || ^3.4",
+                "symfony/var-dumper": "^6.0 || ^5.0 || ^4.0 || ^3.4"
+            },
+            "conflict": {
+                "symfony/console": "4.4.37 || 5.3.14 || 5.3.15 || 5.4.3 || 5.4.4 || 6.0.3 || 6.0.4"
+            },
+            "require-dev": {
+                "bamarni/composer-bin-plugin": "^1.2",
+                "hoa/console": "3.17.05.02"
+            },
+            "suggest": {
+                "ext-pcntl": "Enabling the PCNTL extension makes PsySH a lot happier :)",
+                "ext-pdo-sqlite": "The doc command requires SQLite to work.",
+                "ext-posix": "If you have PCNTL, you'll want the POSIX extension as well.",
+                "ext-readline": "Enables support for arrow-key history navigation, and showing and manipulating command history.",
+                "hoa/console": "A pure PHP readline implementation. You'll want this if your PHP install doesn't already support readline or libedit."
+            },
+            "bin": [
+                "bin/psysh"
+            ],
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "0.11.x-dev"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "src/functions.php"
+                ],
+                "psr-4": {
+                    "Psy\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Justin Hileman",
+                    "email": "justin@justinhileman.info",
+                    "homepage": "http://justinhileman.com"
+                }
+            ],
+            "description": "An interactive shell for modern PHP.",
+            "homepage": "http://psysh.org",
+            "keywords": [
+                "REPL",
+                "console",
+                "interactive",
+                "shell"
+            ],
+            "support": {
+                "issues": "https://github.com/bobthecow/psysh/issues",
+                "source": "https://github.com/bobthecow/psysh/tree/v0.11.2"
+            },
+            "time": "2022-02-28T15:28:54+00:00"
+        },
+        {
+            "name": "ralouphie/getallheaders",
+            "version": "3.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/ralouphie/getallheaders.git",
+                "reference": "120b605dfeb996808c31b6477290a714d356e822"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/ralouphie/getallheaders/zipball/120b605dfeb996808c31b6477290a714d356e822",
+                "reference": "120b605dfeb996808c31b6477290a714d356e822",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=5.6"
+            },
+            "require-dev": {
+                "php-coveralls/php-coveralls": "^2.1",
+                "phpunit/phpunit": "^5 || ^6.5"
+            },
+            "type": "library",
+            "autoload": {
+                "files": [
+                    "src/getallheaders.php"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Ralph Khattar",
+                    "email": "ralph.khattar@gmail.com"
+                }
+            ],
+            "description": "A polyfill for getallheaders.",
+            "support": {
+                "issues": "https://github.com/ralouphie/getallheaders/issues",
+                "source": "https://github.com/ralouphie/getallheaders/tree/develop"
+            },
+            "time": "2019-03-08T08:55:37+00:00"
+        },
+        {
+            "name": "ramsey/collection",
+            "version": "1.2.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/ramsey/collection.git",
+                "reference": "cccc74ee5e328031b15640b51056ee8d3bb66c0a"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/ramsey/collection/zipball/cccc74ee5e328031b15640b51056ee8d3bb66c0a",
+                "reference": "cccc74ee5e328031b15640b51056ee8d3bb66c0a",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.3 || ^8",
+                "symfony/polyfill-php81": "^1.23"
+            },
+            "require-dev": {
+                "captainhook/captainhook": "^5.3",
+                "dealerdirect/phpcodesniffer-composer-installer": "^0.7.0",
+                "ergebnis/composer-normalize": "^2.6",
+                "fakerphp/faker": "^1.5",
+                "hamcrest/hamcrest-php": "^2",
+                "jangregor/phpstan-prophecy": "^0.8",
+                "mockery/mockery": "^1.3",
+                "phpspec/prophecy-phpunit": "^2.0",
+                "phpstan/extension-installer": "^1",
+                "phpstan/phpstan": "^0.12.32",
+                "phpstan/phpstan-mockery": "^0.12.5",
+                "phpstan/phpstan-phpunit": "^0.12.11",
+                "phpunit/phpunit": "^8.5 || ^9",
+                "psy/psysh": "^0.10.4",
+                "slevomat/coding-standard": "^6.3",
+                "squizlabs/php_codesniffer": "^3.5",
+                "vimeo/psalm": "^4.4"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Ramsey\\Collection\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Ben Ramsey",
+                    "email": "ben@benramsey.com",
+                    "homepage": "https://benramsey.com"
+                }
+            ],
+            "description": "A PHP library for representing and manipulating collections.",
+            "keywords": [
+                "array",
+                "collection",
+                "hash",
+                "map",
+                "queue",
+                "set"
+            ],
+            "support": {
+                "issues": "https://github.com/ramsey/collection/issues",
+                "source": "https://github.com/ramsey/collection/tree/1.2.2"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/ramsey",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/ramsey/collection",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-10-10T03:01:02+00:00"
+        },
+        {
+            "name": "ramsey/uuid",
+            "version": "4.3.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/ramsey/uuid.git",
+                "reference": "8505afd4fea63b81a85d3b7b53ac3cb8dc347c28"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/ramsey/uuid/zipball/8505afd4fea63b81a85d3b7b53ac3cb8dc347c28",
+                "reference": "8505afd4fea63b81a85d3b7b53ac3cb8dc347c28",
+                "shasum": ""
+            },
+            "require": {
+                "brick/math": "^0.8 || ^0.9",
+                "ext-ctype": "*",
+                "ext-json": "*",
+                "php": "^8.0",
+                "ramsey/collection": "^1.0"
+            },
+            "replace": {
+                "rhumsaa/uuid": "self.version"
+            },
+            "require-dev": {
+                "captainhook/captainhook": "^5.10",
+                "captainhook/plugin-composer": "^5.3",
+                "dealerdirect/phpcodesniffer-composer-installer": "^0.7.0",
+                "doctrine/annotations": "^1.8",
+                "ergebnis/composer-normalize": "^2.15",
+                "mockery/mockery": "^1.3",
+                "moontoast/math": "^1.1",
+                "paragonie/random-lib": "^2",
+                "php-mock/php-mock": "^2.2",
+                "php-mock/php-mock-mockery": "^1.3",
+                "php-parallel-lint/php-parallel-lint": "^1.1",
+                "phpbench/phpbench": "^1.0",
+                "phpstan/extension-installer": "^1.0",
+                "phpstan/phpstan": "^0.12",
+                "phpstan/phpstan-mockery": "^0.12",
+                "phpstan/phpstan-phpunit": "^0.12",
+                "phpunit/phpunit": "^8.5 || ^9",
+                "slevomat/coding-standard": "^7.0",
+                "squizlabs/php_codesniffer": "^3.5",
+                "vimeo/psalm": "^4.9"
+            },
+            "suggest": {
+                "ext-bcmath": "Enables faster math with arbitrary-precision integers using BCMath.",
+                "ext-ctype": "Enables faster processing of character classification using ctype functions.",
+                "ext-gmp": "Enables faster math with arbitrary-precision integers using GMP.",
+                "ext-uuid": "Enables the use of PeclUuidTimeGenerator and PeclUuidRandomGenerator.",
+                "paragonie/random-lib": "Provides RandomLib for use with the RandomLibAdapter",
+                "ramsey/uuid-doctrine": "Allows the use of Ramsey\\Uuid\\Uuid as Doctrine field type."
+            },
+            "type": "library",
+            "extra": {
+                "captainhook": {
+                    "force-install": true
+                }
+            },
+            "autoload": {
+                "files": [
+                    "src/functions.php"
+                ],
+                "psr-4": {
+                    "Ramsey\\Uuid\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "description": "A PHP library for generating and working with universally unique identifiers (UUIDs).",
+            "keywords": [
+                "guid",
+                "identifier",
+                "uuid"
+            ],
+            "support": {
+                "issues": "https://github.com/ramsey/uuid/issues",
+                "source": "https://github.com/ramsey/uuid/tree/4.3.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/ramsey",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/ramsey/uuid",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-27T21:42:02+00:00"
+        },
+        {
+            "name": "symfony/console",
+            "version": "v6.0.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/console.git",
+                "reference": "70dcf7b2ca2ea08ad6ebcc475f104a024fb5632e"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/console/zipball/70dcf7b2ca2ea08ad6ebcc475f104a024fb5632e",
+                "reference": "70dcf7b2ca2ea08ad6ebcc475f104a024fb5632e",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "symfony/polyfill-mbstring": "~1.0",
+                "symfony/service-contracts": "^1.1|^2|^3",
+                "symfony/string": "^5.4|^6.0"
+            },
+            "conflict": {
+                "symfony/dependency-injection": "<5.4",
+                "symfony/dotenv": "<5.4",
+                "symfony/event-dispatcher": "<5.4",
+                "symfony/lock": "<5.4",
+                "symfony/process": "<5.4"
+            },
+            "provide": {
+                "psr/log-implementation": "1.0|2.0|3.0"
+            },
+            "require-dev": {
+                "psr/log": "^1|^2|^3",
+                "symfony/config": "^5.4|^6.0",
+                "symfony/dependency-injection": "^5.4|^6.0",
+                "symfony/event-dispatcher": "^5.4|^6.0",
+                "symfony/lock": "^5.4|^6.0",
+                "symfony/process": "^5.4|^6.0",
+                "symfony/var-dumper": "^5.4|^6.0"
+            },
+            "suggest": {
+                "psr/log": "For using the console logger",
+                "symfony/event-dispatcher": "",
+                "symfony/lock": "",
+                "symfony/process": ""
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\Console\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Eases the creation of beautiful and testable command line interfaces",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "cli",
+                "command line",
+                "console",
+                "terminal"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/console/tree/v6.0.7"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-31T17:18:25+00:00"
+        },
+        {
+            "name": "symfony/css-selector",
+            "version": "v6.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/css-selector.git",
+                "reference": "1955d595c12c111629cc814d3f2a2ff13580508a"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/css-selector/zipball/1955d595c12c111629cc814d3f2a2ff13580508a",
+                "reference": "1955d595c12c111629cc814d3f2a2ff13580508a",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\CssSelector\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Jean-François Simon",
+                    "email": "jeanfrancois.simon@sensiolabs.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Converts CSS selectors to XPath expressions",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/css-selector/tree/v6.0.3"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-01-02T09:55:41+00:00"
+        },
+        {
+            "name": "symfony/deprecation-contracts",
+            "version": "v3.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/deprecation-contracts.git",
+                "reference": "26954b3d62a6c5fd0ea8a2a00c0353a14978d05c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/deprecation-contracts/zipball/26954b3d62a6c5fd0ea8a2a00c0353a14978d05c",
+                "reference": "26954b3d62a6c5fd0ea8a2a00c0353a14978d05c",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "3.0-dev"
+                },
+                "thanks": {
+                    "name": "symfony/contracts",
+                    "url": "https://github.com/symfony/contracts"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "function.php"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "A generic function and convention to trigger deprecation notices",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/deprecation-contracts/tree/v3.0.1"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-01-02T09:55:41+00:00"
+        },
+        {
+            "name": "symfony/error-handler",
+            "version": "v6.0.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/error-handler.git",
+                "reference": "e600c54e5b30555eecea3ffe4314e58f832e78ee"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/error-handler/zipball/e600c54e5b30555eecea3ffe4314e58f832e78ee",
+                "reference": "e600c54e5b30555eecea3ffe4314e58f832e78ee",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "psr/log": "^1|^2|^3",
+                "symfony/var-dumper": "^5.4|^6.0"
+            },
+            "require-dev": {
+                "symfony/deprecation-contracts": "^2.1|^3",
+                "symfony/http-kernel": "^5.4|^6.0",
+                "symfony/serializer": "^5.4|^6.0"
+            },
+            "bin": [
+                "Resources/bin/patch-type-declarations"
+            ],
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\ErrorHandler\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Provides tools to manage errors and ease debugging PHP code",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/error-handler/tree/v6.0.7"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-18T16:21:55+00:00"
+        },
+        {
+            "name": "symfony/event-dispatcher",
+            "version": "v6.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/event-dispatcher.git",
+                "reference": "6472ea2dd415e925b90ca82be64b8bc6157f3934"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/event-dispatcher/zipball/6472ea2dd415e925b90ca82be64b8bc6157f3934",
+                "reference": "6472ea2dd415e925b90ca82be64b8bc6157f3934",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "symfony/event-dispatcher-contracts": "^2|^3"
+            },
+            "conflict": {
+                "symfony/dependency-injection": "<5.4"
+            },
+            "provide": {
+                "psr/event-dispatcher-implementation": "1.0",
+                "symfony/event-dispatcher-implementation": "2.0|3.0"
+            },
+            "require-dev": {
+                "psr/log": "^1|^2|^3",
+                "symfony/config": "^5.4|^6.0",
+                "symfony/dependency-injection": "^5.4|^6.0",
+                "symfony/error-handler": "^5.4|^6.0",
+                "symfony/expression-language": "^5.4|^6.0",
+                "symfony/http-foundation": "^5.4|^6.0",
+                "symfony/service-contracts": "^1.1|^2|^3",
+                "symfony/stopwatch": "^5.4|^6.0"
+            },
+            "suggest": {
+                "symfony/dependency-injection": "",
+                "symfony/http-kernel": ""
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\EventDispatcher\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Provides tools that allow your application components to communicate with each other by dispatching events and listening to them",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/event-dispatcher/tree/v6.0.3"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-01-02T09:55:41+00:00"
+        },
+        {
+            "name": "symfony/event-dispatcher-contracts",
+            "version": "v3.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/event-dispatcher-contracts.git",
+                "reference": "7bc61cc2db649b4637d331240c5346dcc7708051"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/event-dispatcher-contracts/zipball/7bc61cc2db649b4637d331240c5346dcc7708051",
+                "reference": "7bc61cc2db649b4637d331240c5346dcc7708051",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "psr/event-dispatcher": "^1"
+            },
+            "suggest": {
+                "symfony/event-dispatcher-implementation": ""
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "3.0-dev"
+                },
+                "thanks": {
+                    "name": "symfony/contracts",
+                    "url": "https://github.com/symfony/contracts"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Contracts\\EventDispatcher\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Generic abstractions related to dispatching event",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "abstractions",
+                "contracts",
+                "decoupling",
+                "interfaces",
+                "interoperability",
+                "standards"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/event-dispatcher-contracts/tree/v3.0.1"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-01-02T09:55:41+00:00"
+        },
+        {
+            "name": "symfony/finder",
+            "version": "v6.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/finder.git",
+                "reference": "8661b74dbabc23223f38c9b99d3f8ade71170430"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/finder/zipball/8661b74dbabc23223f38c9b99d3f8ade71170430",
+                "reference": "8661b74dbabc23223f38c9b99d3f8ade71170430",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\Finder\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Finds files and directories via an intuitive fluent interface",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/finder/tree/v6.0.3"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-01-26T17:23:29+00:00"
+        },
+        {
+            "name": "symfony/http-foundation",
+            "version": "v6.0.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/http-foundation.git",
+                "reference": "c816b26f03b6902dba79b352c84a17f53d815f0d"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/http-foundation/zipball/c816b26f03b6902dba79b352c84a17f53d815f0d",
+                "reference": "c816b26f03b6902dba79b352c84a17f53d815f0d",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "symfony/deprecation-contracts": "^2.1|^3",
+                "symfony/polyfill-mbstring": "~1.1"
+            },
+            "require-dev": {
+                "predis/predis": "~1.0",
+                "symfony/cache": "^5.4|^6.0",
+                "symfony/expression-language": "^5.4|^6.0",
+                "symfony/mime": "^5.4|^6.0"
+            },
+            "suggest": {
+                "symfony/mime": "To use the file extension guesser"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\HttpFoundation\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Defines an object-oriented layer for the HTTP specification",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/http-foundation/tree/v6.0.7"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-24T14:13:59+00:00"
+        },
+        {
+            "name": "symfony/http-kernel",
+            "version": "v6.0.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/http-kernel.git",
+                "reference": "9c03dab07a6aa336ffaadc15352b1d14f4ce01f5"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/http-kernel/zipball/9c03dab07a6aa336ffaadc15352b1d14f4ce01f5",
+                "reference": "9c03dab07a6aa336ffaadc15352b1d14f4ce01f5",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "psr/log": "^1|^2|^3",
+                "symfony/error-handler": "^5.4|^6.0",
+                "symfony/event-dispatcher": "^5.4|^6.0",
+                "symfony/http-foundation": "^5.4|^6.0",
+                "symfony/polyfill-ctype": "^1.8"
+            },
+            "conflict": {
+                "symfony/browser-kit": "<5.4",
+                "symfony/cache": "<5.4",
+                "symfony/config": "<5.4",
+                "symfony/console": "<5.4",
+                "symfony/dependency-injection": "<5.4",
+                "symfony/doctrine-bridge": "<5.4",
+                "symfony/form": "<5.4",
+                "symfony/http-client": "<5.4",
+                "symfony/mailer": "<5.4",
+                "symfony/messenger": "<5.4",
+                "symfony/translation": "<5.4",
+                "symfony/twig-bridge": "<5.4",
+                "symfony/validator": "<5.4",
+                "twig/twig": "<2.13"
+            },
+            "provide": {
+                "psr/log-implementation": "1.0|2.0|3.0"
+            },
+            "require-dev": {
+                "psr/cache": "^1.0|^2.0|^3.0",
+                "symfony/browser-kit": "^5.4|^6.0",
+                "symfony/config": "^5.4|^6.0",
+                "symfony/console": "^5.4|^6.0",
+                "symfony/css-selector": "^5.4|^6.0",
+                "symfony/dependency-injection": "^5.4|^6.0",
+                "symfony/dom-crawler": "^5.4|^6.0",
+                "symfony/expression-language": "^5.4|^6.0",
+                "symfony/finder": "^5.4|^6.0",
+                "symfony/http-client-contracts": "^1.1|^2|^3",
+                "symfony/process": "^5.4|^6.0",
+                "symfony/routing": "^5.4|^6.0",
+                "symfony/stopwatch": "^5.4|^6.0",
+                "symfony/translation": "^5.4|^6.0",
+                "symfony/translation-contracts": "^1.1|^2|^3",
+                "twig/twig": "^2.13|^3.0.4"
+            },
+            "suggest": {
+                "symfony/browser-kit": "",
+                "symfony/config": "",
+                "symfony/console": "",
+                "symfony/dependency-injection": ""
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\HttpKernel\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Provides a structured process for converting a Request into a Response",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/http-kernel/tree/v6.0.7"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-04-02T06:35:11+00:00"
+        },
+        {
+            "name": "symfony/mailer",
+            "version": "v6.0.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/mailer.git",
+                "reference": "f7343f94e7afecca2ad840b078f9d80200e1bd27"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/mailer/zipball/f7343f94e7afecca2ad840b078f9d80200e1bd27",
+                "reference": "f7343f94e7afecca2ad840b078f9d80200e1bd27",
+                "shasum": ""
+            },
+            "require": {
+                "egulias/email-validator": "^2.1.10|^3",
+                "php": ">=8.0.2",
+                "psr/event-dispatcher": "^1",
+                "psr/log": "^1|^2|^3",
+                "symfony/event-dispatcher": "^5.4|^6.0",
+                "symfony/mime": "^5.4|^6.0",
+                "symfony/service-contracts": "^1.1|^2|^3"
+            },
+            "conflict": {
+                "symfony/http-kernel": "<5.4"
+            },
+            "require-dev": {
+                "symfony/http-client-contracts": "^1.1|^2|^3",
+                "symfony/messenger": "^5.4|^6.0"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\Mailer\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Helps sending emails",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/mailer/tree/v6.0.7"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-18T16:06:28+00:00"
+        },
+        {
+            "name": "symfony/mime",
+            "version": "v6.0.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/mime.git",
+                "reference": "74266e396f812a2301536397a6360b6e6913c0d8"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/mime/zipball/74266e396f812a2301536397a6360b6e6913c0d8",
+                "reference": "74266e396f812a2301536397a6360b6e6913c0d8",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "symfony/polyfill-intl-idn": "^1.10",
+                "symfony/polyfill-mbstring": "^1.0"
+            },
+            "conflict": {
+                "egulias/email-validator": "~3.0.0",
+                "phpdocumentor/reflection-docblock": "<3.2.2",
+                "phpdocumentor/type-resolver": "<1.4.0",
+                "symfony/mailer": "<5.4"
+            },
+            "require-dev": {
+                "egulias/email-validator": "^2.1.10|^3.1",
+                "phpdocumentor/reflection-docblock": "^3.0|^4.0|^5.0",
+                "symfony/dependency-injection": "^5.4|^6.0",
+                "symfony/property-access": "^5.4|^6.0",
+                "symfony/property-info": "^5.4|^6.0",
+                "symfony/serializer": "^5.4|^6.0"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\Mime\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Allows manipulating MIME messages",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "mime",
+                "mime-type"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/mime/tree/v6.0.7"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-13T20:10:05+00:00"
+        },
+        {
+            "name": "symfony/polyfill-ctype",
+            "version": "v1.25.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-ctype.git",
+                "reference": "30885182c981ab175d4d034db0f6f469898070ab"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-ctype/zipball/30885182c981ab175d4d034db0f6f469898070ab",
+                "reference": "30885182c981ab175d4d034db0f6f469898070ab",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.1"
+            },
+            "provide": {
+                "ext-ctype": "*"
+            },
+            "suggest": {
+                "ext-ctype": "For best performance"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.23-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Ctype\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Gert de Pagter",
+                    "email": "BackEndTea@gmail.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill for ctype functions",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "ctype",
+                "polyfill",
+                "portable"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-ctype/tree/v1.25.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-10-20T20:35:02+00:00"
+        },
+        {
+            "name": "symfony/polyfill-intl-grapheme",
+            "version": "v1.25.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-intl-grapheme.git",
+                "reference": "81b86b50cf841a64252b439e738e97f4a34e2783"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-intl-grapheme/zipball/81b86b50cf841a64252b439e738e97f4a34e2783",
+                "reference": "81b86b50cf841a64252b439e738e97f4a34e2783",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.1"
+            },
+            "suggest": {
+                "ext-intl": "For best performance"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.23-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Intl\\Grapheme\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill for intl's grapheme_* functions",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "grapheme",
+                "intl",
+                "polyfill",
+                "portable",
+                "shim"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-intl-grapheme/tree/v1.25.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-11-23T21:10:46+00:00"
+        },
+        {
+            "name": "symfony/polyfill-intl-idn",
+            "version": "v1.25.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-intl-idn.git",
+                "reference": "749045c69efb97c70d25d7463abba812e91f3a44"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-intl-idn/zipball/749045c69efb97c70d25d7463abba812e91f3a44",
+                "reference": "749045c69efb97c70d25d7463abba812e91f3a44",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.1",
+                "symfony/polyfill-intl-normalizer": "^1.10",
+                "symfony/polyfill-php72": "^1.10"
+            },
+            "suggest": {
+                "ext-intl": "For best performance"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.23-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Intl\\Idn\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Laurent Bassin",
+                    "email": "laurent@bassin.info"
+                },
+                {
+                    "name": "Trevor Rowbotham",
+                    "email": "trevor.rowbotham@pm.me"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill for intl's idn_to_ascii and idn_to_utf8 functions",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "idn",
+                "intl",
+                "polyfill",
+                "portable",
+                "shim"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-intl-idn/tree/v1.25.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-09-14T14:02:44+00:00"
+        },
+        {
+            "name": "symfony/polyfill-intl-normalizer",
+            "version": "v1.25.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-intl-normalizer.git",
+                "reference": "8590a5f561694770bdcd3f9b5c69dde6945028e8"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-intl-normalizer/zipball/8590a5f561694770bdcd3f9b5c69dde6945028e8",
+                "reference": "8590a5f561694770bdcd3f9b5c69dde6945028e8",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.1"
+            },
+            "suggest": {
+                "ext-intl": "For best performance"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.23-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Intl\\Normalizer\\": ""
+                },
+                "classmap": [
+                    "Resources/stubs"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill for intl's Normalizer class and related functions",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "intl",
+                "normalizer",
+                "polyfill",
+                "portable",
+                "shim"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-intl-normalizer/tree/v1.25.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-02-19T12:13:01+00:00"
+        },
+        {
+            "name": "symfony/polyfill-mbstring",
+            "version": "v1.25.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-mbstring.git",
+                "reference": "0abb51d2f102e00a4eefcf46ba7fec406d245825"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-mbstring/zipball/0abb51d2f102e00a4eefcf46ba7fec406d245825",
+                "reference": "0abb51d2f102e00a4eefcf46ba7fec406d245825",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.1"
+            },
+            "provide": {
+                "ext-mbstring": "*"
+            },
+            "suggest": {
+                "ext-mbstring": "For best performance"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.23-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Mbstring\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill for the Mbstring extension",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "mbstring",
+                "polyfill",
+                "portable",
+                "shim"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-mbstring/tree/v1.25.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-11-30T18:21:41+00:00"
+        },
+        {
+            "name": "symfony/polyfill-php72",
+            "version": "v1.25.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-php72.git",
+                "reference": "9a142215a36a3888e30d0a9eeea9766764e96976"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-php72/zipball/9a142215a36a3888e30d0a9eeea9766764e96976",
+                "reference": "9a142215a36a3888e30d0a9eeea9766764e96976",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.1"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.23-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Php72\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill backporting some PHP 7.2+ features to lower PHP versions",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "polyfill",
+                "portable",
+                "shim"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-php72/tree/v1.25.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-05-27T09:17:38+00:00"
+        },
+        {
+            "name": "symfony/polyfill-php80",
+            "version": "v1.25.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-php80.git",
+                "reference": "4407588e0d3f1f52efb65fbe92babe41f37fe50c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-php80/zipball/4407588e0d3f1f52efb65fbe92babe41f37fe50c",
+                "reference": "4407588e0d3f1f52efb65fbe92babe41f37fe50c",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.1"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.23-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Php80\\": ""
+                },
+                "classmap": [
+                    "Resources/stubs"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Ion Bazan",
+                    "email": "ion.bazan@gmail.com"
+                },
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill backporting some PHP 8.0+ features to lower PHP versions",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "polyfill",
+                "portable",
+                "shim"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-php80/tree/v1.25.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-04T08:16:47+00:00"
+        },
+        {
+            "name": "symfony/polyfill-php81",
+            "version": "v1.25.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/polyfill-php81.git",
+                "reference": "5de4ba2d41b15f9bd0e19b2ab9674135813ec98f"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/polyfill-php81/zipball/5de4ba2d41b15f9bd0e19b2ab9674135813ec98f",
+                "reference": "5de4ba2d41b15f9bd0e19b2ab9674135813ec98f",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.1"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "1.23-dev"
+                },
+                "thanks": {
+                    "name": "symfony/polyfill",
+                    "url": "https://github.com/symfony/polyfill"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "bootstrap.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Polyfill\\Php81\\": ""
+                },
+                "classmap": [
+                    "Resources/stubs"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Symfony polyfill backporting some PHP 8.1+ features to lower PHP versions",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "compatibility",
+                "polyfill",
+                "portable",
+                "shim"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/polyfill-php81/tree/v1.25.0"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-09-13T13:58:11+00:00"
+        },
+        {
+            "name": "symfony/process",
+            "version": "v6.0.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/process.git",
+                "reference": "e13f6757e267d687e20ec5b26ccfcbbe511cd8f4"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/process/zipball/e13f6757e267d687e20ec5b26ccfcbbe511cd8f4",
+                "reference": "e13f6757e267d687e20ec5b26ccfcbbe511cd8f4",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\Process\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Executes commands in sub-processes",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/process/tree/v6.0.7"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-18T16:21:55+00:00"
+        },
+        {
+            "name": "symfony/routing",
+            "version": "v6.0.5",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/routing.git",
+                "reference": "a738b152426ac7fcb94bdab8188264652238bef1"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/routing/zipball/a738b152426ac7fcb94bdab8188264652238bef1",
+                "reference": "a738b152426ac7fcb94bdab8188264652238bef1",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2"
+            },
+            "conflict": {
+                "doctrine/annotations": "<1.12",
+                "symfony/config": "<5.4",
+                "symfony/dependency-injection": "<5.4",
+                "symfony/yaml": "<5.4"
+            },
+            "require-dev": {
+                "doctrine/annotations": "^1.12",
+                "psr/log": "^1|^2|^3",
+                "symfony/config": "^5.4|^6.0",
+                "symfony/dependency-injection": "^5.4|^6.0",
+                "symfony/expression-language": "^5.4|^6.0",
+                "symfony/http-foundation": "^5.4|^6.0",
+                "symfony/yaml": "^5.4|^6.0"
+            },
+            "suggest": {
+                "symfony/config": "For using the all-in-one router or any loader",
+                "symfony/expression-language": "For using expression matching",
+                "symfony/http-foundation": "For using a Symfony Request object",
+                "symfony/yaml": "For using the YAML loader"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Component\\Routing\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Maps an HTTP request to a set of configuration variables",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "router",
+                "routing",
+                "uri",
+                "url"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/routing/tree/v6.0.5"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-01-31T19:46:53+00:00"
+        },
+        {
+            "name": "symfony/service-contracts",
+            "version": "v3.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/service-contracts.git",
+                "reference": "e517458f278c2131ca9f262f8fbaf01410f2c65c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/service-contracts/zipball/e517458f278c2131ca9f262f8fbaf01410f2c65c",
+                "reference": "e517458f278c2131ca9f262f8fbaf01410f2c65c",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "psr/container": "^2.0"
+            },
+            "conflict": {
+                "ext-psr": "<1.1|>=2"
+            },
+            "suggest": {
+                "symfony/service-implementation": ""
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "3.0-dev"
+                },
+                "thanks": {
+                    "name": "symfony/contracts",
+                    "url": "https://github.com/symfony/contracts"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Contracts\\Service\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Generic abstractions related to writing services",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "abstractions",
+                "contracts",
+                "decoupling",
+                "interfaces",
+                "interoperability",
+                "standards"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/service-contracts/tree/v3.0.1"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-13T20:10:05+00:00"
+        },
+        {
+            "name": "symfony/string",
+            "version": "v6.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/string.git",
+                "reference": "522144f0c4c004c80d56fa47e40e17028e2eefc2"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/string/zipball/522144f0c4c004c80d56fa47e40e17028e2eefc2",
+                "reference": "522144f0c4c004c80d56fa47e40e17028e2eefc2",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "symfony/polyfill-ctype": "~1.8",
+                "symfony/polyfill-intl-grapheme": "~1.0",
+                "symfony/polyfill-intl-normalizer": "~1.0",
+                "symfony/polyfill-mbstring": "~1.0"
+            },
+            "conflict": {
+                "symfony/translation-contracts": "<2.0"
+            },
+            "require-dev": {
+                "symfony/error-handler": "^5.4|^6.0",
+                "symfony/http-client": "^5.4|^6.0",
+                "symfony/translation-contracts": "^2.0|^3.0",
+                "symfony/var-exporter": "^5.4|^6.0"
+            },
+            "type": "library",
+            "autoload": {
+                "files": [
+                    "Resources/functions.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Component\\String\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Provides an object-oriented API to strings and deals with bytes, UTF-8 code points and grapheme clusters in a unified way",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "grapheme",
+                "i18n",
+                "string",
+                "unicode",
+                "utf-8",
+                "utf8"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/string/tree/v6.0.3"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-01-02T09:55:41+00:00"
+        },
+        {
+            "name": "symfony/translation",
+            "version": "v6.0.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/translation.git",
+                "reference": "b2792b39d74cf41ea3065f27fd2ddf0b556ac7a1"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/translation/zipball/b2792b39d74cf41ea3065f27fd2ddf0b556ac7a1",
+                "reference": "b2792b39d74cf41ea3065f27fd2ddf0b556ac7a1",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "symfony/polyfill-mbstring": "~1.0",
+                "symfony/translation-contracts": "^2.3|^3.0"
+            },
+            "conflict": {
+                "symfony/config": "<5.4",
+                "symfony/console": "<5.4",
+                "symfony/dependency-injection": "<5.4",
+                "symfony/http-kernel": "<5.4",
+                "symfony/twig-bundle": "<5.4",
+                "symfony/yaml": "<5.4"
+            },
+            "provide": {
+                "symfony/translation-implementation": "2.3|3.0"
+            },
+            "require-dev": {
+                "psr/log": "^1|^2|^3",
+                "symfony/config": "^5.4|^6.0",
+                "symfony/console": "^5.4|^6.0",
+                "symfony/dependency-injection": "^5.4|^6.0",
+                "symfony/finder": "^5.4|^6.0",
+                "symfony/http-client-contracts": "^1.1|^2.0|^3.0",
+                "symfony/http-kernel": "^5.4|^6.0",
+                "symfony/intl": "^5.4|^6.0",
+                "symfony/polyfill-intl-icu": "^1.21",
+                "symfony/service-contracts": "^1.1.2|^2|^3",
+                "symfony/yaml": "^5.4|^6.0"
+            },
+            "suggest": {
+                "psr/log-implementation": "To use logging capability in translator",
+                "symfony/config": "",
+                "symfony/yaml": ""
+            },
+            "type": "library",
+            "autoload": {
+                "files": [
+                    "Resources/functions.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Component\\Translation\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Fabien Potencier",
+                    "email": "fabien@symfony.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Provides tools to internationalize your application",
+            "homepage": "https://symfony.com",
+            "support": {
+                "source": "https://github.com/symfony/translation/tree/v6.0.7"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-31T17:18:25+00:00"
+        },
+        {
+            "name": "symfony/translation-contracts",
+            "version": "v3.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/translation-contracts.git",
+                "reference": "c4183fc3ef0f0510893cbeedc7718fb5cafc9ac9"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/translation-contracts/zipball/c4183fc3ef0f0510893cbeedc7718fb5cafc9ac9",
+                "reference": "c4183fc3ef0f0510893cbeedc7718fb5cafc9ac9",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2"
+            },
+            "suggest": {
+                "symfony/translation-implementation": ""
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "3.0-dev"
+                },
+                "thanks": {
+                    "name": "symfony/contracts",
+                    "url": "https://github.com/symfony/contracts"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Symfony\\Contracts\\Translation\\": ""
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Generic abstractions related to translation",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "abstractions",
+                "contracts",
+                "decoupling",
+                "interfaces",
+                "interoperability",
+                "standards"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/translation-contracts/tree/v3.0.1"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-01-02T09:55:41+00:00"
+        },
+        {
+            "name": "symfony/var-dumper",
+            "version": "v6.0.6",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/symfony/var-dumper.git",
+                "reference": "38358405ae948963c50a3aae3dfea598223ba15e"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/symfony/var-dumper/zipball/38358405ae948963c50a3aae3dfea598223ba15e",
+                "reference": "38358405ae948963c50a3aae3dfea598223ba15e",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=8.0.2",
+                "symfony/polyfill-mbstring": "~1.0"
+            },
+            "conflict": {
+                "phpunit/phpunit": "<5.4.3",
+                "symfony/console": "<5.4"
+            },
+            "require-dev": {
+                "ext-iconv": "*",
+                "symfony/console": "^5.4|^6.0",
+                "symfony/process": "^5.4|^6.0",
+                "symfony/uid": "^5.4|^6.0",
+                "twig/twig": "^2.13|^3.0.4"
+            },
+            "suggest": {
+                "ext-iconv": "To convert non-UTF-8 strings to UTF-8 (or symfony/polyfill-iconv in case ext-iconv cannot be used).",
+                "ext-intl": "To show region name in time zone dump",
+                "symfony/console": "To use the ServerDumpCommand and/or the bin/var-dump-server script"
+            },
+            "bin": [
+                "Resources/bin/var-dump-server"
+            ],
+            "type": "library",
+            "autoload": {
+                "files": [
+                    "Resources/functions/dump.php"
+                ],
+                "psr-4": {
+                    "Symfony\\Component\\VarDumper\\": ""
+                },
+                "exclude-from-classmap": [
+                    "/Tests/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nicolas Grekas",
+                    "email": "p@tchwork.com"
+                },
+                {
+                    "name": "Symfony Community",
+                    "homepage": "https://symfony.com/contributors"
+                }
+            ],
+            "description": "Provides mechanisms for walking through any arbitrary PHP variable",
+            "homepage": "https://symfony.com",
+            "keywords": [
+                "debug",
+                "dump"
+            ],
+            "support": {
+                "source": "https://github.com/symfony/var-dumper/tree/v6.0.6"
+            },
+            "funding": [
+                {
+                    "url": "https://symfony.com/sponsor",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/fabpot",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/symfony/symfony",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-02T12:58:14+00:00"
+        },
+        {
+            "name": "tijsverkoyen/css-to-inline-styles",
+            "version": "2.2.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/tijsverkoyen/CssToInlineStyles.git",
+                "reference": "da444caae6aca7a19c0c140f68c6182e337d5b1c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/tijsverkoyen/CssToInlineStyles/zipball/da444caae6aca7a19c0c140f68c6182e337d5b1c",
+                "reference": "da444caae6aca7a19c0c140f68c6182e337d5b1c",
+                "shasum": ""
+            },
+            "require": {
+                "ext-dom": "*",
+                "ext-libxml": "*",
+                "php": "^5.5 || ^7.0 || ^8.0",
+                "symfony/css-selector": "^2.7 || ^3.0 || ^4.0 || ^5.0 || ^6.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^4.8.35 || ^5.7 || ^6.0 || ^7.5 || ^8.5.21 || ^9.5.10"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.2.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "TijsVerkoyen\\CssToInlineStyles\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Tijs Verkoyen",
+                    "email": "css_to_inline_styles@verkoyen.eu",
+                    "role": "Developer"
+                }
+            ],
+            "description": "CssToInlineStyles is a class that enables you to convert HTML-pages/files into HTML-pages/files with inline styles. This is very useful when you're sending emails.",
+            "homepage": "https://github.com/tijsverkoyen/CssToInlineStyles",
+            "support": {
+                "issues": "https://github.com/tijsverkoyen/CssToInlineStyles/issues",
+                "source": "https://github.com/tijsverkoyen/CssToInlineStyles/tree/2.2.4"
+            },
+            "time": "2021-12-08T09:12:39+00:00"
+        },
+        {
+            "name": "vlucas/phpdotenv",
+            "version": "v5.4.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/vlucas/phpdotenv.git",
+                "reference": "264dce589e7ce37a7ba99cb901eed8249fbec92f"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/vlucas/phpdotenv/zipball/264dce589e7ce37a7ba99cb901eed8249fbec92f",
+                "reference": "264dce589e7ce37a7ba99cb901eed8249fbec92f",
+                "shasum": ""
+            },
+            "require": {
+                "ext-pcre": "*",
+                "graham-campbell/result-type": "^1.0.2",
+                "php": "^7.1.3 || ^8.0",
+                "phpoption/phpoption": "^1.8",
+                "symfony/polyfill-ctype": "^1.23",
+                "symfony/polyfill-mbstring": "^1.23.1",
+                "symfony/polyfill-php80": "^1.23.1"
+            },
+            "require-dev": {
+                "bamarni/composer-bin-plugin": "^1.4.1",
+                "ext-filter": "*",
+                "phpunit/phpunit": "^7.5.20 || ^8.5.21 || ^9.5.10"
+            },
+            "suggest": {
+                "ext-filter": "Required to use the boolean validator."
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "5.4-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Dotenv\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Graham Campbell",
+                    "email": "hello@gjcampbell.co.uk",
+                    "homepage": "https://github.com/GrahamCampbell"
+                },
+                {
+                    "name": "Vance Lucas",
+                    "email": "vance@vancelucas.com",
+                    "homepage": "https://github.com/vlucas"
+                }
+            ],
+            "description": "Loads environment variables from `.env` to `getenv()`, `$_ENV` and `$_SERVER` automagically.",
+            "keywords": [
+                "dotenv",
+                "env",
+                "environment"
+            ],
+            "support": {
+                "issues": "https://github.com/vlucas/phpdotenv/issues",
+                "source": "https://github.com/vlucas/phpdotenv/tree/v5.4.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/GrahamCampbell",
+                    "type": "github"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/vlucas/phpdotenv",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2021-12-12T23:22:04+00:00"
+        },
+        {
+            "name": "voku/portable-ascii",
+            "version": "2.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/voku/portable-ascii.git",
+                "reference": "b56450eed252f6801410d810c8e1727224ae0743"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/voku/portable-ascii/zipball/b56450eed252f6801410d810c8e1727224ae0743",
+                "reference": "b56450eed252f6801410d810c8e1727224ae0743",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.0.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "~6.0 || ~7.0 || ~9.0"
+            },
+            "suggest": {
+                "ext-intl": "Use Intl for transliterator_transliterate() support"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "voku\\": "src/voku/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Lars Moelleken",
+                    "homepage": "http://www.moelleken.org/"
+                }
+            ],
+            "description": "Portable ASCII library - performance optimized (ascii) string functions for php.",
+            "homepage": "https://github.com/voku/portable-ascii",
+            "keywords": [
+                "ascii",
+                "clean",
+                "php"
+            ],
+            "support": {
+                "issues": "https://github.com/voku/portable-ascii/issues",
+                "source": "https://github.com/voku/portable-ascii/tree/2.0.1"
+            },
+            "funding": [
+                {
+                    "url": "https://www.paypal.me/moelleken",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/voku",
+                    "type": "github"
+                },
+                {
+                    "url": "https://opencollective.com/portable-ascii",
+                    "type": "open_collective"
+                },
+                {
+                    "url": "https://www.patreon.com/voku",
+                    "type": "patreon"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/voku/portable-ascii",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-08T17:03:00+00:00"
+        },
+        {
+            "name": "webmozart/assert",
+            "version": "1.10.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/webmozarts/assert.git",
+                "reference": "6964c76c7804814a842473e0c8fd15bab0f18e25"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/webmozarts/assert/zipball/6964c76c7804814a842473e0c8fd15bab0f18e25",
+                "reference": "6964c76c7804814a842473e0c8fd15bab0f18e25",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.2 || ^8.0",
+                "symfony/polyfill-ctype": "^1.8"
+            },
+            "conflict": {
+                "phpstan/phpstan": "<0.12.20",
+                "vimeo/psalm": "<4.6.1 || 4.6.2"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^8.5.13"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.10-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Webmozart\\Assert\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Bernhard Schussek",
+                    "email": "bschussek@gmail.com"
+                }
+            ],
+            "description": "Assertions to validate method input/output with nice error messages.",
+            "keywords": [
+                "assert",
+                "check",
+                "validate"
+            ],
+            "support": {
+                "issues": "https://github.com/webmozarts/assert/issues",
+                "source": "https://github.com/webmozarts/assert/tree/1.10.0"
+            },
+            "time": "2021-03-09T10:59:23+00:00"
+        }
+    ],
+    "packages-dev": [
+        {
+            "name": "doctrine/instantiator",
+            "version": "1.4.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/doctrine/instantiator.git",
+                "reference": "10dcfce151b967d20fde1b34ae6640712c3891bc"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/doctrine/instantiator/zipball/10dcfce151b967d20fde1b34ae6640712c3891bc",
+                "reference": "10dcfce151b967d20fde1b34ae6640712c3891bc",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.1 || ^8.0"
+            },
+            "require-dev": {
+                "doctrine/coding-standard": "^9",
+                "ext-pdo": "*",
+                "ext-phar": "*",
+                "phpbench/phpbench": "^0.16 || ^1",
+                "phpstan/phpstan": "^1.4",
+                "phpstan/phpstan-phpunit": "^1",
+                "phpunit/phpunit": "^7.5 || ^8.5 || ^9.5",
+                "vimeo/psalm": "^4.22"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Doctrine\\Instantiator\\": "src/Doctrine/Instantiator/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Marco Pivetta",
+                    "email": "ocramius@gmail.com",
+                    "homepage": "https://ocramius.github.io/"
+                }
+            ],
+            "description": "A small, lightweight utility to instantiate objects in PHP without invoking their constructors",
+            "homepage": "https://www.doctrine-project.org/projects/instantiator.html",
+            "keywords": [
+                "constructor",
+                "instantiate"
+            ],
+            "support": {
+                "issues": "https://github.com/doctrine/instantiator/issues",
+                "source": "https://github.com/doctrine/instantiator/tree/1.4.1"
+            },
+            "funding": [
+                {
+                    "url": "https://www.doctrine-project.org/sponsorship.html",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://www.patreon.com/phpdoctrine",
+                    "type": "patreon"
+                },
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/doctrine%2Finstantiator",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-03T08:28:38+00:00"
+        },
+        {
+            "name": "facade/ignition-contracts",
+            "version": "1.0.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/facade/ignition-contracts.git",
+                "reference": "3c921a1cdba35b68a7f0ccffc6dffc1995b18267"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/facade/ignition-contracts/zipball/3c921a1cdba35b68a7f0ccffc6dffc1995b18267",
+                "reference": "3c921a1cdba35b68a7f0ccffc6dffc1995b18267",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.3|^8.0"
+            },
+            "require-dev": {
+                "friendsofphp/php-cs-fixer": "^v2.15.8",
+                "phpunit/phpunit": "^9.3.11",
+                "vimeo/psalm": "^3.17.1"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Facade\\IgnitionContracts\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Freek Van der Herten",
+                    "email": "freek@spatie.be",
+                    "homepage": "https://flareapp.io",
+                    "role": "Developer"
+                }
+            ],
+            "description": "Solution contracts for Ignition",
+            "homepage": "https://github.com/facade/ignition-contracts",
+            "keywords": [
+                "contracts",
+                "flare",
+                "ignition"
+            ],
+            "support": {
+                "issues": "https://github.com/facade/ignition-contracts/issues",
+                "source": "https://github.com/facade/ignition-contracts/tree/1.0.2"
+            },
+            "time": "2020-10-16T08:27:54+00:00"
+        },
+        {
+            "name": "fakerphp/faker",
+            "version": "v1.19.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/FakerPHP/Faker.git",
+                "reference": "d7f08a622b3346766325488aa32ddc93ccdecc75"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/FakerPHP/Faker/zipball/d7f08a622b3346766325488aa32ddc93ccdecc75",
+                "reference": "d7f08a622b3346766325488aa32ddc93ccdecc75",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.1 || ^8.0",
+                "psr/container": "^1.0 || ^2.0",
+                "symfony/deprecation-contracts": "^2.2 || ^3.0"
+            },
+            "conflict": {
+                "fzaninotto/faker": "*"
+            },
+            "require-dev": {
+                "bamarni/composer-bin-plugin": "^1.4.1",
+                "doctrine/persistence": "^1.3 || ^2.0",
+                "ext-intl": "*",
+                "symfony/phpunit-bridge": "^4.4 || ^5.2"
+            },
+            "suggest": {
+                "doctrine/orm": "Required to use Faker\\ORM\\Doctrine",
+                "ext-curl": "Required by Faker\\Provider\\Image to download images.",
+                "ext-dom": "Required by Faker\\Provider\\HtmlLorem for generating random HTML.",
+                "ext-iconv": "Required by Faker\\Provider\\ru_RU\\Text::realText() for generating real Russian text.",
+                "ext-mbstring": "Required for multibyte Unicode string functionality."
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-main": "v1.19-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Faker\\": "src/Faker/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "François Zaninotto"
+                }
+            ],
+            "description": "Faker is a PHP library that generates fake data for you.",
+            "keywords": [
+                "data",
+                "faker",
+                "fixtures"
+            ],
+            "support": {
+                "issues": "https://github.com/FakerPHP/Faker/issues",
+                "source": "https://github.com/FakerPHP/Faker/tree/v1.19.0"
+            },
+            "time": "2022-02-02T17:38:57+00:00"
+        },
+        {
+            "name": "filp/whoops",
+            "version": "2.14.5",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/filp/whoops.git",
+                "reference": "a63e5e8f26ebbebf8ed3c5c691637325512eb0dc"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/filp/whoops/zipball/a63e5e8f26ebbebf8ed3c5c691637325512eb0dc",
+                "reference": "a63e5e8f26ebbebf8ed3c5c691637325512eb0dc",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^5.5.9 || ^7.0 || ^8.0",
+                "psr/log": "^1.0.1 || ^2.0 || ^3.0"
+            },
+            "require-dev": {
+                "mockery/mockery": "^0.9 || ^1.0",
+                "phpunit/phpunit": "^4.8.36 || ^5.7.27 || ^6.5.14 || ^7.5.20 || ^8.5.8 || ^9.3.3",
+                "symfony/var-dumper": "^2.6 || ^3.0 || ^4.0 || ^5.0"
+            },
+            "suggest": {
+                "symfony/var-dumper": "Pretty print complex values better with var-dumper available",
+                "whoops/soap": "Formats errors as SOAP responses"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.7-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Whoops\\": "src/Whoops/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Filipe Dobreira",
+                    "homepage": "https://github.com/filp",
+                    "role": "Developer"
+                }
+            ],
+            "description": "php error handling for cool kids",
+            "homepage": "https://filp.github.io/whoops/",
+            "keywords": [
+                "error",
+                "exception",
+                "handling",
+                "library",
+                "throwable",
+                "whoops"
+            ],
+            "support": {
+                "issues": "https://github.com/filp/whoops/issues",
+                "source": "https://github.com/filp/whoops/tree/2.14.5"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/denis-sokolov",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-01-07T12:00:00+00:00"
+        },
+        {
+            "name": "hamcrest/hamcrest-php",
+            "version": "v2.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/hamcrest/hamcrest-php.git",
+                "reference": "8c3d0a3f6af734494ad8f6fbbee0ba92422859f3"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/hamcrest/hamcrest-php/zipball/8c3d0a3f6af734494ad8f6fbbee0ba92422859f3",
+                "reference": "8c3d0a3f6af734494ad8f6fbbee0ba92422859f3",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^5.3|^7.0|^8.0"
+            },
+            "replace": {
+                "cordoval/hamcrest-php": "*",
+                "davedevelopment/hamcrest-php": "*",
+                "kodova/hamcrest-php": "*"
+            },
+            "require-dev": {
+                "phpunit/php-file-iterator": "^1.4 || ^2.0",
+                "phpunit/phpunit": "^4.8.36 || ^5.7 || ^6.5 || ^7.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.1-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "hamcrest"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "description": "This is the PHP port of Hamcrest Matchers",
+            "keywords": [
+                "test"
+            ],
+            "support": {
+                "issues": "https://github.com/hamcrest/hamcrest-php/issues",
+                "source": "https://github.com/hamcrest/hamcrest-php/tree/v2.0.1"
+            },
+            "time": "2020-07-09T08:09:16+00:00"
+        },
+        {
+            "name": "laravel/sail",
+            "version": "v1.13.9",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/laravel/sail.git",
+                "reference": "7bb294fe99fc42c3b1bee83fb667cd7698b3c385"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/laravel/sail/zipball/7bb294fe99fc42c3b1bee83fb667cd7698b3c385",
+                "reference": "7bb294fe99fc42c3b1bee83fb667cd7698b3c385",
+                "shasum": ""
+            },
+            "require": {
+                "illuminate/console": "^8.0|^9.0",
+                "illuminate/contracts": "^8.0|^9.0",
+                "illuminate/support": "^8.0|^9.0",
+                "php": "^7.3|^8.0"
+            },
+            "bin": [
+                "bin/sail"
+            ],
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.x-dev"
+                },
+                "laravel": {
+                    "providers": [
+                        "Laravel\\Sail\\SailServiceProvider"
+                    ]
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Laravel\\Sail\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Taylor Otwell",
+                    "email": "taylor@laravel.com"
+                }
+            ],
+            "description": "Docker files for running a basic Laravel application.",
+            "keywords": [
+                "docker",
+                "laravel"
+            ],
+            "support": {
+                "issues": "https://github.com/laravel/sail/issues",
+                "source": "https://github.com/laravel/sail"
+            },
+            "time": "2022-04-04T15:21:51+00:00"
+        },
+        {
+            "name": "mockery/mockery",
+            "version": "1.5.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/mockery/mockery.git",
+                "reference": "c10a5f6e06fc2470ab1822fa13fa2a7380f8fbac"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/mockery/mockery/zipball/c10a5f6e06fc2470ab1822fa13fa2a7380f8fbac",
+                "reference": "c10a5f6e06fc2470ab1822fa13fa2a7380f8fbac",
+                "shasum": ""
+            },
+            "require": {
+                "hamcrest/hamcrest-php": "^2.0.1",
+                "lib-pcre": ">=7.0",
+                "php": "^7.3 || ^8.0"
+            },
+            "conflict": {
+                "phpunit/phpunit": "<8.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^8.5 || ^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.4.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-0": {
+                    "Mockery": "library/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Pádraic Brady",
+                    "email": "padraic.brady@gmail.com",
+                    "homepage": "http://blog.astrumfutura.com"
+                },
+                {
+                    "name": "Dave Marshall",
+                    "email": "dave.marshall@atstsolutions.co.uk",
+                    "homepage": "http://davedevelopment.co.uk"
+                }
+            ],
+            "description": "Mockery is a simple yet flexible PHP mock object framework",
+            "homepage": "https://github.com/mockery/mockery",
+            "keywords": [
+                "BDD",
+                "TDD",
+                "library",
+                "mock",
+                "mock objects",
+                "mockery",
+                "stub",
+                "test",
+                "test double",
+                "testing"
+            ],
+            "support": {
+                "issues": "https://github.com/mockery/mockery/issues",
+                "source": "https://github.com/mockery/mockery/tree/1.5.0"
+            },
+            "time": "2022-01-20T13:18:17+00:00"
+        },
+        {
+            "name": "myclabs/deep-copy",
+            "version": "1.11.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/myclabs/DeepCopy.git",
+                "reference": "14daed4296fae74d9e3201d2c4925d1acb7aa614"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/myclabs/DeepCopy/zipball/14daed4296fae74d9e3201d2c4925d1acb7aa614",
+                "reference": "14daed4296fae74d9e3201d2c4925d1acb7aa614",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.1 || ^8.0"
+            },
+            "conflict": {
+                "doctrine/collections": "<1.6.8",
+                "doctrine/common": "<2.13.3 || >=3,<3.2.2"
+            },
+            "require-dev": {
+                "doctrine/collections": "^1.6.8",
+                "doctrine/common": "^2.13.3 || ^3.2.2",
+                "phpunit/phpunit": "^7.5.20 || ^8.5.23 || ^9.5.13"
+            },
+            "type": "library",
+            "autoload": {
+                "files": [
+                    "src/DeepCopy/deep_copy.php"
+                ],
+                "psr-4": {
+                    "DeepCopy\\": "src/DeepCopy/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "description": "Create deep copies (clones) of your objects",
+            "keywords": [
+                "clone",
+                "copy",
+                "duplicate",
+                "object",
+                "object graph"
+            ],
+            "support": {
+                "issues": "https://github.com/myclabs/DeepCopy/issues",
+                "source": "https://github.com/myclabs/DeepCopy/tree/1.11.0"
+            },
+            "funding": [
+                {
+                    "url": "https://tidelift.com/funding/github/packagist/myclabs/deep-copy",
+                    "type": "tidelift"
+                }
+            ],
+            "time": "2022-03-03T13:19:32+00:00"
+        },
+        {
+            "name": "nunomaduro/collision",
+            "version": "v6.2.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/nunomaduro/collision.git",
+                "reference": "c379636dc50e829edb3a8bcb944a01aa1aed8f25"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/nunomaduro/collision/zipball/c379636dc50e829edb3a8bcb944a01aa1aed8f25",
+                "reference": "c379636dc50e829edb3a8bcb944a01aa1aed8f25",
+                "shasum": ""
+            },
+            "require": {
+                "facade/ignition-contracts": "^1.0.2",
+                "filp/whoops": "^2.14.5",
+                "php": "^8.0.0",
+                "symfony/console": "^6.0.2"
+            },
+            "require-dev": {
+                "brianium/paratest": "^6.4.1",
+                "laravel/framework": "^9.7",
+                "nunomaduro/larastan": "^1.0.2",
+                "nunomaduro/mock-final-classes": "^1.1.0",
+                "orchestra/testbench": "^7.3.0",
+                "phpunit/phpunit": "^9.5.11"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-develop": "6.x-dev"
+                },
+                "laravel": {
+                    "providers": [
+                        "NunoMaduro\\Collision\\Adapters\\Laravel\\CollisionServiceProvider"
+                    ]
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "NunoMaduro\\Collision\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Nuno Maduro",
+                    "email": "enunomaduro@gmail.com"
+                }
+            ],
+            "description": "Cli error handling for console/command-line PHP applications.",
+            "keywords": [
+                "artisan",
+                "cli",
+                "command-line",
+                "console",
+                "error",
+                "handling",
+                "laravel",
+                "laravel-zero",
+                "php",
+                "symfony"
+            ],
+            "support": {
+                "issues": "https://github.com/nunomaduro/collision/issues",
+                "source": "https://github.com/nunomaduro/collision"
+            },
+            "funding": [
+                {
+                    "url": "https://www.paypal.com/paypalme/enunomaduro",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/nunomaduro",
+                    "type": "github"
+                },
+                {
+                    "url": "https://www.patreon.com/nunomaduro",
+                    "type": "patreon"
+                }
+            ],
+            "time": "2022-04-05T15:31:38+00:00"
+        },
+        {
+            "name": "phar-io/manifest",
+            "version": "2.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/phar-io/manifest.git",
+                "reference": "97803eca37d319dfa7826cc2437fc020857acb53"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/phar-io/manifest/zipball/97803eca37d319dfa7826cc2437fc020857acb53",
+                "reference": "97803eca37d319dfa7826cc2437fc020857acb53",
+                "shasum": ""
+            },
+            "require": {
+                "ext-dom": "*",
+                "ext-phar": "*",
+                "ext-xmlwriter": "*",
+                "phar-io/version": "^3.0.1",
+                "php": "^7.2 || ^8.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.0.x-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Arne Blankerts",
+                    "email": "arne@blankerts.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Heuer",
+                    "email": "sebastian@phpeople.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "Developer"
+                }
+            ],
+            "description": "Component for reading phar.io manifest information from a PHP Archive (PHAR)",
+            "support": {
+                "issues": "https://github.com/phar-io/manifest/issues",
+                "source": "https://github.com/phar-io/manifest/tree/2.0.3"
+            },
+            "time": "2021-07-20T11:28:43+00:00"
+        },
+        {
+            "name": "phar-io/version",
+            "version": "3.2.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/phar-io/version.git",
+                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/phar-io/version/zipball/4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
+                "reference": "4f7fd7836c6f332bb2933569e566a0d6c4cbed74",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.2 || ^8.0"
+            },
+            "type": "library",
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Arne Blankerts",
+                    "email": "arne@blankerts.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Heuer",
+                    "email": "sebastian@phpeople.de",
+                    "role": "Developer"
+                },
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "Developer"
+                }
+            ],
+            "description": "Library for handling version information and constraints",
+            "support": {
+                "issues": "https://github.com/phar-io/version/issues",
+                "source": "https://github.com/phar-io/version/tree/3.2.1"
+            },
+            "time": "2022-02-21T01:04:05+00:00"
+        },
+        {
+            "name": "phpdocumentor/reflection-common",
+            "version": "2.2.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/phpDocumentor/ReflectionCommon.git",
+                "reference": "1d01c49d4ed62f25aa84a747ad35d5a16924662b"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/phpDocumentor/ReflectionCommon/zipball/1d01c49d4ed62f25aa84a747ad35d5a16924662b",
+                "reference": "1d01c49d4ed62f25aa84a747ad35d5a16924662b",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.2 || ^8.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-2.x": "2.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "phpDocumentor\\Reflection\\": "src/"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Jaap van Otterdijk",
+                    "email": "opensource@ijaap.nl"
+                }
+            ],
+            "description": "Common reflection classes used by phpdocumentor to reflect the code structure",
+            "homepage": "http://www.phpdoc.org",
+            "keywords": [
+                "FQSEN",
+                "phpDocumentor",
+                "phpdoc",
+                "reflection",
+                "static analysis"
+            ],
+            "support": {
+                "issues": "https://github.com/phpDocumentor/ReflectionCommon/issues",
+                "source": "https://github.com/phpDocumentor/ReflectionCommon/tree/2.x"
+            },
+            "time": "2020-06-27T09:03:43+00:00"
+        },
+        {
+            "name": "phpdocumentor/reflection-docblock",
+            "version": "5.3.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/phpDocumentor/ReflectionDocBlock.git",
+                "reference": "622548b623e81ca6d78b721c5e029f4ce664f170"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/phpDocumentor/ReflectionDocBlock/zipball/622548b623e81ca6d78b721c5e029f4ce664f170",
+                "reference": "622548b623e81ca6d78b721c5e029f4ce664f170",
+                "shasum": ""
+            },
+            "require": {
+                "ext-filter": "*",
+                "php": "^7.2 || ^8.0",
+                "phpdocumentor/reflection-common": "^2.2",
+                "phpdocumentor/type-resolver": "^1.3",
+                "webmozart/assert": "^1.9.1"
+            },
+            "require-dev": {
+                "mockery/mockery": "~1.3.2",
+                "psalm/phar": "^4.8"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "5.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "phpDocumentor\\Reflection\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Mike van Riel",
+                    "email": "me@mikevanriel.com"
+                },
+                {
+                    "name": "Jaap van Otterdijk",
+                    "email": "account@ijaap.nl"
+                }
+            ],
+            "description": "With this component, a library can provide support for annotations via DocBlocks or otherwise retrieve information that is embedded in a DocBlock.",
+            "support": {
+                "issues": "https://github.com/phpDocumentor/ReflectionDocBlock/issues",
+                "source": "https://github.com/phpDocumentor/ReflectionDocBlock/tree/5.3.0"
+            },
+            "time": "2021-10-19T17:43:47+00:00"
+        },
+        {
+            "name": "phpdocumentor/type-resolver",
+            "version": "1.6.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/phpDocumentor/TypeResolver.git",
+                "reference": "77a32518733312af16a44300404e945338981de3"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/phpDocumentor/TypeResolver/zipball/77a32518733312af16a44300404e945338981de3",
+                "reference": "77a32518733312af16a44300404e945338981de3",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.2 || ^8.0",
+                "phpdocumentor/reflection-common": "^2.0"
+            },
+            "require-dev": {
+                "ext-tokenizer": "*",
+                "psalm/phar": "^4.8"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-1.x": "1.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "phpDocumentor\\Reflection\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Mike van Riel",
+                    "email": "me@mikevanriel.com"
+                }
+            ],
+            "description": "A PSR-5 based resolver of Class names, Types and Structural Element Names",
+            "support": {
+                "issues": "https://github.com/phpDocumentor/TypeResolver/issues",
+                "source": "https://github.com/phpDocumentor/TypeResolver/tree/1.6.1"
+            },
+            "time": "2022-03-15T21:29:03+00:00"
+        },
+        {
+            "name": "phpspec/prophecy",
+            "version": "v1.15.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/phpspec/prophecy.git",
+                "reference": "bbcd7380b0ebf3961ee21409db7b38bc31d69a13"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/phpspec/prophecy/zipball/bbcd7380b0ebf3961ee21409db7b38bc31d69a13",
+                "reference": "bbcd7380b0ebf3961ee21409db7b38bc31d69a13",
+                "shasum": ""
+            },
+            "require": {
+                "doctrine/instantiator": "^1.2",
+                "php": "^7.2 || ~8.0, <8.2",
+                "phpdocumentor/reflection-docblock": "^5.2",
+                "sebastian/comparator": "^3.0 || ^4.0",
+                "sebastian/recursion-context": "^3.0 || ^4.0"
+            },
+            "require-dev": {
+                "phpspec/phpspec": "^6.0 || ^7.0",
+                "phpunit/phpunit": "^8.0 || ^9.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.x-dev"
+                }
+            },
+            "autoload": {
+                "psr-4": {
+                    "Prophecy\\": "src/Prophecy"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Konstantin Kudryashov",
+                    "email": "ever.zet@gmail.com",
+                    "homepage": "http://everzet.com"
+                },
+                {
+                    "name": "Marcello Duarte",
+                    "email": "marcello.duarte@gmail.com"
+                }
+            ],
+            "description": "Highly opinionated mocking framework for PHP 5.3+",
+            "homepage": "https://github.com/phpspec/prophecy",
+            "keywords": [
+                "Double",
+                "Dummy",
+                "fake",
+                "mock",
+                "spy",
+                "stub"
+            ],
+            "support": {
+                "issues": "https://github.com/phpspec/prophecy/issues",
+                "source": "https://github.com/phpspec/prophecy/tree/v1.15.0"
+            },
+            "time": "2021-12-08T12:19:24+00:00"
+        },
+        {
+            "name": "phpunit/php-code-coverage",
+            "version": "9.2.15",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/php-code-coverage.git",
+                "reference": "2e9da11878c4202f97915c1cb4bb1ca318a63f5f"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-code-coverage/zipball/2e9da11878c4202f97915c1cb4bb1ca318a63f5f",
+                "reference": "2e9da11878c4202f97915c1cb4bb1ca318a63f5f",
+                "shasum": ""
+            },
+            "require": {
+                "ext-dom": "*",
+                "ext-libxml": "*",
+                "ext-xmlwriter": "*",
+                "nikic/php-parser": "^4.13.0",
+                "php": ">=7.3",
+                "phpunit/php-file-iterator": "^3.0.3",
+                "phpunit/php-text-template": "^2.0.2",
+                "sebastian/code-unit-reverse-lookup": "^2.0.2",
+                "sebastian/complexity": "^2.0",
+                "sebastian/environment": "^5.1.2",
+                "sebastian/lines-of-code": "^1.0.3",
+                "sebastian/version": "^3.0.1",
+                "theseer/tokenizer": "^1.2.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "suggest": {
+                "ext-pcov": "*",
+                "ext-xdebug": "*"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "9.2-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Library that provides collection, processing, and rendering functionality for PHP code coverage information.",
+            "homepage": "https://github.com/sebastianbergmann/php-code-coverage",
+            "keywords": [
+                "coverage",
+                "testing",
+                "xunit"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/php-code-coverage/issues",
+                "source": "https://github.com/sebastianbergmann/php-code-coverage/tree/9.2.15"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-03-07T09:28:20+00:00"
+        },
+        {
+            "name": "phpunit/php-file-iterator",
+            "version": "3.0.6",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/php-file-iterator.git",
+                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-file-iterator/zipball/cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
+                "reference": "cf1c2e7c203ac650e352f4cc675a7021e7d1b3cf",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "FilterIterator implementation that filters files based on a list of suffixes.",
+            "homepage": "https://github.com/sebastianbergmann/php-file-iterator/",
+            "keywords": [
+                "filesystem",
+                "iterator"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/php-file-iterator/issues",
+                "source": "https://github.com/sebastianbergmann/php-file-iterator/tree/3.0.6"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2021-12-02T12:48:52+00:00"
+        },
+        {
+            "name": "phpunit/php-invoker",
+            "version": "3.1.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/php-invoker.git",
+                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-invoker/zipball/5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
+                "reference": "5a10147d0aaf65b58940a0b72f71c9ac0423cc67",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "ext-pcntl": "*",
+                "phpunit/phpunit": "^9.3"
+            },
+            "suggest": {
+                "ext-pcntl": "*"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.1-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Invoke callables with a timeout",
+            "homepage": "https://github.com/sebastianbergmann/php-invoker/",
+            "keywords": [
+                "process"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/php-invoker/issues",
+                "source": "https://github.com/sebastianbergmann/php-invoker/tree/3.1.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-09-28T05:58:55+00:00"
+        },
+        {
+            "name": "phpunit/php-text-template",
+            "version": "2.0.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/php-text-template.git",
+                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-text-template/zipball/5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
+                "reference": "5da5f67fc95621df9ff4c4e5a84d6a8a2acf7c28",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Simple template engine.",
+            "homepage": "https://github.com/sebastianbergmann/php-text-template/",
+            "keywords": [
+                "template"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/php-text-template/issues",
+                "source": "https://github.com/sebastianbergmann/php-text-template/tree/2.0.4"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T05:33:50+00:00"
+        },
+        {
+            "name": "phpunit/php-timer",
+            "version": "5.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/php-timer.git",
+                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/php-timer/zipball/5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
+                "reference": "5a63ce20ed1b5bf577850e2c4e87f4aa902afbd2",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "5.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Utility class for timing",
+            "homepage": "https://github.com/sebastianbergmann/php-timer/",
+            "keywords": [
+                "timer"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/php-timer/issues",
+                "source": "https://github.com/sebastianbergmann/php-timer/tree/5.0.3"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T13:16:10+00:00"
+        },
+        {
+            "name": "phpunit/phpunit",
+            "version": "9.5.20",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/phpunit.git",
+                "reference": "12bc8879fb65aef2138b26fc633cb1e3620cffba"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/phpunit/zipball/12bc8879fb65aef2138b26fc633cb1e3620cffba",
+                "reference": "12bc8879fb65aef2138b26fc633cb1e3620cffba",
+                "shasum": ""
+            },
+            "require": {
+                "doctrine/instantiator": "^1.3.1",
+                "ext-dom": "*",
+                "ext-json": "*",
+                "ext-libxml": "*",
+                "ext-mbstring": "*",
+                "ext-xml": "*",
+                "ext-xmlwriter": "*",
+                "myclabs/deep-copy": "^1.10.1",
+                "phar-io/manifest": "^2.0.3",
+                "phar-io/version": "^3.0.2",
+                "php": ">=7.3",
+                "phpspec/prophecy": "^1.12.1",
+                "phpunit/php-code-coverage": "^9.2.13",
+                "phpunit/php-file-iterator": "^3.0.5",
+                "phpunit/php-invoker": "^3.1.1",
+                "phpunit/php-text-template": "^2.0.3",
+                "phpunit/php-timer": "^5.0.2",
+                "sebastian/cli-parser": "^1.0.1",
+                "sebastian/code-unit": "^1.0.6",
+                "sebastian/comparator": "^4.0.5",
+                "sebastian/diff": "^4.0.3",
+                "sebastian/environment": "^5.1.3",
+                "sebastian/exporter": "^4.0.3",
+                "sebastian/global-state": "^5.0.1",
+                "sebastian/object-enumerator": "^4.0.3",
+                "sebastian/resource-operations": "^3.0.3",
+                "sebastian/type": "^3.0",
+                "sebastian/version": "^3.0.2"
+            },
+            "require-dev": {
+                "ext-pdo": "*",
+                "phpspec/prophecy-phpunit": "^2.0.1"
+            },
+            "suggest": {
+                "ext-soap": "*",
+                "ext-xdebug": "*"
+            },
+            "bin": [
+                "phpunit"
+            ],
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "9.5-dev"
+                }
+            },
+            "autoload": {
+                "files": [
+                    "src/Framework/Assert/Functions.php"
+                ],
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "The PHP Unit Testing framework.",
+            "homepage": "https://phpunit.de/",
+            "keywords": [
+                "phpunit",
+                "testing",
+                "xunit"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/phpunit/issues",
+                "source": "https://github.com/sebastianbergmann/phpunit/tree/9.5.20"
+            },
+            "funding": [
+                {
+                    "url": "https://phpunit.de/sponsors.html",
+                    "type": "custom"
+                },
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-04-01T12:37:26+00:00"
+        },
+        {
+            "name": "sebastian/cli-parser",
+            "version": "1.0.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/cli-parser.git",
+                "reference": "442e7c7e687e42adc03470c7b668bc4b2402c0b2"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/cli-parser/zipball/442e7c7e687e42adc03470c7b668bc4b2402c0b2",
+                "reference": "442e7c7e687e42adc03470c7b668bc4b2402c0b2",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Library for parsing CLI options",
+            "homepage": "https://github.com/sebastianbergmann/cli-parser",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/cli-parser/issues",
+                "source": "https://github.com/sebastianbergmann/cli-parser/tree/1.0.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-09-28T06:08:49+00:00"
+        },
+        {
+            "name": "sebastian/code-unit",
+            "version": "1.0.8",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/code-unit.git",
+                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/code-unit/zipball/1fc9f64c0927627ef78ba436c9b17d967e68e120",
+                "reference": "1fc9f64c0927627ef78ba436c9b17d967e68e120",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Collection of value objects that represent the PHP code units",
+            "homepage": "https://github.com/sebastianbergmann/code-unit",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/code-unit/issues",
+                "source": "https://github.com/sebastianbergmann/code-unit/tree/1.0.8"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T13:08:54+00:00"
+        },
+        {
+            "name": "sebastian/code-unit-reverse-lookup",
+            "version": "2.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/code-unit-reverse-lookup.git",
+                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/code-unit-reverse-lookup/zipball/ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
+                "reference": "ac91f01ccec49fb77bdc6fd1e548bc70f7faa3e5",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                }
+            ],
+            "description": "Looks up which function or method a line of code belongs to",
+            "homepage": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/issues",
+                "source": "https://github.com/sebastianbergmann/code-unit-reverse-lookup/tree/2.0.3"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-09-28T05:30:19+00:00"
+        },
+        {
+            "name": "sebastian/comparator",
+            "version": "4.0.6",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/comparator.git",
+                "reference": "55f4261989e546dc112258c7a75935a81a7ce382"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/comparator/zipball/55f4261989e546dc112258c7a75935a81a7ce382",
+                "reference": "55f4261989e546dc112258c7a75935a81a7ce382",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3",
+                "sebastian/diff": "^4.0",
+                "sebastian/exporter": "^4.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                },
+                {
+                    "name": "Jeff Welch",
+                    "email": "whatthejeff@gmail.com"
+                },
+                {
+                    "name": "Volker Dusch",
+                    "email": "github@wallbash.com"
+                },
+                {
+                    "name": "Bernhard Schussek",
+                    "email": "bschussek@2bepublished.at"
+                }
+            ],
+            "description": "Provides the functionality to compare PHP values for equality",
+            "homepage": "https://github.com/sebastianbergmann/comparator",
+            "keywords": [
+                "comparator",
+                "compare",
+                "equality"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/comparator/issues",
+                "source": "https://github.com/sebastianbergmann/comparator/tree/4.0.6"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T15:49:45+00:00"
+        },
+        {
+            "name": "sebastian/complexity",
+            "version": "2.0.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/complexity.git",
+                "reference": "739b35e53379900cc9ac327b2147867b8b6efd88"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/complexity/zipball/739b35e53379900cc9ac327b2147867b8b6efd88",
+                "reference": "739b35e53379900cc9ac327b2147867b8b6efd88",
+                "shasum": ""
+            },
+            "require": {
+                "nikic/php-parser": "^4.7",
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Library for calculating the complexity of PHP code units",
+            "homepage": "https://github.com/sebastianbergmann/complexity",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/complexity/issues",
+                "source": "https://github.com/sebastianbergmann/complexity/tree/2.0.2"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T15:52:27+00:00"
+        },
+        {
+            "name": "sebastian/diff",
+            "version": "4.0.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/diff.git",
+                "reference": "3461e3fccc7cfdfc2720be910d3bd73c69be590d"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/diff/zipball/3461e3fccc7cfdfc2720be910d3bd73c69be590d",
+                "reference": "3461e3fccc7cfdfc2720be910d3bd73c69be590d",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3",
+                "symfony/process": "^4.2 || ^5"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                },
+                {
+                    "name": "Kore Nordmann",
+                    "email": "mail@kore-nordmann.de"
+                }
+            ],
+            "description": "Diff implementation",
+            "homepage": "https://github.com/sebastianbergmann/diff",
+            "keywords": [
+                "diff",
+                "udiff",
+                "unidiff",
+                "unified diff"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/diff/issues",
+                "source": "https://github.com/sebastianbergmann/diff/tree/4.0.4"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T13:10:38+00:00"
+        },
+        {
+            "name": "sebastian/environment",
+            "version": "5.1.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/environment.git",
+                "reference": "1b5dff7bb151a4db11d49d90e5408e4e938270f7"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/environment/zipball/1b5dff7bb151a4db11d49d90e5408e4e938270f7",
+                "reference": "1b5dff7bb151a4db11d49d90e5408e4e938270f7",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "suggest": {
+                "ext-posix": "*"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "5.1-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                }
+            ],
+            "description": "Provides functionality to handle HHVM/PHP environments",
+            "homepage": "http://www.github.com/sebastianbergmann/environment",
+            "keywords": [
+                "Xdebug",
+                "environment",
+                "hhvm"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/environment/issues",
+                "source": "https://github.com/sebastianbergmann/environment/tree/5.1.4"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-04-03T09:37:03+00:00"
+        },
+        {
+            "name": "sebastian/exporter",
+            "version": "4.0.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/exporter.git",
+                "reference": "65e8b7db476c5dd267e65eea9cab77584d3cfff9"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/exporter/zipball/65e8b7db476c5dd267e65eea9cab77584d3cfff9",
+                "reference": "65e8b7db476c5dd267e65eea9cab77584d3cfff9",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3",
+                "sebastian/recursion-context": "^4.0"
+            },
+            "require-dev": {
+                "ext-mbstring": "*",
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                },
+                {
+                    "name": "Jeff Welch",
+                    "email": "whatthejeff@gmail.com"
+                },
+                {
+                    "name": "Volker Dusch",
+                    "email": "github@wallbash.com"
+                },
+                {
+                    "name": "Adam Harvey",
+                    "email": "aharvey@php.net"
+                },
+                {
+                    "name": "Bernhard Schussek",
+                    "email": "bschussek@gmail.com"
+                }
+            ],
+            "description": "Provides the functionality to export PHP variables for visualization",
+            "homepage": "https://www.github.com/sebastianbergmann/exporter",
+            "keywords": [
+                "export",
+                "exporter"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/exporter/issues",
+                "source": "https://github.com/sebastianbergmann/exporter/tree/4.0.4"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2021-11-11T14:18:36+00:00"
+        },
+        {
+            "name": "sebastian/global-state",
+            "version": "5.0.5",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/global-state.git",
+                "reference": "0ca8db5a5fc9c8646244e629625ac486fa286bf2"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/global-state/zipball/0ca8db5a5fc9c8646244e629625ac486fa286bf2",
+                "reference": "0ca8db5a5fc9c8646244e629625ac486fa286bf2",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3",
+                "sebastian/object-reflector": "^2.0",
+                "sebastian/recursion-context": "^4.0"
+            },
+            "require-dev": {
+                "ext-dom": "*",
+                "phpunit/phpunit": "^9.3"
+            },
+            "suggest": {
+                "ext-uopz": "*"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "5.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                }
+            ],
+            "description": "Snapshotting of global state",
+            "homepage": "http://www.github.com/sebastianbergmann/global-state",
+            "keywords": [
+                "global state"
+            ],
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/global-state/issues",
+                "source": "https://github.com/sebastianbergmann/global-state/tree/5.0.5"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-02-14T08:28:10+00:00"
+        },
+        {
+            "name": "sebastian/lines-of-code",
+            "version": "1.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/lines-of-code.git",
+                "reference": "c1c2e997aa3146983ed888ad08b15470a2e22ecc"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/lines-of-code/zipball/c1c2e997aa3146983ed888ad08b15470a2e22ecc",
+                "reference": "c1c2e997aa3146983ed888ad08b15470a2e22ecc",
+                "shasum": ""
+            },
+            "require": {
+                "nikic/php-parser": "^4.6",
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "1.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Library for counting the lines of code in PHP source code",
+            "homepage": "https://github.com/sebastianbergmann/lines-of-code",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/lines-of-code/issues",
+                "source": "https://github.com/sebastianbergmann/lines-of-code/tree/1.0.3"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-11-28T06:42:11+00:00"
+        },
+        {
+            "name": "sebastian/object-enumerator",
+            "version": "4.0.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/object-enumerator.git",
+                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/object-enumerator/zipball/5c9eeac41b290a3712d88851518825ad78f45c71",
+                "reference": "5c9eeac41b290a3712d88851518825ad78f45c71",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3",
+                "sebastian/object-reflector": "^2.0",
+                "sebastian/recursion-context": "^4.0"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                }
+            ],
+            "description": "Traverses array structures and object graphs to enumerate all referenced objects",
+            "homepage": "https://github.com/sebastianbergmann/object-enumerator/",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/object-enumerator/issues",
+                "source": "https://github.com/sebastianbergmann/object-enumerator/tree/4.0.4"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T13:12:34+00:00"
+        },
+        {
+            "name": "sebastian/object-reflector",
+            "version": "2.0.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/object-reflector.git",
+                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/object-reflector/zipball/b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
+                "reference": "b4f479ebdbf63ac605d183ece17d8d7fe49c15c7",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "2.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                }
+            ],
+            "description": "Allows reflection of object attributes, including inherited and non-public ones",
+            "homepage": "https://github.com/sebastianbergmann/object-reflector/",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/object-reflector/issues",
+                "source": "https://github.com/sebastianbergmann/object-reflector/tree/2.0.4"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T13:14:26+00:00"
+        },
+        {
+            "name": "sebastian/recursion-context",
+            "version": "4.0.4",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/recursion-context.git",
+                "reference": "cd9d8cf3c5804de4341c283ed787f099f5506172"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/recursion-context/zipball/cd9d8cf3c5804de4341c283ed787f099f5506172",
+                "reference": "cd9d8cf3c5804de4341c283ed787f099f5506172",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "4.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                },
+                {
+                    "name": "Jeff Welch",
+                    "email": "whatthejeff@gmail.com"
+                },
+                {
+                    "name": "Adam Harvey",
+                    "email": "aharvey@php.net"
+                }
+            ],
+            "description": "Provides functionality to recursively process PHP variables",
+            "homepage": "http://www.github.com/sebastianbergmann/recursion-context",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/recursion-context/issues",
+                "source": "https://github.com/sebastianbergmann/recursion-context/tree/4.0.4"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-10-26T13:17:30+00:00"
+        },
+        {
+            "name": "sebastian/resource-operations",
+            "version": "3.0.3",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/resource-operations.git",
+                "reference": "0f4443cb3a1d92ce809899753bc0d5d5a8dd19a8"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/resource-operations/zipball/0f4443cb3a1d92ce809899753bc0d5d5a8dd19a8",
+                "reference": "0f4443cb3a1d92ce809899753bc0d5d5a8dd19a8",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.0"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de"
+                }
+            ],
+            "description": "Provides a list of PHP built-in functions that operate on resources",
+            "homepage": "https://www.github.com/sebastianbergmann/resource-operations",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/resource-operations/issues",
+                "source": "https://github.com/sebastianbergmann/resource-operations/tree/3.0.3"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-09-28T06:45:17+00:00"
+        },
+        {
+            "name": "sebastian/type",
+            "version": "3.0.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/type.git",
+                "reference": "b233b84bc4465aff7b57cf1c4bc75c86d00d6dad"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/type/zipball/b233b84bc4465aff7b57cf1c4bc75c86d00d6dad",
+                "reference": "b233b84bc4465aff7b57cf1c4bc75c86d00d6dad",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "require-dev": {
+                "phpunit/phpunit": "^9.5"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Collection of value objects that represent the types of the PHP type system",
+            "homepage": "https://github.com/sebastianbergmann/type",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/type/issues",
+                "source": "https://github.com/sebastianbergmann/type/tree/3.0.0"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-03-15T09:54:48+00:00"
+        },
+        {
+            "name": "sebastian/version",
+            "version": "3.0.2",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/sebastianbergmann/version.git",
+                "reference": "c6c1022351a901512170118436c764e473f6de8c"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/sebastianbergmann/version/zipball/c6c1022351a901512170118436c764e473f6de8c",
+                "reference": "c6c1022351a901512170118436c764e473f6de8c",
+                "shasum": ""
+            },
+            "require": {
+                "php": ">=7.3"
+            },
+            "type": "library",
+            "extra": {
+                "branch-alias": {
+                    "dev-master": "3.0-dev"
+                }
+            },
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Sebastian Bergmann",
+                    "email": "sebastian@phpunit.de",
+                    "role": "lead"
+                }
+            ],
+            "description": "Library that helps with managing the version number of Git-hosted PHP projects",
+            "homepage": "https://github.com/sebastianbergmann/version",
+            "support": {
+                "issues": "https://github.com/sebastianbergmann/version/issues",
+                "source": "https://github.com/sebastianbergmann/version/tree/3.0.2"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sebastianbergmann",
+                    "type": "github"
+                }
+            ],
+            "time": "2020-09-28T06:39:44+00:00"
+        },
+        {
+            "name": "spatie/backtrace",
+            "version": "1.2.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/spatie/backtrace.git",
+                "reference": "4ee7d41aa5268107906ea8a4d9ceccde136dbd5b"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/spatie/backtrace/zipball/4ee7d41aa5268107906ea8a4d9ceccde136dbd5b",
+                "reference": "4ee7d41aa5268107906ea8a4d9ceccde136dbd5b",
+                "shasum": ""
+            },
+            "require": {
+                "php": "^7.3|^8.0"
+            },
+            "require-dev": {
+                "ext-json": "*",
+                "phpunit/phpunit": "^9.3",
+                "symfony/var-dumper": "^5.1"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Spatie\\Backtrace\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Freek Van de Herten",
+                    "email": "freek@spatie.be",
+                    "homepage": "https://spatie.be",
+                    "role": "Developer"
+                }
+            ],
+            "description": "A better backtrace",
+            "homepage": "https://github.com/spatie/backtrace",
+            "keywords": [
+                "Backtrace",
+                "spatie"
+            ],
+            "support": {
+                "issues": "https://github.com/spatie/backtrace/issues",
+                "source": "https://github.com/spatie/backtrace/tree/1.2.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/sponsors/spatie",
+                    "type": "github"
+                },
+                {
+                    "url": "https://spatie.be/open-source/support-us",
+                    "type": "other"
+                }
+            ],
+            "time": "2021-11-09T10:57:15+00:00"
+        },
+        {
+            "name": "spatie/flare-client-php",
+            "version": "1.1.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/spatie/flare-client-php.git",
+                "reference": "ceab058852a1278d9f57a7b95f1c348e4956d866"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/spatie/flare-client-php/zipball/ceab058852a1278d9f57a7b95f1c348e4956d866",
+                "reference": "ceab058852a1278d9f57a7b95f1c348e4956d866",
+                "shasum": ""
+            },
+            "require": {
+                "illuminate/pipeline": "^8.0|^9.0",
+                "php": "^8.0",
+                "spatie/backtrace": "^1.2",
+                "symfony/http-foundation": "^5.0|^6.0",
+                "symfony/mime": "^5.2|^6.0",
+                "symfony/process": "^5.2|^6.0",
+                "symfony/var-dumper": "^5.2|^6.0"
+            },
+            "require-dev": {
+                "dms/phpunit-arraysubset-asserts": "^0.3.0",
+                "pestphp/pest": "^1.20",
+                "phpstan/extension-installer": "^1.1",
+                "phpstan/phpstan-deprecation-rules": "^1.0",
+                "phpstan/phpstan-phpunit": "^1.0",
+                "spatie/phpunit-snapshot-assertions": "^4.0"
+            },
+            "type": "library",
+            "autoload": {
+                "files": [
+                    "src/helpers.php"
+                ],
+                "psr-4": {
+                    "Spatie\\FlareClient\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "description": "Send PHP errors to Flare",
+            "homepage": "https://github.com/spatie/flare-client-php",
+            "keywords": [
+                "exception",
+                "flare",
+                "reporting",
+                "spatie"
+            ],
+            "support": {
+                "issues": "https://github.com/spatie/flare-client-php/issues",
+                "source": "https://github.com/spatie/flare-client-php/tree/1.1.0"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/spatie",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-03-11T13:21:28+00:00"
+        },
+        {
+            "name": "spatie/ignition",
+            "version": "1.2.7",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/spatie/ignition.git",
+                "reference": "2f059cf42b48f7c522efbba1c05ad59fc2c1a3f2"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/spatie/ignition/zipball/2f059cf42b48f7c522efbba1c05ad59fc2c1a3f2",
+                "reference": "2f059cf42b48f7c522efbba1c05ad59fc2c1a3f2",
+                "shasum": ""
+            },
+            "require": {
+                "ext-json": "*",
+                "ext-mbstring": "*",
+                "monolog/monolog": "^2.0",
+                "php": "^8.0",
+                "spatie/flare-client-php": "^1.1",
+                "symfony/console": "^5.4|^6.0",
+                "symfony/var-dumper": "^5.4|^6.0"
+            },
+            "require-dev": {
+                "mockery/mockery": "^1.4",
+                "pestphp/pest": "^1.20",
+                "phpstan/extension-installer": "^1.1",
+                "phpstan/phpstan-deprecation-rules": "^1.0",
+                "phpstan/phpstan-phpunit": "^1.0",
+                "symfony/process": "^5.4|^6.0"
+            },
+            "type": "library",
+            "autoload": {
+                "psr-4": {
+                    "Spatie\\Ignition\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Spatie",
+                    "email": "info@spatie.be",
+                    "role": "Developer"
+                }
+            ],
+            "description": "A beautiful error page for PHP applications.",
+            "homepage": "https://flareapp.io/ignition",
+            "keywords": [
+                "error",
+                "flare",
+                "laravel",
+                "page"
+            ],
+            "support": {
+                "docs": "https://flareapp.io/docs/ignition-for-laravel/introduction",
+                "forum": "https://twitter.com/flareappio",
+                "issues": "https://github.com/spatie/ignition/issues",
+                "source": "https://github.com/spatie/ignition"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/spatie",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-03-29T08:48:34+00:00"
+        },
+        {
+            "name": "spatie/laravel-ignition",
+            "version": "1.2.0",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/spatie/laravel-ignition.git",
+                "reference": "2b54c8c66f2d280f25e15064ebe3d5e3eda19820"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/spatie/laravel-ignition/zipball/2b54c8c66f2d280f25e15064ebe3d5e3eda19820",
+                "reference": "2b54c8c66f2d280f25e15064ebe3d5e3eda19820",
+                "shasum": ""
+            },
+            "require": {
+                "ext-curl": "*",
+                "ext-json": "*",
+                "ext-mbstring": "*",
+                "illuminate/support": "^8.77|^9.0",
+                "monolog/monolog": "^2.3",
+                "php": "^8.0",
+                "spatie/flare-client-php": "^1.0.1",
+                "spatie/ignition": "^1.2.4",
+                "symfony/console": "^5.0|^6.0",
+                "symfony/var-dumper": "^5.0|^6.0"
+            },
+            "require-dev": {
+                "filp/whoops": "^2.14",
+                "livewire/livewire": "^2.8|dev-develop",
+                "mockery/mockery": "^1.4",
+                "nunomaduro/larastan": "^1.0",
+                "orchestra/testbench": "^6.23|^7.0",
+                "pestphp/pest": "^1.20",
+                "phpstan/extension-installer": "^1.1",
+                "phpstan/phpstan-deprecation-rules": "^1.0",
+                "phpstan/phpstan-phpunit": "^1.0",
+                "spatie/laravel-ray": "^1.27"
+            },
+            "type": "library",
+            "extra": {
+                "laravel": {
+                    "providers": [
+                        "Spatie\\LaravelIgnition\\IgnitionServiceProvider"
+                    ],
+                    "aliases": {
+                        "Flare": "Spatie\\LaravelIgnition\\Facades\\Flare"
+                    }
+                }
+            },
+            "autoload": {
+                "files": [
+                    "src/helpers.php"
+                ],
+                "psr-4": {
+                    "Spatie\\LaravelIgnition\\": "src"
+                }
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "MIT"
+            ],
+            "authors": [
+                {
+                    "name": "Spatie",
+                    "email": "info@spatie.be",
+                    "role": "Developer"
+                }
+            ],
+            "description": "A beautiful error page for Laravel applications.",
+            "homepage": "https://flareapp.io/ignition",
+            "keywords": [
+                "error",
+                "flare",
+                "laravel",
+                "page"
+            ],
+            "support": {
+                "docs": "https://flareapp.io/docs/ignition-for-laravel/introduction",
+                "forum": "https://twitter.com/flareappio",
+                "issues": "https://github.com/spatie/laravel-ignition/issues",
+                "source": "https://github.com/spatie/laravel-ignition"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/spatie",
+                    "type": "github"
+                }
+            ],
+            "time": "2022-04-01T21:01:58+00:00"
+        },
+        {
+            "name": "theseer/tokenizer",
+            "version": "1.2.1",
+            "source": {
+                "type": "git",
+                "url": "https://github.com/theseer/tokenizer.git",
+                "reference": "34a41e998c2183e22995f158c581e7b5e755ab9e"
+            },
+            "dist": {
+                "type": "zip",
+                "url": "https://api.github.com/repos/theseer/tokenizer/zipball/34a41e998c2183e22995f158c581e7b5e755ab9e",
+                "reference": "34a41e998c2183e22995f158c581e7b5e755ab9e",
+                "shasum": ""
+            },
+            "require": {
+                "ext-dom": "*",
+                "ext-tokenizer": "*",
+                "ext-xmlwriter": "*",
+                "php": "^7.2 || ^8.0"
+            },
+            "type": "library",
+            "autoload": {
+                "classmap": [
+                    "src/"
+                ]
+            },
+            "notification-url": "https://packagist.org/downloads/",
+            "license": [
+                "BSD-3-Clause"
+            ],
+            "authors": [
+                {
+                    "name": "Arne Blankerts",
+                    "email": "arne@blankerts.de",
+                    "role": "Developer"
+                }
+            ],
+            "description": "A small library for converting tokenized PHP source code into XML and potentially other formats",
+            "support": {
+                "issues": "https://github.com/theseer/tokenizer/issues",
+                "source": "https://github.com/theseer/tokenizer/tree/1.2.1"
+            },
+            "funding": [
+                {
+                    "url": "https://github.com/theseer",
+                    "type": "github"
+                }
+            ],
+            "time": "2021-07-28T10:34:58+00:00"
+        }
+    ],
+    "aliases": [],
+    "minimum-stability": "dev",
+    "stability-flags": [],
+    "prefer-stable": true,
+    "prefer-lowest": false,
+    "platform": {
+        "php": "^8.0.2"
+    },
+    "platform-dev": [],
+    "plugin-api-version": "2.3.0"
+}
Index: package.json
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- package.json	(date 1648547424000)
+++ package.json	(date 1648547424000)
@@ -0,0 +1,18 @@
+{
+    "private": true,
+    "scripts": {
+        "dev": "npm run development",
+        "development": "mix",
+        "watch": "mix watch",
+        "watch-poll": "mix watch -- --watch-options-poll=1000",
+        "hot": "mix watch --hot",
+        "prod": "npm run production",
+        "production": "mix --production"
+    },
+    "devDependencies": {
+        "axios": "^0.25",
+        "laravel-mix": "^6.0.6",
+        "lodash": "^4.17.19",
+        "postcss": "^8.1.14"
+    }
+}
Index: artisan
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- artisan	(date 1648547424000)
+++ artisan	(date 1648547424000)
@@ -0,0 +1,53 @@
+#!/usr/bin/env php
+<?php
+
+define('LARAVEL_START', microtime(true));
+
+/*
+|--------------------------------------------------------------------------
+| Register The Auto Loader
+|--------------------------------------------------------------------------
+|
+| Composer provides a convenient, automatically generated class loader
+| for our application. We just need to utilize it! We'll require it
+| into the script here so that we do not have to worry about the
+| loading of any of our classes manually. It's great to relax.
+|
+*/
+
+require __DIR__.'/vendor/autoload.php';
+
+$app = require_once __DIR__.'/bootstrap/app.php';
+
+/*
+|--------------------------------------------------------------------------
+| Run The Artisan Application
+|--------------------------------------------------------------------------
+|
+| When we run the console application, the current CLI command will be
+| executed in this console and the response sent back to a terminal
+| or another output device for the developers. Here goes nothing!
+|
+*/
+
+$kernel = $app->make(Illuminate\Contracts\Console\Kernel::class);
+
+$status = $kernel->handle(
+    $input = new Symfony\Component\Console\Input\ArgvInput,
+    new Symfony\Component\Console\Output\ConsoleOutput
+);
+
+/*
+|--------------------------------------------------------------------------
+| Shutdown The Application
+|--------------------------------------------------------------------------
+|
+| Once Artisan has finished running, we will fire off the shutdown events
+| so that any final work may be done by the application before we shut
+| down the process. This is the last thing to happen to the request.
+|
+*/
+
+$kernel->terminate($input, $status);
+
+exit($status);
diff --git resources/css/app.css resources/css/app.css
new file mode 100644
diff --git resources/img/BCE.png resources/img/BCE.png
new file mode 100644
index 0000000000000000000000000000000000000000..41e8f500d9f7a501807a8d264f06251304e1bb28
GIT binary patch
literal 86508
zc$}oVbx_+~w<sLk-HStz;!bc<ytuo&TX1*x;tmB`TnZF-D_)9wp#+K-E!LYp&-vba
z&Yk<mH*+(;OtSZ0YwhKdNt~LB92WX3bN~Q=r64b@0RX^V|9zt(!*(W@w&P(RaGn}+
zZvgc(6i2WHnwz}7Cjfvw{Pzu)$%;)503e##Yw1Dsl$C@nU7b11tz0dvIeeYn0DoVi
z625NcmX6jC8VhS%dlxaL^R7N78ha}-CS87IE@d|<Ydd>+e-CR-e-$lDe@9CpD<%nX
zbWvYn7y)N%h&hd~vy+Rbu&)@?KXip*-~VoNGQog6tZaleq-FmL1hx`mvV%a}ggH5V
ze0(^3csX1>Y&p4wgoHS`csO}@*kKUto_;P6b6<8BPkI;ybeex?NLzbadf2-`>|I@G
z{;tg}T)iM-OibuB|3w-Mfq2+k{D-=WCx`hzJ6?ZLIAB6^np=5ta&vI~Ws8PJ^j~;k
zu$AZE<-eC`TD$+V_;=-G|IbZs<{qBbT7GWUVoVy=o~~XVmex%FLj8w`l!vuB#M(-n
zhYKbF7auz}w<zcTar8eCWPBkCR^q(e=0XCNR=n(dLgoVOeAa?o?B?dyHta$+*8F^y
zLgp4cAm0BF`WNMYl99E5ZSnK)^9b+@ar1Et3h{%u{)6z(;s1o!a`m#b`zwk#&ws%F
z_ujvfbN(y(ze?f!Z(8{e#=k22_w2u!<^R8_tStXyCO0n+r+-|)%97LC$=cc41@hNO
z-2Y`HD@$RBJ;cfSf13#G1o@vPf{_$<GIy~RWAbIUvbHhza)L04zmbypzX<YQxT2i@
zjqLw}7;gW~ng6=mKQZ;!(O?HK8F>Fo2DiUAdqM16J;W`{J<MHbEUleIIse=4{}U6i
z5d6P0;cM>p-@F|L_OC0tdT6=2I*Ch}yLg+6a{iy&|5sN2-GT-2->?4(df4JWX~WtD
zmMc79Ndb8$#1R0X0Vqg=wR{Us3jG3sUb%lHymU>EHpYOt<}NuHxN3-zcwn9VUTvKb
za^qPqubzI#W#i4_8ec$7jR*6G#L&<$UtX7$&|vNWc&9S07&E%gyQ+gjw1gE*6@qH2
zMK*Jx&;Cg{XVpJdIy=R0f|6&4S_4!BC2_qHS;+M^%ft3gsp)f(OvsS<3WK)WmUNiY
zt^SNaY17`)5@PHASQ)wRrm8jA(#=?=Lmd?Ey2Yl+R1pzRj!*=GwWt;N8o!q2I0`rV
zY!u}PBEf4DcmmX{I~>M}FlMg~kB{mn9PtnbWJ6T5S;uI>Oh1Xk1RI+TBX-oLOv#XV
zgl>bxsBoT48lFko0kc=B)xJZiw)(m#RtmKb$GC_C$<-`}M<;H96!?%bj$IG}YnRtJ
zcI%nsIA(hbT|8ZQSZE7LF=OEb4Mh@N2KygbLK*iTUM%zbcjXK#T8qmxsDosub<-Dq
zV#&$iaFuVg$jOIaOIc>Vh+s#BO@JPQDaJ}$E09FTg#3d5b6Av`yIkMn5J#Dq-0hrd
zr8jEGyalCB&myl-!#{8YiEZxqJvJ+GgUZhIwmuF)-5C!u+;`N5w|eW?*>NcYKOXQ9
zp-U~>X54kw(-+Cp6v>A|{d~2Es;k4Hzr#;A%KECv!!rtyz_|QUS<;Z!c5`3I)Y8kf
zGSkoaGh!@daa)U`DR_j8+goRBWMkIwgwZ{DTOOj~*@Va8eJkzZZibb}%Fx-HJ$yuU
zu{Fbdn3U^l*@%T7$PEyL*YXP!ezTU}-ro3%UQ}0?FVAMYwZ%;uF%rt61S&u(#-nLs
z*A|u+tXZ#BV2VHj7bjbv&ggtpSzC}+msZRWiL%sJ9?}Bse`z{-Q|cXVXM`9g*Ow%q
z`7lb5pweGn-Z#{dv+k@)fCzV5SC?!ek>YZgQ;-*K&Q@fqX&X?p=b#@>L!4b1isQ^a
zt@M~$LXZ%z%iq|oh(ba94o7LtQFRZ5T{k^luk{Hbw4Qv9Z#vU*6|7ANQv>_jF#+N(
zmGP;w8rhnG!d#rpP&ujIYQ@0EENmtC-S<5~hK2?-acBGivEhIQTX&r?(OFBG?PeK2
z=Wv>hG0YxAR}ls<6ETuDkMT}{UMKu*z%-l>>lzgQ;&Jz$V+460Sq@hbhnPeN=0peM
zWnr0<d?4o=@2`$$SN_H|cAT<1zpD*Li5Kvl=mbIGdS!af*7RT|hj`#Cz1FE*2@$jS
zj!hHKl(D_MI!A^laq7>n>b`!INutRT*D+X?pNq?*MMu`TvBO2O9aFGTPVqK8ACO78
z{k<cE9c=2XWSo3xEX(eI*fflXNF~RnMlYocSH_6i{rW&fvs>jLFQF{<c1dTMWsPL;
z{7UGTb=w<NTNJI<&LLx%*Wm=3;0Uj?wy&g@5NONoOy?e`FjWcRc_#18;bSf-O~JJg
zaH@@H`)6#Y-0HN6YlqXk%CEm|ix(#V9!hKDAtBUc+pAGx6Hbzktq@(o?$KResQrH9
zPm7A}iD{h*Oso8WH*EeTe#_drJOqZahzmn8*2@*a^90zTAsZ816;#p^#?j=r*eHyd
zcP33+GrOwb#&Bl-I)cd1REGoeSUszpxBR%<_ux@-dJfoB6t7Cjg&8X=Q{@@C1-Qd5
zClr7hui31A{nXZu<&Z`Bi!R*}D2yh&E1YguKUGNFFGO@zDcRp@;)#IF$XJE$WX!wD
z_GXt$c61asZlq+I7k=>!H0&`}+ARde4b4?84seF$5hIzbsmzWAq>q~1cfO+ad0k4;
zgG56ou*f4$v9xl+Bq+tzID$+FRF_G5kk+daMg2NJ1QX6JFCf|b-$;k6e2!+zg|QxV
z;1b(mSgr>5H-Q+-zMo7}sp2L>H@6C;nD^~ATReOJrx2>FYWpRh0Fj#nyyGt2kgLkH
zXFEtlIB~-3Q(m%uw$ImZG}8I{;L-~JQaapELU{oecCe?UnkCSrp**YOrO4$kx_Vak
zwg^mYQf-09sZBjm;oJhoc)Gj@Fx1r|Pm3|aZMahZX=CrbhJ1xa+nuYUy{u-5K)oj-
zn2!;b!hna7yn)qWM8-2Hb%4s8^}>RKHVh+y>>;i3%D&nJScYahrYrV_#b7jIVWV<?
zjipSLi-4iX`=Vi^h3Q+qA-xZ@b)6TYDMUSd+XXbJj<5)Av%@;nTXI=As)+T+_uQQ0
z78gPbDkA=5(0?VW!+Bm#2MVWQlL}YiT39SAEnh8MtRdj`Suft?dK)lJl3;CYMJ0uc
zNDe$iL_mHJhVVTWCUjIH1dN5{w7N9nZ`|4n0+b@(WU(99C>Sd88ib!||0F<k_mvD+
z(F@<htUdg;d)G;Spz<(P!|i0vLLtkT;eP7tUHbRdlQ-ciY^bxj&h}I!bp1EX2Wfg!
z>V~<7^6Bz2ZiwI&n2b3j>Recs1u9AiKQ*WJ;(!+J`3iv~yM9HCAMg-&QDLD@7jFgg
zFM|&Fo7V>uTIjnUJoiWiX_#Q-3t;5mjWqn!+p6fYAkCP_MRL0V9(;r#Ywk8Wj(PqK
zK%oH`6;c?L$TmhwvAQ$TQDDo#7o(QdC1WgZRoj*vOw|r=QKnCb`F0d6VBC6`R8s?z
zu3gDlp(0`jFphJburo9@ZHm|E_OAT@g@IKd02k}3F68*)qoVFqONWs$EL$CDfvWA8
zPzROe=g{QC!|46_m^rkX5h}0N``<r5*U%maDd!VkjkH3L?Al-vuo#B;%r!=zZ*i8@
z_N_bz8dJyCCJ|7yIQjUYtdItEnHDUOX#eZz@O*AJok$ovGPLQ#^D`1y($TY}#-g6Q
zGG{qLLIiMq14+w)`6QA29FFD&MI$_jyczzp1V0u4GSq*+Pw3&bGmD*bYQH}Z3)fZ}
zu*B332;rGhI4|%lwqt>oRg!-su-Rp}U~K`Gqy&J6F?jJ-W-{3#0`;MucY-??xL1sQ
z#s3@%!w%70ppzN;p4LU~CArmQC95NT2a?Zm9o5W0SWtdL#J^_1MnMpB7B<M=n9PpJ
zu$kF#Nf840ic)>z>&REFm*X~V?N0fJ8XE9WkyL@tHm4>&z~bx^I~GWExWIoJE&KyN
z?1WG-re@#WU;-Nu+()e}?t_vB(~xEZOlz&th(QzPB{d_GaxDRjEO{>RexRch(DVRJ
zclFPi{5)B~>rMw{gmDn8Opb&h2BFbjAZPh>K*z8_)IsPuXRho6G+HCZX$ug_y^IVm
z%U1}g?wDZQ1QfIf{DJZucKfoOEpAJD&8b4dKJB3|L;#P@<TznMPo892REs7Wu&Xa7
zgpd5t!P_?2k4i9p`)|$VI_%AHd<APZjz{w;0mAEs3R7s|dRp>x<fQ6cjoq3N%bTA*
zv5vSdawWn|;eFW4xZ&n!S5<68gH_6eX93i3&=f7$RSlksGN`cAQS&Rnr(he<!p=^L
z`k4dfer+xXxlnsFfwaGjdcmRjN2p_!llBu{>dF@Wn1t(x-q67yuPP5x-`aAKVZ;5k
z1+F!WA`RgLW)o|3*BE6&Ub$+aMp7FeK)zBV2R+7EqMkq=#^eV<7?Y7pp~*!8cik&+
zp8UZy`=X{Z?i2=w1|{+w%0anOqG^(#pJwC!M6llLA1hM=551E6$q$d`@Gd&3EvR$c
ziZ~l|7(@V(<?6!(Xv-<bh}!CnWj?DGeOTc%vH0?H$E3v$C4CE<TOR#|yDR{jNgjjz
zd}GdFUVu{65G+a7Q!T&dbBdyg^^ZpEQ8{v%pW8YKhFb|s&E@rZ+Zw+O^JFXLNF~O-
zho-_gREv6h;ah4Ds($*;mH&=9p+_Bk><}vcwea6&W2<!F6!M9jxZbZ?`>FB>R=<8u
zW>eZ>a-)Q%U7`&WC=90!Yk}YaxV}{44J6_XD8UUeh($D6Tri>FXUPs-y!t4y+&G6#
z*vWPK`4V$;@~T<y1WVk9MKj-8T2z111}}I?TX4f3KxKbTHGJ_hM&B|*@v`P|`&(S;
zOd4<l0?dp(l%2;N9{oMI0j)4g(iBcxG|ymKhK|B&F)0OA)2G79;{z7)wBf^ROYsI<
z*&S^e``GPlnph3_ITE}u!MXMN@(E~fY6qDGtR&jmS0}6b@f40~jYl#1X4?a~smY2Z
zSqj^FLYn$(;(2=f1*LA1E(B>%!x4k#?JkcGT|AdN`Dd**jB-V=nh+Kzvk@fusN^8R
zghr}-={dH|LW#*D1!bDjEQPWxg`@WnR8wt2UoC4J22MrDD$ELzy}A6d_*mDi#}|GZ
zrkReNxvV%$h180;h@S)mbs0=e8l3GVE#rg$m{`=+503jt;-+>?3SX6ci_lL|%YtD_
zAVXe@ILOhgM>p6VJ^3ZN_>&W5isEel8)37T&IC4JQBI0#G_LArx4Th!f&39IUx93?
z%xgq->eP~DfDF&va_N9()Nw&2LJZv*VJ}?h_PJcfEOcfd{=@QH?~=>m4a`<mw%c`p
znt=iiA@Q0zgBbW5GX6EopgVG>0pyb)S?FVe@$!jb*w2S11WA^R0WD@NpUe}<y}vxC
zB!X*($je1DS&qcw-$Z#Msx!#X)kJPv)_<v)k4Mg_`6b1HMU!Do2FoeZy}~4`{_MdB
zuRI+LfUh|9ums`#!e;+6yDJVn<e*1K&T7@JBEoX>(Z<#i9CiVq!aRD({E~bw=dYh)
zQ@ui-)rLNO#VTRheNPw9dUO@#t)-xfdt2(7<Vb4g$}_iGR{j>lSXcMQB6ibpbaLEB
z+-CjkGf|^Tyb%h(;4U8K21PiFF7*CStMWkKrb(f|$nSBIwduO|voX+*bICNd;P5l}
zYNwJusR)gVgxd8Q4{h~13QV1fcuKB>ZAK|tyF8uDJ&}qv3yuq9;Rv!rWG;LU)!6TG
zz!@QzG6xH6Kz1KT#PL}cp7L53>rDVe^u?4rQOTW@f`p4})Y2_+XouAGg&c~f${x67
z-J);RvI;-B7U(O!O`wV^O>5Kzy?&_CaKNoT>MI(X))oTrA;Dh+^qf&P#!9n9sR7}?
z!L$K@w6&Mj^i0olTPaBCY9ep4lR*Tl<~Iw#x}M0J1ALu^Ja#x%16Tc8O8phv8{tYz
zezZ}QN1))5$@|eRi`0sr(Zke#x<c=ap(6td0c9^KRaNeri<t{-n(9gzK_>e`n2G2I
zA!ELg7E31CEJtW%xcHEK#2{h+wd%b-?9Y8H4VCJcW(Sk>^UUAlq_vaJk%PpH?a(-!
z%#XD_4qb|fPt1^wr|lsqSMWt|61M&KcX2{oN3+lM;*@4y;yiwQL}~IGVqUsgs`rs7
z;<@PO#qV{G3Gc&cEanvq28B(kwEFxSP4C|Ur3|QRo}i2&Voufm5=xBpeK&apl^fM4
zrF8%NhSo>6`sf<@^R_N_PRk@haLD2tSf6W2r`7k{qeN{gVvDUakN41Cg`~E&D}Op9
zI3?g?xTawA#nq45y%*c{CRe2qso8d}gvXyVdde{G2xN)zG$|YrJpYu<gF13r>==yW
zrq!2R{&3~&7X{U3bTqTuFxteKLi>S}Y|RZ~G_&(X&zm6vt*XP=0ZH0^mI09-+6m0f
z*OtHSjMZEF<TCvka$4`bORlzU!wrBnj}HNz^MqWize9X)uxkx<)|uZJ(!{j)&U~^H
z<0{?x9R^r<Deh7jChwiN&5I+v*xR1;{my_lEso$SOq<Z6Y9`VY{DML@d)n#~cj($+
z@*K(LuD57urk#RZa_#l<M3>UifHtM|6<Ye%-{PZ`?I)z}_*G2~T?LZOYqMF+(?LO+
zVosd=%Uj_{s9&wgmaZD@^Q>UqNNe`#z-5gwW|*E85V-pz!s!Nsevg2Zav4_{0GH5(
zt?B`Kd_{emG$jk~5~Mde!eo0PL9Gx9tt%u@?X!?jzIY18n+`^35UXwz^zZXG8k7j?
z3l#79oL<D{7*~PJkV{;`P-3~*{4?&i9^nf2Nl}g`Ma+R&ql3vwKP1Et7_Rm?c*H1u
z7#~(v+};dIY=6QY($r=nYUr2Z{KONr4pq^Z+^-GE`txAfDmiuK6ks&Uj-&slryP4`
zqT$(SB*eMK`Ek7-fnw{Koim-xF{Gy3`t;(E)ccgYKe@20Da4MHelH{8dzvb)N-5C;
ze556XaJZZCT!#Km|2r}pp9BYyUbuxJ?VqBiy{VZs=58R+$C4_BA;`w*W1z2t4{o_R
zTDdt=O&7uaoCIcgi|-zxa%0fuiHgQLx7zQ@-3l<=h|rP4{PsYbaNnsp8jdLIcY0`*
z`!&mL=JS@+42u@j|0{{%k_Lm=JZfqQXQ+$YiUgh6G|zPAYx_lJ|2+^kTwh=HsU0A7
z#)^vwd)c{{f{U}C)jykEZ#R(nJ;3Y{w`h%WSUH6)|M%}BG3AwRy66RgNVZez3xip6
z&LtqfpgG=k+G}j;&MkzY9WJU}x4YJ*V+y`$z!+S_-kIF{c(J32=By94@^kE|GkNU1
zlU)U9x$82nlFm9mkVEa*qV+^gT9@4rh=+2H|1^+n|8}PCeLTx<svOI6^F~q}dfk8-
zz>eYXGiM-OQpEUCsI+0)U;JPMOcia8?!h?8IE5q5x?5*@r?cqBq}pU%SIx{TE2w2B
z$0h)|)d!~Ua1-;eZl2O%oK3N!IJC1YLnt*%ae2HbEKow*vTWFne>Qdp0nHE8u%oOd
z!?%nXr6us&>gkN9mwvI{h$~F9JQps7#FSpHl7AH+ReRn6p(sOfO(WCb{KASI_49FN
z0|=wgPh<1mgwOPk6XFzC57n#@c<CeRv>`Mka&(_|k9{1drm#!I6*1f7s-&PdKPK7m
zU_Ft-9Pu)q#%P!$cTYE9cv!D37DPEf^$!tQ|1H3$BVq1Z{ho=K03X5#I-%Zes??3x
z9M3a_^Un`MSStGz)iC33hlX6rve?Hg{fcJTWW&-WCN0$qe1>Ub#z<o$HOMB2SogvP
z1k35La!Te^u5(1z2>Q-Q;z*4LouT*iMVv<axpfC4_T+R#d56Bf@GB>0`9!|~o8j=3
zp^fLMq5M60&JnrEq540>Cq86Hn@iS~DPVF@THwT_O*CqUF27R1cb7ir8DlMy!VKq7
zL^gO5QW~+5h?sB0G>)l23!oS)<;@ugoA`BVG*rHb)4Ki87}@Jhc`hNM$-iy^&>OW&
z2sBG}4WurAt;`?4TOCz-%n;@6$$F$MQ~E|^PylkULR0vIBIdV$K3ocxGj^15!8Z+Q
z;f#TmVd>2T*qEXhFpRD{m|eRt7e92CH)Brc@EmbckL#Vnl+J6u=76vG>;7q)s^Ipu
z#LJV#P45dEk~@HlPk{By-HXf{;i1M(>YDF`3RtmB>7<m!{Y7E4Co8SwUANd~zE+rN
zb`*JrGJ?bAaA=*%gYHxW=8vohVJKPcxqqx_GbU(sqTra*^lIzbjjmwB=D{hqtu=7U
zTX#{vvN5TG%f-v*$hOK}7&%5RXDde28xs|l!X(7+#fU7mKg*q*TNzr<7M^%tMWAop
z`$^nlay~tOvG2do+N+(bOKm9I4%wmcK3Pl3_C6n)yFjfR#ItH{y}4$3g@F%2!BqVv
zFU%EvDKFWcWKeI%hP_#F`981SGSH#=?CM9T(8H&Os>#LFeJdpkhYXhXK^wGnQ;+Y=
zPY$~>epZ1NX^H-zjoa980`axTKRu@5^<B1)%iAu`dZo;7ZQe_?>kiu&-|p$A%!Ukk
znHA*Q`xsW|M0w+3Vx{c-*bJ~m3=ZUp)cPW0%Tl&W3-*c3Rh<>ek($Q?geQ7&N0-u5
zc#Y*U;wLQz#TG*SVB@S%k);V0b~z^N$r(@2A)EQ*Sr%rm+r(CGvF1lU#!4qG`A&Jz
z%x;Fn_4n)9`^$FYv&e==Qp6y;vL|cito_R~SHH_9a_#pl1!YoRM!34{zu--s^cCS%
zDT23=vnNO<gf98coo#S>m@*XJ8|y9p?xwoe!U?3p5v@koPiHgCT?&5+CF*jv*8vTG
zQ#7%OnrV~>4JVH^h*^VLK2qV?2F}E!Y#$E18+sgh!9MosKw&}kFUqG<yNI5>Z@Q8^
z@)J^%V|PrDX<~Z5;yfLMdC9N$5}2hdJ|yziAPQ3G{G?rMnjG=;oQNZ<ArK!dm*1jY
z!=@nb{`xQ)4x2(690`mCj16#M+I2?PW<~U(jtF7+HFu4mMqoJ!fvKBT66%lplm09x
ztW%wH-;ozHlb-A2kRrzvi_+{BG0E_uoNQM#e=5S#|DdtWO|x@TjJ?yhl`(ACHnTO}
zIp55PZlgt4rR}=!Sod02;ar`txz_l5YDw3yR$`1C_uQJ*Io%2#7gK!`rsKqchx~hu
zi|Uz5gV*ulRt`%xlYr18ik^N9Twk~XEAe`AVUN6Mqx#MfAvS?}74wO(Y>bYW42+PZ
zbbBh(PD`SfYYkq&!j_kXhr8726*t}w?p?D?m$oAPglmdM<}Y!4F*w1q31crsqk>z7
zk*Yt?tM^W6(BZ8VqATqc-_9jWU_2R3u5~l@RI^y=cS)D1&dXq{pkA;Dt(;aGY&j%r
zSkqF(z0oF=E7!2rmu1O}=2qRJ`GYxonJPmS&pfa*wRPX!PtHN~Q^-BI1wk>>zrSXv
zd_Pqw-?UKqSv~ORm)I4x1aQ~X)i`03zD1x%YA7Zvvd2-#0A4t-`sV8L+19qvOA$N5
zQWSa24>Q@Fl$3xAG-K}eF2+Rb+IyWIy=aT!yBxJD$e{E}6i1&&A^?mV$`;dEh;qU+
zQgrRf?l_Ur>t3olZGD@Bs<&Rn4IK_!oqME>_O=?D!&3y#?YEp~jk<@{j?42#h9n*R
z+3g48OQY_jeG$f>hF<+>Z5y+4Pe2H*HzR(Ol`(o)lluHni+~&Th3;ao1gH3MH4mOQ
zuYya#SzIq*uFC)u(rO2It2<5-v=|f9o^4X;O@-?=Y8#a5Y%<`R9K%8sd{)-ad8GXi
zNNBk9Hl2^MjA?RBHXL!&+T&GB7#<vJz=<)bFnqsNxHFxhXi@0$p8Ni3Ju?r_(WlcJ
zG|r11kAhQe|GHm4ewd+kAoTy7LEH*@fGcQo-%a&noTP^h_2v$Fy+Fo~(_<dd;h&@I
zT)(Ov@nn9vAgbAhMnHW(G$&fr$c2$$8-h6*^QY<Zr-}8J4zA9BA9+YWgTqabzQ4xS
zRL5o)h>u6ys`cL%aS5V^=_zSs?yHrA(zGW9P{D&wTN$6hs`*5B#o%CalKYho+j={E
zzb)sM<Lcxe?V7Ut0Tk~Y&-S{3B0SFMXt^w>4`MhqB#(ig)@v0$B96IRk5F*QBrvNs
zF^Q?!!P0^$^&FWILo}1``tuPuMQAuG%8DnhK&n)YB6?98Z06$U=xA@E#f`FZYN)@E
z(Bn+DasNW%esD0rzzb9R18G&ov|N5o_zXDhOG3wQK9nNqO&*xti$m;5^p}?4Ah$Yb
zn{EepTkC_ps=)747)CpO@?|Y0%DqVAENOZ{pl?aiD}!gX%;{mAMgrj?eYiv1HQ8-J
zwtdsL(;lB&-^|9WlHfZTRIFF6Gz)NESm_&zFz=hlSSV2Kehw>1c`n;e3)P`smu}M%
zPJ#$vj0{K%$Y`e~t^WC?5FYEK60zv8>m-oiOV@Eo+m-g3EdSwj(@6A112_L+5A}ig
zrOSD<%=|bDWU?~0=h}tz^a}_7<#Tx_!L<X{vFO!rH>o++A5)XG7x2wAm+ldP3_(=Y
z?;FIgN$Plp2t?tjragkaIX0DTT!j^{SzaZ8?VFmqi)9HBQNsb#F7CKv+`1UBQJ>g&
z4u@OC7(uB#hgy6t!I1iRAU+w``#ZVt5Y?atyaI_#R+c-=N&Ka#GWTd?R4Rhi(Gn{J
zK=05^`~LQ!<L}6Pjt$dfZo#Oz)t9Yeec~`|iFNT@rO_sa+G^0Fg#ul^q>M$A49-N;
zTKlM`sQA^w;^!Ogg&XHTIVjW*yJ;XU^JkEz`i`LwdtE{f%kd#<r%$&xii=knO%9aD
z(ikPq-<i3sb~@l|hIL)g;Zz+Q0Unio{*|gQ{E7IvdQ6mVIxrl1Qv8Zy47{`IaipnT
zaODy;kGrls-uD8*dg*R~P1VfrcW%eJ*s1r@pbU|FH+%V}=v_ItJebySp#$pJO@8&8
zr^>fFkA5g15s=Uw+T%V_uuJKtk*Yt-Cqq*7j^)@0f?NLuq%EV0mYnH*-J=<gBcAk$
zZ-eAIlK3)qWXFBy!&V>OE_|yUc;(Rm9AXnYRjItzCeY`*_^7CP{}>GC^Ae{_sDA||
z30#a38-mY!7JgXAVmqIkTXrewladRGN$wRu5Vd{xd1N{U7(b<6)`8mnj7>CX4C}U`
z221HoL9c;_{B%X%ah2UreOGnGHo@L4WK|sy{j4;V3g=m4s2>%D?WUdVf|pVhJ%4Lp
zA%^34PZtBi32RUw(CK-!WEu?WFevye9&=o;V&>csc4s^$P9Lg0cO`ySN}8gE=^I>}
zaal(}sKDcFL@7yo_fWCYtfT#o?4M2&-0*rRLloX5p#5c2xxfGY&1qr%S0SZ<Zjl`1
zQ3t-3obV#0gjfcod$A?);(D{++X*AGZS;B)w9<WYWBjhldt$Z~lu5IvmRy-+Sa3(R
zBCk=3_DaW_S<6GFEh)r%&yti(c3^TIupWuUd#n(xrIjqFDlPR!7}d;TcD2-gC75_$
z-Wag8y?JJ>Oo(Vjifl4WpkUS9A=5P}PMF>_YFS5GRWtRCA0TgoD2*?g*Nu_jCFdE0
zI+{CXb2)v-Fu&~5|1<K_+g`-t!~gHU0FAYCC}Sse?+p=zla1?k2W+Q34G9s)%Z81f
z1gJ%4!OO>cSG2XBpLM@#I(-~XRJv?)ed;13X;9hR`{muJV#c4RuT<<=$z9E!Nskjj
zj1?uE2XWi@9w+N4IhI7NvO`j=td!8<nZ^657K<lY+;}^GD5Q@wjHEv0yYiSVoLefx
zDqFCp`V<^Xq9F^R?pG3$HFkcxC=*Lq%D+U7xixdvIZ_eZBGPt0Jm;XR(hnI*v%@s7
z9V;X3YK)xhVvXDwW0G2tKzA}~y5L3(lak8_n|C{9-Q*M(ium)H#rjyZ0Ec*enO3n}
z6{{c^f=wOh`N|dKEkMb`$D!vD+=4NC^&`3uPciiSo36kYF$v@PG>lXEIg+p@+?1uz
zpcb+$BY&P;>HhO}u{h-&zu2-^qZyN8kl<-bona#3{`m(I`s^8vxh1lxe$3W)DjJsh
ze%`I5q;=+FCb})rt|2s0Ey<pJ=f!)NY?h>j!rN?~+Dq=gKk6GjA7C!sWfqChm;Q_s
zGLx-}9g67ghuZJI^~b-Kkz5c`k_H(HX^GTa`-&!;(eytV_z}vqu^)!oqvS8uk&Gq5
z(w5Ae{+qLAtCEpo)*R2G;`ag|4nQOEqTW)aNbQNu-nFHNHl8Qo(4IR7dHJ29GNj$k
zcUHp6Z84YZ(~RdAs+<pJ+lh$J7Zsn=d(+q)kM9cE-A4yS*YX@%-l_sMQSYDII5pDk
zUQHiH_XKv+penU|)jZ<U_z0QC(32$%nD2_nB?G5O@9}1Qizd}M++@GeJUV+PJ}PwR
zNlzx%@MZUB3-9N{{o0EB@X|{b(@y!hIQw{v(_iq#rW4DWrIct7bfw1>qx7P}`Kz3V
z;1qk1<sxW;3j$16xbHDJSpHJZ%#;55QI@xihGw$y3w1I2Vqh(cBd5Qu=PORC3-AI2
z6N@^}FR)k5gIlalQEu*0-}w8%Q{ma82B!F8UaXC0zx;;>b2TQxrs1y)oELrvI$xmy
z-$^iF3bqoRD(yj=s)2}{xnD{Trj<;_Cu*_$D2Y<G!oQa1L;j{WS7kxRqmSKeb=rR7
zBCvo;zeg~4@C{Y3&I2XXx=yi*KfXdkJP$DFes%us)f{_*klBL}DdvoOTd59Y5dL>(
z@i@igX`rt-b#(&~@Gv3vj3#>v4=`%6q<fTCNt^a|pr*Mi1n!_!Io;Zd=T_<H>g6oY
zg`KVDNSJOOlm{<v*kFr;U2aYmbh<PJ>CF2I8|rd$W?FxcVR*`00~QCv`(Cj^+>0L3
zO5;oSgQHU)ckWLf%?gW6PM`d!!b)>8Xbv>$)3<8N8eB?^_uieetB($eo_wxB?<VuN
zrA>n@`Fv!)jW*slKUJ88);gdmuJqIhMGWkw@yxpMW>sR$Yeo_ISCk1R^SWKW7N|nh
z4`tXF=Nr?C=GT(oGwGsx6Ydt_OBZ+f5%-oF6ieCVZMnP!hnbQ{i=WgbY@e=kn2=bR
zf975%a3Jm@2$$i0yl%@wX5}d)U)Gai3=5?2e!k;wvk)+Vv|x{}iIh*d!G1kfpOmEa
zlXCz~+*|gCh&>7&PQ!cB%9gc3Z0BaX=coH8Lk&_41c?BvHodBen!V%mx8}#h$Hj%?
zAM)8`+&y&<*=+a#Tw3Ks!q7SX6dD%wy1&sRY{oWK-Wq2Nw4OJrh#@21YJwSjK9Oy5
zTuARIUl0+q<NDRzd)|%_ep|phoQ#~x*BBv{%Hlixat^+~D!!PGXp6mq$NYg)1_(Tt
zdL4MU!S~XsDLv=7^KH7rZ@vG^WoObWmw@4iTQ*kbh1<*sws^hOAsZt|i7YGR)z>%Q
z(A(J@73PjZosy-PM@v^-IkRWz4kxVe2PFH0G4k2M6d5UhceSAU*9Cl)BYktm4(Itn
zflc3kSCw13t-;R`og`#2L94PmH1Npzwi82uO|a3tBPhFX(j<F8l{)L<KKb`)$gH0i
zakUfICL}RR+Ls7v2Xx)qv^j;XoH~cEm=8;B-TgJyJg%jbLA*aB=U)d<N14KjCVC&M
zcpUwH?c}}dS2V#SlBv>_XK4^CrRmgXXqv|RYK-jj{XQl~K%p0{*by@pwRrn4%6`o*
zY0>toHorZ{X#aCa2HT=f;HC5Hr=4;q=(jXhNa)_&$%6ZnL0k9BfWuu0fplRS$^HB#
z+6ftH^`V05cA_wC#vX36C+fpV-B<lYn}W7Rh33Rh(+)mn{^*7?{#$(bNu@oltGCBZ
z{mpMsLQ@K|WqBOY159J0U%cBgS<GJ5o{-m3aR0vDMDGo14^L3}vJ*i4)}Xq`XV5bM
z(ddR9=N8kjBaUls5`;hr5D#>Lx1}hQ)oqzElJGEV7C6R5?;yBQa%bqNW(FSK4C}?p
z&5ac)y57K{ym4Z8Qn9H>fS>&quG85Usx<R}?j6XY#S5NQ5?RwPta;8_UdORN?hNDH
z_&#uRH<9&F9dg4&rfjm)w{6<<T0ITq_B+Ja&F+hVv{_Jt%_H*OhaV?URnW{pIjPcX
ztZ)#8e8mExM+1`v88%wJjT2>X+v%Qr^sjrK@%V_Q>IJbQoe7&3`HI?`Xp!9^Tb!L4
zRWVonsls13B3gleOrj=$KS)v(+Gg=sH||I#nsbUnERgR)_|<y^HKR*r`!TkuhoB7~
zf)we&-$XvWY2by$dsfW}?bOp8an1X$_WO{{TS5W-^whV)?#Y&hyQ<OjdX?TQf&7k%
z+|lcW9z(7xrkrU9bB`$lEZyV+$%kJrR#`PtN!N}x_RW$EmQl;nXuu7;bZFSC6gibT
zaJL34_!Gdqz}tcqP;vxw-1r)sp5>_mP87Y~lD09})?VL|wupy|kHgF@acB;dGQdqG
zf`iJtRFyQ|iwDOPRE88zQ$lZ7(qJrS+LgT3R`C1JI^T7h<Duh%lOG$Kbe;b^+CNu{
zfRto?A*+pu&Nof%jjKcu0IX?fD?zZ~*s4}gX0J8V^<JA)R+R?*oq#Ez+<c>!ZUsaA
zA3_J*HT#*$lUO%KP`d$O+^O*yh=T=-%}YSA>F*$|)f}RSTMGYmrGfL~xw-Y~(k^XV
zfhHk;YvMn5f&l`fh)r6w;07tia*9ra##BE&G;m6XM!PWUrn`FqFdPA8$Y#fQXVnNw
z*QB?I`23z;%6DvOH+_sBi?nE;i)+Tx?cLZMV$1+{@WD1rdMg`yk@!pkcVd|FyJ8ql
zsE|W7A~1`1=QgWz-)t92ndT?=dSmrCuT6#Y$gDljUs?K^_eE}t%ap0$`pM57<0?aO
z<JbA}F7t`bbrgUZZAgU(GzxS)nNO-Dp{wX^@dPW$Vs!BV#V%v=dZXj-!llf~V&3o+
ztrLx|Sbb(`&~Lb)z$t>#UUdH^(<a;8adUe!Jb<>-ATn7cX7J=UP)ziY#M%rzMC3-P
z-}Ds5LamkRjt|qGTv_+$qx5|Vy*U+1meZB%a)y3(Qt{N{E}pQ-(K%xE&t7zbHxx}9
zE($Bn>t6akI33&Gf5l((%M}s-<Ih%9{K$2-!u>6L`m}@8wt2@%;izdY$osFihJ!%$
z#voom=*J)|$$_a|hcbKrC<TWkoY_lUB)n$eQ2B?8Y8FEMXl7L40pfgrYRNJ;fk47X
z12U3Em4L4dtHG+BWM5l3=$fRRb(HorHOJSK7`_pR+U5Zi%22g+cC^LRh>)6rX`uwe
z_z@n5UP{bgN~<z^u;W@m9Ql(%KNYfpX!atzk@kAXZTreLwJOxjQY@LHhoFdT7s`H5
z(SCDbtC<KWsF{Nyb_nxfbeX%;{Gn?-jNt?uM7~0Y4!_W!>G9aYMOI(0s3#V^W{a^n
zwb;h?R?XU4*vh58Q(Hd_n8)gh?->qyDk1VO<R#mkKe6RZKE6P(R6kx9IaA1HSnu%F
z3?!}Iw7jg&ok~npUAY$nU3B-5a~ADk&~g1<yqUTJP9cKzA`yFL6y6J2H3J;;42Y+j
zsudFK&6F2Xr+?7I-KwA|G;<yT@+Xu8@?{wFBc>dx+5x#v*aR7vVj&A3nw18-2%C6B
zvS@yycB1nG2=D@^HRVE`1DMQxz&n(2uRL1=zCAnKmF`N-K?GvN!>TUYh<uYh-(~4z
zLhvDF19r8pE9PIc-nF#qnN63A=$j+htZZ`BE}m&}K<8n-cPy{&oM)S|A2y0_as=Jv
z#bc0~7z-p~b0&ud^*FUe5a6A#rx)<`N~h5~jUqmuSx<rz)<yDQ2kt}5?1g2=m~!qi
z7$&laeriPTfySFL`(|S*D*>WZM4grN>gC>2g4}jdDtx5CL##oqZ$)m6x9>&JyHs_}
z*P~3|H$Ki?pn85Ng!&!)e5yd7y*zlk0hMZe4QP;y0*N^@6i$GItB48WnQ@bliAMNQ
zF9~s!7Y3?n|3>mMn@PULN4~k?mzQ7i>8R|}CYd+@y4i?|e6b=}kJ7rj<oF{_dQV^j
z3S!o9wyjzwFQbus2ZVu^zQF?XWXi6Yzl!-+L|jd7>{IY9m)RVGk^x`Dq~Snyyx1PG
z0{$uVyAU=!r{qH2Ca$za(@{P}Kp3O)0ykeEDggI_^s_}xD<onZW9Rpf<ISii#r@HX
zcM){JT{!ehNP`pO<o>(_wGh_lXKtM4)wN1NNa33^X-jbUmSkj^=vu@Hi2^YgCG<T4
zm;`ZQebXhXkw%XM(ocAkRnn6>IDS8@^x>J+RrNciEnn~Au|`Fe%+PW>cbhY4_)O0%
zT#t=8W=ryY^DWH%ht9H0nSQV-{d^Cq*SK%PKgm35c~n-)6@xlv9RUx#W>B^$<m4LL
z)bR{T36hY}{3Gz<*B{6Am>PvXdXrF+_PQlLfAL1&i)Z>6baR@d|H%tfD&Nn<Y0)SS
zL4x^EQ%Pz748`Nn!F)S~|D@<`h0~p0LK!M{!D%YP?A08*&ZT|ljA*U(8L)MkDsxDG
zjHs<oOayVGr*LhaIR7d|z)flUWLCGRXc(*S#{9hWr)e8xv>qk=1B(0{d1CD-Z7#BC
z;%k=!hdaotfzX};29y>MhoxucEKd*?mt3_0(e-x)hwVVuqn}TEeLEM29Fv@?T5)nF
z2NxGi=&tB}4=H%vr{s0oA<jR+Ot0|JI|ONV^=^jF{9JvyKojM&*p5xeitDQzYL618
z1%qkNQ9d9aXOuX<LKvx?w8E$q=gss1Kc>p+m$h#ZDtvS>XO;heCtDpqqok`BzgJ5<
z3LDpK41U6D>g8|Nw+Vm5Uog;HmkFr<SRX+zf3ObO{nGY9Qbux@rhh|whYYN8m#-A^
zC2UJjQ64&@5Tq1tUrw0X=p{}nf33Dk%$YGww9*xP9ub%B-0O?e7$WcrCxvDAO9E&6
z6BVk@{ZZR`ntbkj>8Vt|>I-J~Rcp(v4<c6JZ8Pf2&Da1^N`?K}bpb%&Z&>~1^et$H
z;}BrzUQlU2ek3fNzc4JV(9C{VTkqZ^ZD9f~7Ew4obsgV%j}>+9xQ%#m8iS!5;VQnz
zR%_5yuxpI#;`aTL>3gZfi~9jI<xlz$(io{-5rO%`*h0qr4@)Z1=eK@i;>OEq6E*`^
z-R$5h3gP)!wecQs6K^e2BX=0PwS?(wA+#>uwuWgE?_zX0o1$~)<;k{>K~LEfgPv3-
zUEL^S&Z`#B&-nH32Oq1->iljG*a{HEZ?C?d_Ws`DBK)Z4i!~%EoB?LZh;}(_d%FEN
zSZMe6-)-+;4fmJmiNxY2;jIbz#cs!f=jTFI(*-`tA$m(*i9h>$Xo%fW>l>|<p92DR
zEnS7LoGS0$ex8(Z?QPtF<`?h3Mc-dyTe#?$tO{7bLRdAzo`5(oY7cpK*XiE?52efB
zgm3jnI_FF^CTmSw@w7P`!L=~KQe(#Y_qea!_Ztch)M64*d&@-8Yf=h3)%obI!YaZq
zh}RG=?q0(|Wt}>`<RnL35>f9(Wr{a41DQU>nf-BcjA`;!Y12e)3Tt9_dQ9hd(mj$w
z*T{^o+Ff}FY?#evVHfpm%Ah<S*4EVc(&_IUi~FRnb(&zAb~p2_xh*P3mEN|M;Mf*D
zbf%w{HIcUcIrUR>SPTLc4P7>fx9wAO?QdK)-90W(6ONx2^I?$mdFk)IY<CHV>xQs}
z+IgHMk=b_LMxcL>m5oB|2~)5Z+UE=9*Pedm?ZZ<m<I(sArP6qhtv-ito^;N#zLsBk
zY+!y>?J-4Mr_-O4#G&u70Hd_pVWMsQtP3ZdW^gQ1Tn<EE#=!LyviJFV!xNoKSDT2W
z*b~mBV=p;(tUh3cEp@%q#k=cF2jS1}dZ74y&#F;85Ir;rl44G(g)8@sL3CD%nBg!Q
z&Um?$`~ed1<K*{SSd1`HSoYaX(CwIC1Wi~u0gtOD+8b77tWdk4&Sr3)=>}U{H;TH9
zO_#BQ`QbqX6{WWss-Su&?MF|}-q>uP^HB^DQ)H&Ex}(azX+sGOCxhEXA=m*Z$Zw0b
z8(k;`>WsB7R-y#oMQ?34^Cz^Zj?0CE<imT&6}}V`+{ClJ-SMM>Rf8<xhi3SO>cR34
zYCy7d=JXOl;WX)+n$5z_QK5<Qmgr5(II96*tEXwkh};Zk5AAF0)^_A)(4JRSrc<_3
zg&Wj0nD^>R-m2M(d{F#xEXMZb4`*-?4o~ja>!}f_2_Qu{0Ob{j<{bd==PC_R$NQ*F
z7YfMf#z8I9xd{9LubR9^g9;B+rvtk}zQ4xyCME)(53Wx!oSJ2x8O^OanO)u1AN%uf
z-0%KE<{7!Ihp8P5GZp9AZ!d7gpRIxC9pJ;-=P(X;5QxWdggiddeLDi@ol{jc3x^Q&
zDSYf~3p?<*bnrBg<>G2~c>bh?8m}xIR7R!#{#P)@h#Gd!?(W|oVjot21yjXM^K;}X
z4W3(fW8}yZBDpn6Bx>yVO|n)6_WAW&?%akXWn(t^SutJw*e2YfDG2`Z+FI&V)j0&4
z^VGj$|B~eHJi4eHqmLKUj`^AV<wve<<L`0$CYv8$!p8(_4P!KuC9p#Re;(zIiC-#W
z8!i*6SQ)O@?1|{cT-Lib=_Y8r6nv1A1_Nxlze|VrBF3)ZLPB92<xheIG1r5Bgfr9G
z@;c4Z9s0RELMT|fF#a%>zRwLQoc#Ht2XysKQ}GrjYUuOh%i|=K2w~hx(jmSlSK_a<
zOVh0YPVw8VyFpDtZoi?ARpx(os4$b2rbWGXZzzg>2bLym=#N!geoQF8e-IE@w=gIq
zxIsZt_+)Y+-894?$v3cS@Y1Z)CGtAiQ{!~TVe|JU4x`(z(XZs8%ONdXu4n2DMt%x@
z4Y%uOo#Y)x_Tug7sCXxC6kpolWXsf_p3b@y{|T2OPrUA*C%+p*nghk3%SndaXKGfX
zG3*7L<I&0t#>?#dys%SCIME;xQlcaEJhcLiD!&fH5x`K;%rAxKEkWyxw&iT}OKm~-
z6>+Wml}r*-69LzkK}Al>oqn~6y@P<JYXQ^*t%rc#?f}6e--o00v4GA_w_7q-7T=Sz
zQyXJx?&Tnw#ByEzJIN9vVRh9D3fGPo`7B^;nLO=X#T($j0My*D5~Dj;QPrUPKq$AD
z5na?bx#d)N%u|%l@`dQz-`}5ad@}351pl(#sboT@u6ZYj5_&e1+?+zvFvBT&jO7bu
zfM#!IeVA$whOkn-T$$Pg*Aw1+z6(QXYz`6Xj2BPYYjYYnJj8vu$hNhmdi>=IqL_Cf
zRI=6t?kuUQ?4CHTae>4`-i;X*YQlVh+G@h!gK-wnx98wzqT^kGitQ!7BtBN{xh)PE
z6)N1{4&28Zvf{lH&y>#Fvs=6GA!PL>vj2*rM`P%`7eB(_ovg1ns_$YSQT0e=Yt2QQ
zVnfc|P48{tISqc{^AKTzN`N6oQTJ69D)Q4(2pT*9H+i)2D2aqt$o4{&LEY8aen4*f
z*=5|rKJ)x8*cTyM)^;5=f@)`1m5_J>u767kehZ>ZUN-Rs>dctmBu17>vmr|;tr*UM
z4j&l2twf!=lc^Kj)ajb^0jYDQbhRO3aVQE}OEL-<3RGyj+Ko0};YdVKy9{4nsNC~0
zjVu3X=l`=s%4SPc49XB7vhMbyLiZh(we#b2(EWmGF%N5@5O$2LT-CPE$CVB5&E+O<
zh9sTVi0W~W#|_@+tC!W@mbayMRxD9cmgOLuz0q`No6|~UpXe2##{wnF5yeGUpQkTW
zp}(Nb>(f0JMLT1Jsi;neBE9pKYzECnOa#j$#=#w|{hvK&W!7Q@o4#RASN~esirb7z
z5wEvhwCCsRwASxIVcXT1ya%%KtO(!QvfA0=9GzcQ?=1`ZLqVMrh-ake={ezE6nrKm
zdJ!|mMTBlXHdDxJ;nM59+jjo>UbGt;pWyUN6*;k%$$BxhZ8}&KwrUXdw&wbBLcy1i
zXfhxGgNj53?^vg90E1IJ#%bp1X-GlyTLY+6?c1XWr1pGzcdPH+lG0&ka)HgCzkExl
zSt&*vi1*>VnfKNrY>#B7P%)=mI&$>J^DX*l(X#R4Y5(iz=W|8w+EaEm8+3;0Our7g
z&u=xqy`0a>O^TZo{4#Crrv7t&RcsZoC#~;tf5%zU(&KypeXD&Aa63on8+#e}`evl4
zo}>HY2YHvr)YTcCDWL|1-F0fzOwld7Qg0D@^SDt-LPSMlF_VU>+6sX}GR0WE=7&?q
zyh>VV$tyjpLLhHUNBEg0)<%#s#qq=2?a8qab(Vwd0#B6@IuHO>ODYJK;&l__>GtGI
z|KLB8Gkw9wyuVC14=&$n`YrvO<?NG#;2RHenItao9L+^a5$mi86j^6rs=B!GiNc_A
zWCKHU4#;sA2cNx3VD-fCP)OIR!y*_qYAB*(2d7}iagR)2^-CXlHPa>kI_$g>?NsG=
zTjuBPc2NG9W9mhqt1%z^^^(c#Sb=FeU}NjdMfCBGBvmOd%HYRf-*)GLrti>1L(}tC
zoQCkap*bn?%k{O>h<^o*ia`EI(evX)o^DU|e#eiV9@LmocQ;7jK@+TP?M1^Tq0sz%
znw2SZuSFT+3l6Ka$NI5dFVEwVhaAE3i-f2MYV1R#WsS4}KTo2LyK|*ok3<VLwUDRF
zSziXiktS%HkY$#yj7;)Se8Jvn{KPsoP-As@%xOS!wI|>@9A#T<eCrz$@ZyK~^pcDI
z)2sw-w&(u)wIh*Bz^=Y)zpcbImEn1QPO+v6h#2Sjh!bhgh4sfm`6XzSiK+2uoL;eL
zz43)PF$vSc%0i&FH)y=T(9NPWgDu%KUq()C=)8#7sa<2~l{zjhI(+jLBmj3&j!>G^
zZJAMza2P3I1_>Ox4b5-YNk$BcGbfc)41JbXv{F;U5~t2{q1m}&?=~m%Et2z}X(S+C
z%ZEHY<Z%g5nk!GGY<I(D7X*M;EuUX-Li&SnL_^1l0`VhIuqAi=oWy@JcVB!}j2$6B
zGR@PTd~`o<f1#|laF&E0nCY-}8gcG>VaHckkfWjY=k&RJMMfT>t37Y31w;Wj>eh{%
zZF17%7vIo-4nc__a_;ATj#{VcVTs8!7TUN14zcaZghPFqn?)(rX%GrVhH52?8=|r@
zpKL|W1w?T|)MWyM<ma+U^|21^1ac^+Jzn7|vv(K9!D(wN#(%5r%NiB+>8z0%YG^3z
z|5^0)`EMDRyd!!UoD^PnABiH#?m2!wZkhcqh$9ZVx*GmQXySXs@U$Dpl&Zv7O5V~?
z%7T8@_X8Qy+RoEs8jhu%)^x)^ws#v4ESRxSr25V0Y&C)?D9Fz7HN_xZJl)^iB^F@v
z1}GlzX1k}S`-7`d>E5_FrH_RAY}pK0o6wCS2C@{a&azwZ^o{rKCx?y1`r8W%l#u?u
zk{l*Yd;IGP6qI5INt<r*rh|EF{kB56Wh}}L9(KD-z3u#=wpo?3h90e{J_vP;>Ql4c
z)cVC1>$dvRk{9%B^Ydwa*O%Vp$|EETY=FeWXtw)P)>kUK!62CT&o8WoZHxaJ%N;u)
zxPhAblO5~SztKz!C}oac={9e%R+nft9YZ_z_zYDb!>qEN9&hJX57_)ZcqMA3kVmEU
zL*<=x*1jK!ECuKuq2knjWZ&ae`UDW|K|>lJ5R!RysPZt6<(5UcXVSwFAtEjqwp965
z@b7HVYs^Q`<wM0S;d_W1?7Qx4?P>Z$de3z0PQ}Q}{&%XFI;B8^X~O0s%H?;~02`{B
zPh9g}l(T*J_{j!c$S-AtY9`<A&Q`<R0tH4i6~5_uk^An|c-&8$${2d$RYw754s=>N
zoQC!vv#AR7KaIMNA9&OgGQ@{-odfx?Z5sSKZa;O9Mu+)|Vk3NOYXioucGEO{Y7jb-
zo1K+2jlEJ;+MVH48q}?PsW+PGZg0Ul|44JNmyvP5I~%OyUZw*}xvHkm92n>6Zu#VW
z-dM?-Ztp6bHIE2ipj8qhRv$j~8EI=9-L&}(l@rURZ+Y>?6hC!b>*eb@_#QfP*Ba|k
z3;hho=r!ll3)uWhCvh{yg{i9p6&;&hFB^rscpxVB1jqx^c?JD}hl;6Ic@c%3WJ|%2
zt{Nn4j1=i-C`S4HOUzr&uabV;=f_TU%m<qPi->m&j{N(&w>vf`n%K5&I}_Uz+qNgR
z?TKyM=ESy*e}8{f_w!Ws%dW0-_St)_Ykm53?=sqU9;Sd^-@Ix7<zL_>){4$XMkS2L
z_Qg*_`2a`p)LDiU^}p4JYIH6RXsD`oKHFSV(wrT>Ev7c%xZhYQWz{=4h-?gDdZXSC
z1s$7}=Cmotji!s)-yaNi=^>HA<=~ylLauSy^rAWH7c7#-^7GZtAZC=P>(Kdq2PwCn
zMHeeC2utmp<*I6>_cZ)X3nM|%@w=Z2A0GcUIt;D;*u@kmiF^_hS2gLpT}-sUuenOU
zrAuST&5<s?*{fE!e^A09#LRvH=^?1$TKE6e`G0o-o;WZ5-4pjaIi4lIEuzD?pD)wu
zaZ&CJ^$jsP>`po_XXz(J?qa|p;(I(b08cq)V@X9bedTiI{5C0T;BeL%FT%ZGhY9t8
zERuA6qOjow=oUyzuK521*|l3?Vc(ps-#5XVZK<YejxTktx0PPp70jTvybd=eB0X3!
z1|B*7{jqQSU{Iw+tSH!75okr6NOfuW77jiK2lMT`b*ULrxN7w}0=gPsysXhkwJwlU
z#3jY#wUS{En~^|bFIdHN>Dohc+>9`Yk$9h;wdB*;Hwuoh|0ptT?kVk5+F}70Y@(FG
z!F{TvN{NB_<5r`9R9ZT)JGgEk7GDPJXVe^D%>K?JBUT^gl}=ok{#^Ngow+m0Ok(gX
z2e5mSFV8+7|MKlTr?aD?Il6TRUD<YIDd|5Pcsdl_4aofhWG>eje(Q!;%&l!jewqGD
zq1pa1Myj{fg`>@GT}F9UbFme1lEwe{nRp1*4(OG_VYSxD-<=j%A~#aDeH0(Ej|%FA
zgE)>WIginS5EG*0qBt(7h&+V&#hgwJ-E<7}w*nKkyoNP{X58rmS*4c15)0^;%PFv9
zF2vJDs*_S%>HXu}98q<dQ?c_kqMasvhO7)oz=-YEpB8;ji?ujETKtjdmd(hB^09<t
z|2w0bYzCiDYu)ptsq+=)2v6R4MzPPb!tuzr6ogDhCjP*=vGVj03F6*Mzr$J=zS(~&
z?wyZ5+<HA^VNkh0raWL&g;Nd^mNE^oMrX}eG6o!qNo1Y0rk|qGXYLgb#*L~dVR<Xq
zm}ZU|BOe8U!-e71ePxgpOHUJ7EIsKM?v1$8P4}m!n=jH)sU-K~C+B;IPDIc@sgYd&
zsA*s2Q$$9%ov-5*ZAK<G)u&f!qpy_vae~+~B<qN`9KKb@gZM)+pMCORkslDQ4ZEcF
z@5;FCnbI5UZ|ev;uWz)FBdrw&OQurv?|hC8$LY255jE|Ggf{oXk;g9{$C(rL@HHbD
z$<4M{lCmvj$wA;gFeEbKYbiCa$nFNL<F#FcwC36xF>*8st*858wJtKR_PxOTM0RE8
z&&5_XpO+k8$MnCE6P@@5B|VCkE5?6}EWnT54@uP@E^#@}Ptp9e*6<^RAL!i*2uL59
z=W0;rOFFng67v<VfX{L>Lc~!wcQ@|{c3#e2@+4z&BPI^^89!`uY96?}=jj_u0Iyl`
zTxX7#oYuBb0CwmuSKitT2Js%3Q*lB=E9DMXjECZcK$i#Z_iGFa>${9TX%ef*#n6x)
zzG}ZVeJiwt-KyeKnimx0O;GM9d^v1>nIonTcI&)*me;U_Y(b7}@y$gHo<@tMX~Zi$
z;ICdCC|w`n6Vin^JIA}Oha<zyMI6=HkjEqNyth2HAbB9cFYp|eU$vDccSS{^JD@ui
zU0KV!&Rkin^~(!%<4wt#6pC5k-u!?u)X;IE`|2+#v*7$*e=lI?Sq=Y~Bena9*7sqT
zsPnY-j?N_Zf;N`{D5gWnsX76wG-^rz>_(<_Uv4j3)UAUmNsnATr|jMz?QS<D@S#RP
zK2;EUC~G4<$us*{7&`q`KPTpJt*JeHHPtbftF@wz^}O-hxZLU)VpXOq-+6lvOMlP(
zGuo-c6g6RcT6*&~LR75Oswzjr=CD?4nOVsxsi-*2;xf?cID*2Qf?B!a${wdkWjud#
zocugVbTG*C=F`+{=i$M`#kJp!F!X+!S8`9jE8Q6J)3n@&1x|Q%|Io3XVsio>AZNWB
zZ{w<?X79Y6>S)&-K6APgdhEd(&EWCQH_Kr>g7Yxg*kRsbgb=G%om8^+{%gkj=Z5dI
zV4rcaDBsKmeLGfWjE??On+kOZ!RNyW7A{p)PwNxz&N@e`fE&^uC->(TANM=5^R~y3
zLEch}(YU;oxbezU9r_X4lY5_TwfD*Ulh6PS*5BoXu|SSoSgFoWuk)cxhtT6U@p=F6
z-&N4pnLzdMzHeg(R@>XWi~n`Q?DXSEYtI9A9+c(#(o1u+Ze6ZFKd*0J^uM)kJvfGN
z0rc-XJv;dV0$kVZH1BWrn@5GUk4+RiMf)-NIZxEa5{olF`#28sw<GG_U)5fIAr!e@
z<p;M5%b;$0HhFErNe}PO<1gbj)W6bS?QAhof!=C5KluX&=6&)xopgb!#QxoT<j$ij
z4vQw)xUSW-R1oME@-l)FcIi~6aJLtEk2asa0vY266bc(y15I{6#nhcVl>cPr?A+Ap
zr*XZvxvRja>v?mjp=<gbNfrNUHQivpSnKK8^K#Ul^t-<?c7LbfAL-OLv%-=0nX3G6
z?FI|&Y>UTw5EtQZOquMvclXnkFCQ`4Jhzoz*P^_t?nDTl{scV(y$}+q+jh^4v9Vhx
zef#K>=6}Q6s?Q}&X`f<HW8y{Y_Ttc%XA0(zCqQmqy^-lw+os9VrAe}zzuth-hO5e4
zTN2w<dz7qn{&`YSkk{1aadbRwfRWqb3~z?3%&*>U*Z<eZ&sqJ{$ts0mV1vG`z$o0u
z+6eU9>-`csYyf>*p)KlFUEtNwd&ee~{$nDE2shgBUK3M$+>kC<{c&f|xMc^Sv=fqo
zzzrUzQ)U(A(e&Rx_hZvk;vJ+UA75(R;Y+s<G%%9lBhh058(6R6rMJsi>6cA8YVyJc
zA{`nd#M!gX6zGo+UG7uaVMjwFQ>Npcd$05juZA|<J+b9#IHADq1E$(rXqzoKZ7#%+
zs*PUQK>z9|S3vKEzCZ+0E{hVA`qyO`r}ypFyee0%eYnqY4qvOw1|C^T9o%js+ok^3
zW#-E*-l17pM_(noZST(-9+XmCKX`fWtF#a|!g0rq8owwc{r9H85e!t9nw2OwU0*Iw
zFHdUQ`wb}HAc2p=wS*B&tty2fe}=8Iz9}T?do`Y!5Vhkb<NPoC0Y=y})1$(Kw0m5n
z-0hAX-g_hG0YO$&WBdi_Kwqr?{^}=oZiO!k{3%9z`|Dvp@MS$YthTzwn`p+n@@_c~
zNnOto!n3`d8vi?ggka>Fz-RFd2Q-h8+4rW&%Hio;f246+2jA~ZGwXXRc6DnTQG%ce
z-z?je8OX*WA+CRtez?%+xNfy^x-J|=&Rnkv_;*}wgw`pZW}jGC$r%b1RDE>MT%_DY
z5U?5^2ZX@oo4e@IOoDJGzYTyi@bpVxwI`&(bpn7(H|Voxg7nv5wXHObUtdN9QyKG5
zoihkM_GbzmvpUW$+uci?xV|ZV=hSf)vEac5WI6U%+7Cgb=9$Wm`qGy>W4CPkVCJ~L
z*`e!qY*NdrqHX#uAaK6E7}I?t4h0u7>D+Y366F}cd2yMVc!S0YJi=dfehcY5@8=qA
z*b(%0=Le0NG$@*+gZtwD$Nh5WD?4tnUlzZmwR2w8&i(v6DEjB1m#cJCUCI8<;||tk
z#zK@1)m`^W_Bp*%1mu3C2TAPN?~TtJKR2Ga-<d)%AWiAR7oU4-`q}o|99<(p8LTaq
zCZt6L0(!PbXpj6)7xcWZv_jNQ!a(Hs@g{iIuHSM60OlBO_wS#ryCNu^uP?%>&5Ed;
zN0mBKI6B%5n3!F!1(6|k0DA*>EDpO4uy{$+^L9tf)8>@l)*WA&G4~7lZC8Fbmjv5q
zCs<1cw)uFf^Qp%`>+Q?jdhJ7<IS&!OxvZ*ke=klgD6Hyt#7R~^*Y*sM_-bRV@%{AC
z^L~7q|9Un8o)FI8MP?JHH3++EYCMSySHFgRlC-hk@sg`GOGH8f@NuGG=M%C_+R!{9
z4m}?azSbuUo2P3;2Im}HqDNV!W?7D?TlQzmkt1FY5fnEaVdJbNGx?iC9!qz=A79Hj
zcr`})?yu<9U3<DQF-kP++FG@Tqb@4u>Vv&~BCQuexq~$CP_X#=l8a(OgC1sGC=|HL
zZ8?S;d~Unt$7YxCnY_IXxiknJ-?tDyQ@_p51FuyVSTUnbIQ^NPJzEXR8Rr<|BukmL
zw`=De&@@9w3K+bYGO9_iO`)Sw0)(%^K-#DC`N~)@hwEhZCU}PV-U5*@yV*fiGd`J}
zIntlfpRdz=z`P(K9X3<wOl^#>{ay@tZ&r=rx_`GdH+p?NbC+Qp!_17lUVl=OizL&W
zo=1pMhjfWR-OT3Z3<6;sXS?gvmG^1ItoD27#_-Y{6aK~FG;=!~)9tb^CqT0>D5M*z
zJ%4{lw_``O>*QKj?d~Jz6YRf-x^Va%mwe(<tv=tBu@hf~=s)3du5BaRD4|(ri{T3h
zg{fJx>(XTDd9Jr>64Ja>nl2^*G{6k0LEEPTt_~0LW*DfzmWH>_3I?qyOMnv!k~<S7
zs@40{MNQ9JS1bB8nA|(SfO#}0As%{LL03%H-#IO^4F2%sT-a3nvw)HiJ654b{uS=-
ze}en^gP`%FV`{`t@0(=vo=_VkXT#kD-FGQUC8cYRD|5o|J0QsYquk8?KmDrNelg~~
z8KGd}W%pf$>8u!SJ-A?rpEkKUXqZXm%@xQ67ZS8n=ZHDE92w8ye`t2uPn*Koy-!}p
z{<hw@44+Id_1(hQi8@BJ{h<JY`K^tEC`Y$hku-6rb7#%rH1KnLAoaf=7+LJ%e7=q>
zIVzeKo7lt6INZGYnDXsZ834jZe%vGK*0~Y}fq&WyrN}9n1vD|rr{foU+W!*f9@uS?
zz}P~t*0pP{I!uR`sI`2BZDfUlYqo-gtTlV)KheZP6$MunNO7YNDi}|T#Hh|t73*up
z`NF~c9KcEQZIOn@<qdxJd!iY&h;mbU7^P;f)&NsNW<;U83}_y>S=9*WouO+yx3+R2
zt5BNBddk?J>-mcl%X_PS;MlM?=FofAeW<a}1u9p8gbFSQ^}#Q|PN2&TeR6u7Gw@@^
zI`_403~bY-Dd33sU(Z{|)XTX%oS*W5;COO`Wl5S<yST>-F~%8Nt_*o*)efwBcbt40
zy|1y2Or{KTymK)YbMjPN9sxacX8_^;0b4-JRup1djLd7tqS=$X{dy=T_i^hWo7WWj
zTw%v=F`w^V{H%ww6*SziV~>M+Y;yA7srR9Vf+(iAuySbLyI=1a3S5>lG)IwsZ)lK+
z_|BK^e-DOqb|6Lzf`bwZRXwuH?ZFiUdW=gFzEYn*@oO${dPOP!l=%Besm<Hz^<eO2
z<3X?hBgXJq^;d!ohb=$qlo&@wxe6@Dzb_V(W0gqXw`fRuO6exQXM6_VJHc`%Bd&U_
zX$X)U44jxkhe|QpMJs;HhKam~>k+5UwLLY`^?K62=kK-myBGE|mQRVo^f|h<dc183
zBMS0V2YKjVWYAq&(j*!*=-HGM3~8!=1RXXlbj7;uAvP^=9dr^hZ8HEEMPX<OR8&;Q
z5vi=fh#&fOblVBVb4=X6et%rN&BR-9c_MOV!e*eNe~XitvCcgEY#;j&=-$~_#M^uE
z+IK84w79$D^Y<W~dVHHYtoQyj>vm>6Nu-2{P*4B93uJA2-!T<d`61e~6r+oPknl;q
zq$1T!MMVbtr){tqLA!9qQ2|4t=Z)Q!6?b&?H9?Ft9jyO(skR)(I$<ax29fvs$*c8S
zJ=XAvjl+1ocx8Vp_Z!2``-TY-m&;YUdRJwq*o~i15A*m)=E+bKGFkOk!nfnQtNqmt
zSWiDZuOnUC3}b2U_uu$jUJ7wSWWco?#}a-Fu17AWCX)`<SX|p|2|1Y>S#eU92#8>z
zQt4k4r2g~!zC&4Sd%4Mb_pbauMk%v1s5g2Lzvjlw6GjIkFJ(5~HF&#HR9=qE{h=6$
z2)J>&KZG6Wo3uhA$C<~TjGRDj-?C!`LfGU?DG494zDJa2ihXia;tN?&P4I)2c-Z3|
zX9NY*s&r%D{T{I}YF^l>F?0el{a(IrCao&vwFB+WFUT>h(TYU_q$&h!GDw?FUD|Y3
zn}b-7JPvSv-F?JzAna^L@EwJiGva~9NP?M}IM^Q%QZa|cQK6KsTaeKeosmonQK8MA
zKf;vW6!u*|5A5#D>-l>4@b|;e%bb{@w4xO_vq#(x;Kw?LynmSehUXgHxQMq3IUx_{
zuM}aI&gCuEs+Sw89i5Bk>r&{sQ`^J*3Gw`KZikA0pJtJCgkI2WT@XA8B3K&3O#6Wr
z<ivIRx?FP`MUgYOhrTWT`kK0bw{bnRKhx=7<0>^$5F-(O{i9)v@|~k5Wejml?AVQt
z@R@5>djD{yn3$XE<?|~Tukk==*|}lP18Xdy%{ea?ly*Q`)Rt9F#BNrkTsD>+3~+%+
zPX)yRe6w$aKf`~!(4qPhE>A8D1*j>*Ke1PGKLfLXy{o<-%Y2Pu;E;S`!g{1kBb1AX
zEPTLJ_aR)P`04#Hl<HukBmqV{U}WjRHhx!FIjssq=`;c=4;%+1_PyKE+!2>;AHZt^
z#_qh`zo3y^4-hL3>uJel(gpX!E<e<op=T68l6s18al&#sYQ%J|J4c-gk3W|5nJ6Ku
zxoP1&asru?|3`}=WpGbbE1g`Snn>>NE?(&AzT&D(XmC(_4_;)3y#$uuQ+th}I}2Hx
z6^!ZF+=NB{PN8q1uOIgmt^v<F)q?R{A8SZ@kRPvb!J$(R+LxSL>*VRU>MS0po?fH*
zcj8s}v;+MtzwXa|o{UK7d#5LGPIFt2boIRG&W{vF^=Ek}VWN$RhsR?vpm-9mx}88j
z;c=sS>gp=ROkm{1hTQ*-ewBS&+17`fMz>{SF?XJ=DDvAFOQeu$zO*zC$H~6t9XI&A
z8uX?0&f-7T$U{TZ2qjuvUOUkdq&C5SwaYI`Qe=WpH!7t(X<TnCyd%`1cYBL`5(L=(
zWQM9odD9G0330GSo#1bwytKu`7;gSr={OjWuTJ@TO`YGm?k@m6LHIRPt1<a7Es-nz
zBn6Hn@KpL|wSXKpNIdLKN?A!&13PsRgtT$SUCc?FC&%N`X7e^Nx6pHLDR{QJs^L9J
zZ$e;8OQbWUGW+;A(~wn4qA{{T!g21kM*pV|kxpDK@fa^lfBOPKd7KC55`EF?(4%9D
zp~0wNBp>wFc?b=Ros;Gt(W5zxU`=6xs2%C#*~A?*JJGlCX@~swx9yekSr$>>ub|ZU
z5%!iQW5wZP9eD>@U&5N#hp3{3PHoq#WOwse40vq3k`#4gEit)y3+FRd@<&Ng*vsGg
zPAt=!^%qIdm+Raeb?*l5vQ{cgo1*1dSMF9gZ&kbR<7ELwayI8g7+$dyPj=Ll<%zK+
zRMI)M^O(!oUy>n{K^0Fsb@5cL5NNX&O%|1_B)j*oePpLL^iZ)YI4m8BWDgDS<&C`L
ziLOZ0|GInyLN5{bx_YV-#ZPHwNC?C;d$#Dg%rx7aKS~mQNe?;@_@MadSR*eR@^n8p
zNc`9mP(8qL5)sX*Fw!mMW~;I)#r6pb0+!XN5B=rnnV_GgrfR%wR^D4b?QxzmtAG+M
zRk{gY+s#|7v-{k;{B>M_UrrYK_`aC^Aw-Qj|F<e?zqG!F+ZzcPbC}>CX=#`yX)zOC
z^Ni5GGN=KQYV6DV_g#C=c|BJTcmAv1N^68q+Mp<P!69-tE3!mKq~);CziQy3G-H0=
z{d>nPang5C3}AYZvpARkdN5b?x|3EV3g`0j2$8zFJ_lVJ`htlh-0!A32>e2|YdWa&
z&p-Yp&h*cx2Jd>I&emGWjxrVYn($XCAC+QfO+?6TxEU=xW#`*8lqw9EVrIvNIGsE6
zWu5${s=L{%c#c^49VAt+VBt|m+H~gFW}kP;S$8QkC)l4u1pB?2(;G-5#3Rpyl>sR-
z5sUUX3NOT!8AqM|{^?6e6^XSgO@*ddxnz)-9g7DQAP7K&g7V9Vbgh|5oqZUm&CfNp
z_d@fxeSpRTSR;m6!)fQr1#qx4YdAQ(2&w3kugbG$q3Jo<;&)(UGnQ7za5fjz%cjg~
zdvfm*qz8QtEnn6mZtO?a09`KB@2^(&W@;oz<gfm+xxS(W5_LQ5mhp!L6rf_kTE4}v
zjKTibY7ULXY!4X)Nux_LFkPL(TFYxog44b|)rhDZO=c_P>?rbSH93>l@*pXO1>8Ze
zpI;50gI3fg@>FR3UjYDQlw=louxRmY6o?M27<kI{E`EJU04@@6J|=ds50iKRtCw?D
zYcn;*Fv3tk+e6sdU<mP(4U54|K=yR7Kq>q89zhV6@T>nXN5Kp`*80;Nrv7mB{Pk<g
zHt7RjL0{gS&`|AcIUA$pW4+}mtvJ+_&84}o9P$Q8?_fQ%PQ3yC@0l#>bA(*UcHJs9
z!+!Ac@7EQc7UY`LmBiqSJ3x(f__y7)3}ZX2h_9_XDf98P>l=|$VX`D86`8Xq-N%>U
z$*U;P^32&_xN3_*p^jxcNQoaZfCE;gNLe53+e~C?h)cIxUJ`{TVS#I%&)7vRJ2`P4
zVAq4Tb-Xk8yH$t2jO4GXMTWTH9Jq7D;@t0`2*L+<i)Vq4M-Qn%a`nQPzi#J?8SyC?
z>^MHLELkTfy%8-Tbxi=qzN|2@<Ei02h<iq3>1fh_^ebL^TI5US&YH9*(Y4sDmPJ*T
z1m0Dl1LdNBM|t8*D){0@6Q9Ldkh$*TVbfXQf1tK1NfR~U-@NCmRVFqk$)m}q;&^8`
zJ%0LrOV)T8jk2Zxw}HO>Xj>s{xWCLS!H9qw8-rT{w-BpSA%{&F{V)bg^#NZUPCtAH
z9Se_$;Mt+m1r3Ym=4o5r+Y7kC=DQDJv_olvyY#?0bAPIp@TcWOs$ApM)9@Z;3_!p1
zo2u1{%$D&_HTKM3zsS)CE-hB&Ix&!hLH*rY()X6d6P214r2FD1mSgX&ZIxw0CYPv_
z2MfI$vmqb`k{{L=`b~0Hy9!s%Ap-QZax;c3pdmJ?XmJzeI!5|=^rb>5Cd}e%o-ejZ
z)=FF5120}tRXhBi4d*px^X8&q(=pK%dN0~sT94Kzm|Q&R+Ib{KnCPMoc6Rw*-bVRx
zPdQQ6hbuG=4yCkLV{rLofg%KY_nG*~%6=XD`Et<Z-T$bZ@*BK9vSA*hBqQ5ru8lF0
zjf;5MvI&)$z~)AeA?p;oI{1$f>bsj-r3&L2IGqH$umIfd9c3QASg{wc1|*fWxuTJS
zF6X?4Z*|-<ynGCg#pyuaQlySDC#X7gG9@j2aPfq2mcn1x?}rJSgvR%Unr^uVVlY8f
zLyProvBD+7p58yWi7>Aa9*l><n3z)|@&@1C!&nj{BWpS|cyyw$Q_`kd#2vI45AY#j
z2&!oix4%iZR*NEjX3HE0Nr-%SdK_^1d^Ip|oBcecT-Hz&1j*LRTx3cY6!)BxfE*#!
z`ju~i&4n^E3RIO4`*!qEsd*f}L|_xx`HdMl;Bn>Kc;KbG+VRelN_C_rqf0^SZf<w^
z-m~wyXq&YRN>x?6QlFK|2f2(w<{$~UdmtfY+F*$ng8V5988TrGG_*iNgI4nK4PdPY
z1H?EPJx}|b{3yRu7D}0Ai5<;nHZ2}Xcz$M$TgyK@miD8m@y0JyrHe!_#Tuh-n(6i;
zx*d{7P6`Z^uL)s}FlGkvBLwR@awzGI$XBF{vtmX$`}l9wl44k;W7b~e-TZ?<rFo;R
zr|4>WObeckii9IO{>4Pg`WIV1HtuXsM;@2c5uU};3IO=N>kvSdw|qU~-SixI{P{+1
zc!Q5WlBsQfaRQ?$1kYDc@+cm$>Ft|aWS8xf+g{gb2Br~;KnKu7kLvV3Ex54Ha(+Jo
zqxB3eknqE=S&USM*OHRi>@?cF_|Z?Ma3o!f+7AD-j5J7)5D>;UrFTy{hKnp}ZxrGS
z#C>5-WsMUv^DHI+(fZ0fto7=IfrC%l%b>;cr-Xv!;uZV=;YwCeUjWfw*6$z~iuZw{
zE{|jU$+D_=mtP%U6@#HOq_F342*6Irt6V@OcFZU-9A^qG@MO3aQ!j<Ur64oU-43e`
z;OErAwVWVFz2?%<6rLd^<^zzUNoIcxp1HO;zf15GN*wFeaL7kxfKrDNg=P$j?47=|
zfR#U_v9Kak$!FFnRYee+hn&eYtng|wBSr2Ej-tM4Ligx{Y{8N8{8Ov}y|D0v1N4jh
zk^<4cqJY5zU?@Ot#ny@otS*wCO64l1F%UTys>LRL?y7w75cos_4OM!t$o1=j3ss`U
zxz|DdrV|rA`LL{vHcYKFK#hj7JV<nV%k>w#(etYh7FKh9VGRy`4OC)e(SV%wW_p!9
z65`=5Z*}my&BE*7QRnwy;_}fuAoJXM-kMk}Ho2yD&W<174`pqMQ&E;_U__dXB$cdv
zIdc=C6!&0Jr-X?A@YBkjISvB~$pG`us69Ma3G+>tikq9UwrdO4j5uidKfqopwr@i>
zI63$wnjSt62X8p^u@Y9SG=BF6*s_EEUX^dmi6eRd#pM#s@CZLY@xn%u%36f?<g3>3
zc4*fR@K?hjw-+S5C8@$Y;ax+hTq5`Sllh#t!X19qw-q-UVX6^f7(R0yG~)GpMJ~$e
z9!9_&#|-M&wg2$e--(B1y<R;lQz3~JHmV2@Q6iQdxn}4eX0%PCb^E{T=aCBz1@<BQ
zV2+rdBk92!#<qn*K>9~72KHp{gjb(e*UcU8M*zTieX{rf50U<|k11l(EEZgDf$?Vn
z&$}tiCvC_A*l26QaBwKdUkeleWHd#zIm09SU#r{w2ESEB*L7J<jue#>4|qL1ep4o+
zdGp^1na!R+gCg^kS7|h7Np72gc7{o~r9uEvNpxHnF~}9ivkDBWQ3mg@f?RTGnVp{N
zxpe`7b^z4`5gLx=c5iYD?%>Lv%W(g~-s?4~;B^!tan3vrIbh<jKVI#ZecOl59d7Pb
za>TT8^G~u|Bcxn*MrP)xNr`%CR{#)AQGcN46GF64{@+~yg>AU40hw_$t!Q%N5*l2f
z1H&iKrqiIo9%N22VUhw#LT2}oD$ZKKs$Kfopn?xI6A_!S!IJQSTY@C}a?7+XuQd*B
z038D(uR*!OH5OxTDorQdwL(|1cY~4D1nhXnpb2qAwH|5R2H1Q?v$oOejwZ7wCdW}o
z@G=qKvcd<%!{)4c)xMCN(*eeE6b20lVOwzWCs7|buOGlsn?|1N@KBgE=ig3~k$t71
zO%gvI*#Newi%Wv;%_%-rzJwJ^0VV7ixaUM6k!t1A0$e%e8v5+1GZ71(A0Z&;xbI%?
zrBiRMCrzzzEbTUO;Z(W?9u>NG$SWb^HU~N#47foWAu7<cxJ++s20UR7i{NkK-3O~%
zQ<9+f>Ys$o3<4bfp^3XV&+b;4!Lx7$$et#6e9&w%`=M5Lab4A4{8U6p2x~jh=BDSD
zmjo7eQQsu4_xP)vP>`2utDIiKJ_B=ayHJ;RRPQVxT-?Utc@`PNVweno0p?o7Iq-Ce
zesfmA$_4-9t{qN_q@-V{Q%<%NkfBux?}Aw{X@rTkb{00|dJNTM<%Vg>1}jX=6{$6T
z)V=f0WtBwe?p<3fTi#^ox7zmPUWCa06PF;@yZc|mtUsNVoZ9&8DVSnZ1JM>Q{5uPD
z5rG?pQ!;r9k~cgOuBft-mJXjLLGcH5&BcG$M#nm$#A@8d@phoQIg!})QE0?ZZLArS
zdyYKf@IAgOR#Lu{$c!oMpm~(C6%IZLjBXehUQ4X@NIgOyk0FUhpBoYBW=c)76TmR|
z$!@8YRghFhg;GxzZ-NNuaJx$68$Ny(%B&oDbu#<00kpD8RSkfB78oK_m@0vv=!J5I
zI%RsFT}qqZ`i4~H;*j#_v%s3jmWX3YN>U)`1f!H#meI@S7t0nln`#hxX#TFfJq+C3
zBDLxwwpaa)yL+pSg=~OK{G^jCxu#eLE)cs?gbHDMt$CX)I*AKem!@Bxp}~WbUsDFS
zb+~wNlOqU<C`8K@0gM^&iu2MhqE1zs8Dx?!zl%{+*%}7J!WhkL`If6bc`fbSNv*Sj
z%8n6v7AhTZSh=MRutaBO{V$$Gr@8RqO<@1D)vuuf%IK<KBNmP(E0N?@tX91kE8=br
z43KPFPr1ijLrsYxKho+d^Fee(D+$D?$U<qk$P52Id&s!84jL{>ZY;602Y*)scX}(T
z3rh)r*n3LMJ*{|BIXm>PExT{~p?^@J!ERir@3AEVZJj6{X;M9Bo+l^#{9m4gh6PvD
zi)*L8KT!Pe8Jw*IH}xU~1%cq~VSjk56wwNt1u;-UsI?Fs#jlF7Wj`)xDP?%zUj0H3
zRukI|JwH&s6k-IXI(j{S1`gYhm2-r6*8{(-jr802OtfNAmpX5`?J2KtrRIo0Q;o$G
zIne=_^0*t70@fPFinkU<3V|f4biNkEA+r7+3;k<A3`ff-{=&QyYEz=so^Lf!jo#1s
ziJBvlF9C6xsWe<_Is*E<nx0=%Vc^1;+FFr?cX!?d)fvbA53u;J;sTykXxwkAtKO1f
zHqmtiCu7Zw+472%Xo^f@OB2cvnFci4#5-O5_Bz-kx(kH&I)#f@92mfZ#xNAFCMZuy
zxUe-K977~-QvoKP&o@P9M8HO@wDNRRDR}Lv#szmf7XyXpiR~6i1oU-VCn$B0b7Lu1
z39fPYqAGllo|ORP1^bJHgRQHLh3cYYyHy^?>Ag}CYE!W)Rq-ba3__*2rZ379D?vhM
zY9UML18BqXa(=<Dla6CP-tMh-<tOj1WsnCXq}_xN%+YRw2p1f7>4M*F%(8j`i|?Jq
zs!6t(OEcPDlp2u9s4^3yW!}<MvHF`vBc=@pp=_-;iHB;=kIL>|QIHJ2B_huNDQn*z
z0jceW1*lV4@I;Ua#@XNDlU;fQoKUIltW09eu`4+k2%0TT4dB$|{-Da1EyXiPjm2>w
z^s_P{&fWf~^0_Ii%UdHxv-09fQC4I7@>-G`DuB@mIDxdxj`fJ=BLyQx58I0qUepp?
zk`!9q;J{8^6-;#l*GCmuYU;4iDeFuefQme2gw{0>8KhQvsH7uK(U)c`SWmD|qWpR(
z3rdPWvo@$SRm?S9%53qaj{FrlQh(q&+ET>0wHR+rI_)>(xN6d_HhZO-bZl;~Sx?7X
zpPv(56F9Vgo|9C}4*Z1nFQ7D6IYUnWc2CFC|1k4IV@4|EoQZ|1b~0G`e%Sf46a5<}
za?F3<JIlKG_iQn~O%0o{2()GfDlABZP?cLDX!3_r;{<-@1Bzx=D0E(DZ>-8OvFk>{
zv+xR|V0_~bIK*7u_)G4RKGVnD4CgL$b1m%+m~g}CANZ61g1QnspWM2c;K06CA6a6Y
zPz8Le)Pl%lF!L)H0*xhNMSe1A(o%ZDmFxo3w7IJ{^C-vBaHI7l_K6&I7lG7~@cHuU
zW3>XXRBFXSQ6Ue$W<N0&Xsq&zl2DoLtZXFIQyZ7Bj`+;2tsvzVT0atA2K=|Q-|I{=
zH;w)n9umBSX^s62*BGh0M8+f5N%;*8@gAGHc6$>&_WjS#b%K$;%57IdA#--~bR>PH
zAjMloi(9c=W!9wZ_toRuJhL{+IP+MlLXx!UxCx>O%;#UhZYDqzb(8kO7+BYxt|*fd
z(UfIBPTua_goKut_9A$G)cf3fmFt*}TSkdc13dSeq_F#oG`e-@5L0d}?(ranl>pQL
zBjX`f{*q<hg2f!qy!zI*L<#8uWX{V6|0<`%CjUL*U38n$`BC4!3lcfLA=JW!P_nl~
zE^CxSMV#HFSil(V7$bO%Qp{wP2>Zo0h1}Hp2S01Jb->K^KtbE_Q1o<*^>)D1bYj9K
zcT-X;oXPy9F2>!LCaH4uwx<SiqlE@KQ~Tqz43{Re-6_=ag|fjYjLIPhrUGJ~^brSB
zPs#}9_gWa#SH%#IHuHr)Yv`zZBp-6P2Ys|S0($08CUf#p-n20(NZ1h2qpYk(@--lq
z!9$5aDVodcnk=LQf|<uFbq`HlMd|%mchY&gsbU~`pW~t9OW0+kXxD}z<}1~R5X00B
z{ft>{dCDIq0RXY#M>E&qrhKahKWiOrx;ZC)I+&oBom>B$hY1kFP%br^Dl9ZyPC5|a
z!!X(VtXR+B(^zWwN&Ufs+dUdpyqwf|I9q<e59|OHVff=hs1p60-8#ufA!b&NYravb
zG<^1aVhpP8A57MXn$T2&X+93U{cc@H(cTbdGpK-vHc>`JS?^F{fW99IVZ>Jx^^P5q
zW13cV|Mk|Wcf_#@Nis_He~yUq?Iw_fhTc%BU%3=GH4ENaM|$twz?H9euK`RIKV$Ad
z{l=pXY%7uTDZo-vD%L^#kr;1Y3TyI^+$0H19?^@kEuF03gifO6<W4Tgl#BgZm7+co
z=Q`z4IHx0?)R+r!8nt)BPnZx&mV>@?V`gblnBDI2H9}FNrh^_&M!z1-=eWeEBvdy`
z4VTjNej-`~ttAkqA0K8od<C}UFE<i)Z#By_i&YIdGP7d4t)Z(AMo+8Pd}4Vg`QfyE
z`4%d9Iz2_69UFZPUm4RfwI}~lY_;r0Quq>Ff4c2g+u2|k``%&4he-Ko0iBqJ_;N4<
za1~6vpCZ_nsrL5txO*meYEeH40=AGN-jSif_i_|K1WOkJ<W0*$;oWO65hcznpX$h+
z2xU&pSREgI&6mon*!cAFU2|v;hC4ueYdKusLnaD)Vc>!yLUz%EHPX=1v0d79+>e9U
z2H&6QN_rJqg{>Rtg&4V!`j4OU+ba3?t1JYKOb{i-eCFZ`S%5kiXg*Z$;JS7KB%ayw
z#h+}P5uzqGxX>*KmKtopkXS&-5Q~NVLv&y(s9rN(?_AJaNm);anCTG3SX~4xBZfo5
zM_(S<j8zJzYh+%k6QgwanH6qDVS!bJ8Us`Ad1vi?%ot!`7lxcZGLYfZJE%{2v(+_k
z{@HEUI>!V4F_W<nwV0fQN=?p{%9=X^wGAB+Wi@rHvog4^zaZ9bLeG&(s6@&QL62gh
zdSymwZVDLkuqawrR&2_2F{EgcZ2hEm2fMXf6)B+9{iwxh4q-See6;Fo8#vI<svL~1
zo*YpsJt0JS^MoRu^N2b;D2sb7D!2<C^`5nrqx8|wP!C_Pk4WgYtP2HTr4Os=@LQVT
zYvMrlKl%lUhn*&~m6fN519equw6m&7w|RSWc+H_xTVs(CKIptA=2BC@yvb;4Bv;f&
z-xl^~v5Ii%f^>5fgu`BliE;~ucp->qHbz5*$H(?_(c@beUN4y+YUx@)#U1Qq2A6Vu
z&k~jBIfHew-aAQ4hr`<61=H3)ptMuakLR2w_zx~_9-BMjN7r6HMjTv3)Mmzu+f)z`
zU0;)g_a-I1WP!j)nol`>PonBzaczIseJl-2nd}M%60XY=JGkq58jZI$vSo-;(7s<~
zvs#ynrrhP3ipjI7KK%Vh<X|@0e9neDkCLn;MP24X@o?ve&!O;s=k=gue2fl~^)I%I
zs<QahrkG9-R4_b{i!ogir~4o<bHccs&dEkJ!>m`k8ieYzop|P)nPu-Ls#}Gbodo}I
zsMkbfSV94kWf4|Le`F(RjrGK55mt98)NW?!><w>U2~eS=iIX@1u<ErO{>>M^Jc=M0
zo|&9BX4v(RDx5KVC5gz5z2Gy7PywB_qU`ZfkPra$%a#$a>BGQ@eaP#>!s#+hEf7_v
z?9-$qRL>xK<MCJLv8-p$1>*m&CIO7*AB?BN5*7arS9&oe{|>v9iAbO9nV-5_;cUI%
z@EL8eu}~!?ujCETt!oBX%SVweZLE{XWtRjIri-7mV3L#_#f0K!qcl{Oj^{9FP$T>K
z)|T*L6LWDfw>Y?>9Ud7^Kcs8aJEIW!!UaCxtae&tnsm%uix_J=o!BV~_;_xryr*39
z%zD-btv+>W+mY%`EYHZz*U#)AOP#2C%x}v%wZI;};`4qNB4V+U{v0CyuO6DWhfkM^
zl}j2P3v#Xd!#MdX3D0e~<yNY_4M;^y+15#YK#HLLbsH-P;Lk<E&k0+&3<SQyp8tGo
z4Ey3kcrBsV{S~sn_UxiJ_B}dHXbU^;E9G?ZV;#l)Pe!4nQ3Nf7&S>5fMfwTTO$d*R
zFoOA{x7%<L8^@sc$48<11Xlb4`K>sk|EepyzuFS8uhB<%*lrCNe|HBBHedDW*<Z09
zu|z2X=cPTODFMcwRj#n}*IC)}+zQ^~J&>-bidE~Wo(Q#Qvj>d`x6^PcEX+LfQ9H?*
zfLfYqxOnEU`+Dy%Hw0IJ`1oJRMCa(q@4cPyQ*<4~Caq5DHEwoG&m(LEy5HH;;17IC
zQY;J;qGlDs$p@FBs7dKCFn-ALetq>yr6C;j(_p7Zk=)L3*dd+@*y{VD^Lu~QP|}c&
z%=o^OL9mCDKTTIW?Ur&B8A39{BIC}h5TSe3Zm%D@203*ITRgbmpA}{^U~8m==#@@s
zU}l9KD^uJH0&HU`4$FND#f}71W@k8y&Wa$RUAoNU#aRcXo1A><J^}{qm~cu(p9#~u
zE5|9GPcMkF=k(eq!VtgVA3Vtid7tx#$?bJsCV+{5ZQY4_w)U)y${||qzia}akl;_V
z$>OW<kTR6#|E;c&>|TV49@ev;_b;*=T29D9kEkLFqAn}CAuMSxU6}D6S?UOg=eq?_
zm^&F(3=)qA5lXTDx}0)F=kQ7IcLGBVvAoaU4w+Oh=~Lmp-S_2;wB<}8d|!K?=axiV
zp-06|AcLG8PHTs%bDuY;c)taqq^AyyOh#cgKMRs3uRHD$|8|~|t0X7V1hojfAOk-{
zxni8Luo)6(+ZTPIa_m%UMS$+1N@8zYy_Koh`Jo*x0i>#^j~V{M_gfPCA57{9oidcd
zhqq-iwe6cup_-X>5)EK?y$ucXj$~o`*V5)6^8Y=PD2$6q)T-Fmjrw!Pe+oibARiJH
zBCdp|Yl|g;jJZr%_n~8uXd^Z0q!nh3N~A^}Y!8fVhry_ea(|Q6Rd5hA98bjzG(sgG
zqpXI7uvoce>1xDP4XIF)aiSr!S`6sl-h<IRP5$v=jX`1laI|=FMv>izVnJe+Gu|zL
z$R}bl+SMj?z1|FKUPc^y!jPee&z3B*{dzlN!*UIN1hs5}wfj8m0RRxf#%|PX<-6r;
z60IAw#_EG#d^43ViMbg70h0``iJ<SI`sZFPTj5@IKYo3$=ys!3K-Vd&$3o0>-&vN0
z%$m&ZA5wfn2hn%NF2U%0t6M;Oem6<MYKemYQBE%xi9Qww-_9H9&i(jT19h$JMVSr=
z!~?hP@Pz_M@1g6!sVv?3?(=(J+drzz<3H^GtDA9Lb)r@a-K$DRR-zVi{8QOjUL9Za
zJm15bB`m}C;n4K12iDUt#=i)@W)`C0363Kp*T=;&V;u@r^$?Y<cpJw(Ru)3adJ6Pp
zV=b|06GKIwCP+-(PCyt=X74>OlNcQqn}qnCE?C!3HnTB~qXJta8}k5^NzMbzv_1!U
zXBY7qM^TddqiR>;j#`u5{@}BtJ&Yy_-zQ{h>EMt*OX9F#htRs!xU-f-USq~|gaIce
zhyW-=wt`kd%w)13iaHwMR;l!4Ti0iG25T+XV%nvQEO`Y*&@~^gFh;r25=2s6+l_Hy
z>_bwq>49;=3g6h~WC#d20@S5wXz-zvk7;233#Wk-$?JQROZfMM@(}-jQKa{E3&UGK
zL0}PcS+S+T!3O3DYL!Z8-%pzOlQJx<>vYlXy{9A;B<H(M7gO(}+sblT*^;&}L<*M-
zfIU%GnTzOeo%kcsgRwuC&7wjSB{$V>m@HK<xO~B~&SRl@)(u*`+40eH`tnc4umVIM
zt1mLp!kvzm3p*wP8Tda@b8EKIntpH9J{t&|=n436r_gJm-E(7SW{|qv<5YLTx9DNo
z+E`t}e`jK|&U-1)EL1}R5Y<}|wJ4Igki*4}0Dzv_I4wm1bXqxMd0o5|S{=y?#~lqE
zjO|WTZPzOZfDUI1{<gNzTj%#HizCrrH4vxLKe3Ho6@&$MoFVpF<-tTj(yoG7<cIQe
zALME2Sl9o{Pk(wfILpOkn!x-Aa=k0?0M3>IzV6A+JENjXi_Su9(NL*?4QtH)!`Q38
zCV2I`H~EEw%_<@G@uK)sPtLzw&{K3gQSRWt9WjP8uMoQYiV7jJHegZ=l`_;Radxd5
zGZbyslZ;8vX6RB9Yq>7-J-f&QWqo`JVw^|cBPgQGZ5;J#Ff%!9hJX^tiK}yhJrurd
z1(f%|&W~VGd%J3n+*LJY%>Xms@5-BFm*HH)ngyxr#QmxwsCIY9Of04`+}?oSyK+JD
zK@bfkpa5V|Nl!&uxO6mJXTV;D2)@A2Yw^C{2D~Dkw^Lo83_XWVWlrF;HB=A*v=f3g
zD?=(B6mU=@eIzVKoG9+@{D;k~JBtZiaoK2Ykc4~`O<TK@T;(7_UW=;=;u(9pNR(uO
zZDA>o#M`3$tzREpq)2n$x_twO>c%5C9!vrfyfnO;M7R^Rl+#lZ0b{tT7KqSu4~rH}
zM8rtMzrt5Gmk?`aqNKzQ>pxGit00w2<;W*xhzmFMDg}dq(3H1w&g8Og;+);s%jNj>
zv~~5TXgx@I>i~nU?^<}lS(X{|IU@?f-e2%Ypwr1z2W9j8x{4gX47&;YT+cUSwMJL;
z#4(VwN{wGQc5shs4s*z@hm!1Glf|r{awG6cPpHhosdaXFEjluRShk#6>^lzuDyC`g
z$f`!n#gt6V=Y`1OgT?Oe@cFf0aAhj3u!j=JddC20R~KH9;7pnk&Y4EwFGYi&<hzpE
zK;3TC!w2lx+uwL9D;7e5+TWjAK*+PDJJGAB%qqAQofoD2n(_F<ZOluAD{^aqj?ejF
zqUEgC^n-?;IC+ikv)7KFRGqq~o!kG7+2C`>=qBKVEmS00g0%ce^gk^R*0d7^7O*8%
zr*J9nYV)+-XC+>#BD$e)HH$%p)lrn5KgWqDU)f4gS1%%i>W7k&X3RgH=MZZN5{Z(M
zp#Cgx74!rTGmh(kXs2FlMqw!`7U84Uqs~^K+RXIal6yjp{+U|G{35ncvO2#Y)>~i>
zk~#o)n5r_tAfk{?KDoj~cUM{z7O*;!-Soa}az7735)K9mRSYh|(j(?%1}w+SzPS~}
z(c+R&q1t{G62JcjUiJPuC(_o-jq;dTWCKL^0=1yJe||CyP9r56ta($$pJ)My;EbMs
zeSN9p1oUDA_k?J$5VGR?R226_m25I6r7Xk!QdPZ#*F}(n%@Ppc%p6ozC(qLA;5|LM
z8SLmhYH~D6d+}CXwVraTHn~3@o&Jij<8nFwS;dfn9$}_+bP-Q;_LQnj!!3xnKRA|H
z4;-h1kBp?qD{7Q{!qv@AL1vm~jb0zeR#8(6W(L?)UFMGh5q#l_3n?aIYAI7VrIvj<
zCcuyen5Q%FYUV6WqSXRdlAzNm=5rtcz&X@6ig;VJ^9}vkG_Pc9Lm?%cs@giS_@)Vw
zK8M`$7o=_s7a$E6RcrSBHS3kxvlUax0CUcbF;f#HRN8kn{987Y8A9Oe%I&s~B6nw2
zsU8h20=7XV%Po)1X|HxJIN?{IX<D%I(RjQ=XF4_p7~o3~fY<@nP5I;02tTvrg)UK?
zCW2V<NRa)|SId|-YcbNu{qG?5t+X<)<B8C!4`jsK=g7)aey4wD+R{7tk0{BHYdYaG
z>q0iqOzi93+sEbXgv<CMV4)iSVv}d@IM8EqP4t<w1`{8c?{Jo0ASdtKCaeDUtzp#q
znJG}`X8TAeYiPx!r0PiDVo9fE)5Z@@{-nhvLWNC4#PGujb%$`hQZi5mCj9C*XC1|^
z3a_Dpp1vH6kHIK_?`4Gdt#vfrd}?GPr~yV_sBjx26dlsP12B}ErlJlhIrL-Al7l2p
zU24%5P0G-HTk8m!H>*9LNu0l@AI2!t<6;puLU23}<v4bMxr6`Z;0JL#6gbGq89|)M
zo+B8}Q|z@wlQ7Ywb1Yl4Dm?mxaAMz=BjD!s(|)xrsle)bG^t}Dc`^W)XPQT)7Nn{;
z9B8hQ3!>d1j5Z4AVHq4xg<ee0&e?|Wy{}<^C1c{QqeQ%8C~NQzh3P4PAUZ4*=<R=n
zijU1g<CsZQZ-v)?2xB$9r9IknC8?*NqByc@gjv6Mp34VLT4acenf|1%95*G=W@^+z
zNTE$u_lb&7#{DFRBP$+^8we$W(#$aUiLoShm_I4(VM=v&Rx*+B8ZRQ@P^QF9pwBzc
zuEe~(H0y8E;fAtd+j_?=3{ElJ%y(cUOn+FdCUY&<67{jMB=L6v{}q7B%s`#ye@?75
z_n<|0v?3QWW)kRfkiTyGbMU__n;|3(7o`g20b_X*4np*{UB8)J@pvP_<f>-NRI%#g
z{oD#6S8o&r6R6x@oiOO#j)+%fgYqpHrMV4D*&xtn&zLifpumNXaB)9i<jbRifoPxe
z0r>|Zy~87i@V{p$rDRDe05S{ia<UC4{3$8AaPz0K#{MXs-vC%}gT#m(f({XEGQJmb
zuDWVg^@wdfijURqS}|V5<N;ANLS}S4m_oJO8|z2H|AsP;kYK1-Oi8<e*buMY@V>+b
z8XPp=_#W;KmH1XtG-`9mWNULN=V?`|ZIqvx8Y-Co1xOiW?;v+RM_tPSaaLN$V{vU7
zoc}rFh~Jmu<~1rz+aEX*7TD%(>1xX$mvhW!&{$tmveN5q2cAEke7q>cm2ki1M09QF
zx;MM|8ZZC5GP=)HJyW(oh<r0}NbXf|INE8Z7%;Mho2yoVCMGmgD@8RgK{A90;JpqB
zk}*uOA_QPwM_6JdLYrrVa&cffLvCE`1w4B)F>;cw<&ZrrAd|iBk4Pbe+s0x`9ohE4
zc2WlRyw`)s)*$mOX85Oellxr&0aPpo^29!MH&_{q$+Pa%iTIJeTDvsRK)0i{mGbC;
zg-fGKjaJ9mcOE<k`e2l|{*&ehqq%b#H7!Csk=#NWOO2k|4b*62+olWp!QuWDdJEwS
znsz2~^yEs{N24e>MW}n(AKU}nK3b982*Y7$=I<w&JCj1SN~YopG`ehzRW3|iT&R?M
zhx7VM7~xo`Op$hEFW=&%NsyhV?|Gw9rtSi#5aC)*xn>1#)?XL?jN@#{r*?f@59N{D
zfZgtKj!c$r!3c=0bFuASLQv+FY~a4(-&nI2y}u^8%OQx=c`)ZMK-0l`Yhy{<=Xvp;
z_2nw=4t`y>WK$HagX}cqPk;cnC%xc!@JuE$TE*z_%`?P(1Aan4yfPl9?UgL-6RGL)
z;Q>)zISEzuhjh3acj27>Jwp~nX8H~v?-K_rstNu@0Om$3`FsW>uncO2!`ojsk~+*#
zqxsB9vRq=x{@czz7S_y2fu<Hfj~@amFMRCev3|ERitkseRKk}m+Dr}nPBp~*<;u5O
z7@pkzDN1&hC!hCXcx3k2hnqvYj(ta>-O9tOw|%J+0~DZ1Is`Y-Vl$2_4!Bj=Bx3*i
z59LhD*ux^o(TzfCbpC)z^#0h8`%_ZB<Jf<52y8N6X~0o6kKUo~%IH^afj047bwF(A
z8`8*mMg)b0Sl3C;|HOX6Piia!5%%K*Fv24!$DnX$V`x<&YGsq>v%YDF=;Th5{#SsZ
zwpU7aOyrC}4XUR+2+M<QE%^^f06JN5tJe^n!&v8pQQuk9dAJRbe+WMJ8R{dS+-J*+
za!1CCHiE9qgf4h~=1z9dVkFV>BYAK^;+k8AjGPbE4!{6e@p{vn@9Sj~F5hQK6iN>B
z|Ly`%vyrPM4RA4AI?w(_SXv`NiJr9c6OKYa*gw9NrLm}W-gCJlOiDuK_Bm3%0D%Tw
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
Ef`vC6ApigX

diff --git public/favicon.ico public/favicon.ico
new file mode 100644
index 0000000000000000000000000000000000000000..e69de29bb2d1d6434b8b29ae775ad8c2e48c5391
GIT binary patch
literal 0
Hc$@<O00001

